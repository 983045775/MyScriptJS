{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///myscript.min.js","webpack:///webpack/bootstrap 3e6209a83eb7fb03d1ad","webpack:///./myscript.js","webpack:///./configuration/DebugConfig.js","webpack:///./configuration/LoggerConfig.js","webpack:///../~/loglevel/lib/loglevel.js","webpack:///./util/ModelStats.js","webpack:///./recognizer/cdkv3/rest/Cdkv3RestTextRecognizer.js","webpack:///./recognizer/DefaultRecognizer.js","webpack:///./configuration/MyScriptJSConstants.js","webpack:///./model/StrokeComponent.js","webpack:///./recognizer/networkHelper/rest/networkInterface.js","webpack:///./recognizer/CryptoHelper.js","webpack:///../~/crypto-js/index.js","webpack:///../~/crypto-js/core.js","webpack:///../~/crypto-js/x64-core.js","webpack:///../~/crypto-js/lib-typedarrays.js","webpack:///../~/crypto-js/enc-utf16.js","webpack:///../~/crypto-js/enc-base64.js","webpack:///../~/crypto-js/md5.js","webpack:///../~/crypto-js/sha1.js","webpack:///../~/crypto-js/sha256.js","webpack:///../~/crypto-js/sha224.js","webpack:///../~/crypto-js/sha512.js","webpack:///../~/crypto-js/sha384.js","webpack:///../~/crypto-js/sha3.js","webpack:///../~/crypto-js/ripemd160.js","webpack:///../~/crypto-js/hmac.js","webpack:///../~/crypto-js/pbkdf2.js","webpack:///../~/crypto-js/evpkdf.js","webpack:///../~/crypto-js/cipher-core.js","webpack:///../~/crypto-js/mode-cfb.js","webpack:///../~/crypto-js/mode-ctr.js","webpack:///../~/crypto-js/mode-ctr-gladman.js","webpack:///../~/crypto-js/mode-ofb.js","webpack:///../~/crypto-js/mode-ecb.js","webpack:///../~/crypto-js/pad-ansix923.js","webpack:///../~/crypto-js/pad-iso10126.js","webpack:///../~/crypto-js/pad-iso97971.js","webpack:///../~/crypto-js/pad-zeropadding.js","webpack:///../~/crypto-js/pad-nopadding.js","webpack:///../~/crypto-js/format-hex.js","webpack:///../~/crypto-js/aes.js","webpack:///../~/crypto-js/tripledes.js","webpack:///../~/crypto-js/rc4.js","webpack:///../~/crypto-js/rabbit.js","webpack:///../~/crypto-js/rabbit-legacy.js","webpack:///../~/crypto-js/hmac-sha512.js","webpack:///./model/RecognizerContext.js","webpack:///./recognizer/cdkv3/rest/Cdkv3CommonRestRecognizer.js","webpack:///./model/InkModel.js","webpack:///./model/Symbol.js","webpack:///./renderer/canvas/symbols/MusicSymbolCanvasRenderer.js","webpack:///./renderer/canvas/symbols/ShapeSymbolCanvasRenderer.js","webpack:///./recognizer/cdkv3/common/Cdkv3CommonTextRecognizer.js","webpack:///./configuration/MyScriptJSOptions.js","webpack:///../~/assign-deep/index.js","webpack:///../~/is-primitive/index.js","webpack:///../~/assign-symbols/index.js","webpack:///../~/kind-of/index.js","webpack:///../~/buffer/index.js","webpack:///../~/base64-js/index.js","webpack:///../~/ieee754/index.js","webpack:///../~/buffer/~/isarray/index.js","webpack:///../~/is-buffer/index.js","webpack:///./InkPaper.js","webpack:///./configuration/MyScriptJSBehaviors.js","webpack:///./grabber/PointerEventGrabber.js","webpack:///./renderer/canvas/CanvasRenderer.js","webpack:///./renderer/canvas/symbols/StrokeSymbolCanvasRenderer.js","webpack:///./renderer/canvas/symbols/TextSymbolCanvasRenderer.js","webpack:///./renderer/canvas/stroker/QuadraticCanvasStroker.js","webpack:///./renderer/QuadraticUtils.js","webpack:///./recognizer/cdkv3/rest/Cdkv3RestMathRecognizer.js","webpack:///./recognizer/cdkv3/common/Cdkv3CommonMathRecognizer.js","webpack:///./recognizer/cdkv3/rest/Cdkv3RestAnalyzerRecognizer.js","webpack:///./recognizer/cdkv3/common/Cdkv3CommonShapeRecognizer.js","webpack:///./recognizer/cdkv3/rest/Cdkv3RestShapeRecognizer.js","webpack:///./util/PromiseHelper.js","webpack:///./recognizer/cdkv3/rest/Cdkv3RestMusicRecognizer.js","webpack:///./recognizer/cdkv3/websocket/Cdkv3WSMathRecognizer.js","webpack:///./recognizer/cdkv3/websocket/Cdkv3WSRecognizerUtil.js","webpack:///./recognizer/networkHelper/websocket/networkWSInterface.js","webpack:///./recognizer/cdkv3/websocket/Cdkv3WSBuilder.js","webpack:///./recognizer/cdkv3/websocket/Cdkv3WSTextRecognizer.js","webpack:///./callback/EventCallback.js","webpack:///./configuration/MyScriptJSStyles.js","webpack:///./model/UndoRedoContext.js","webpack:///./model/UndoRedoManager.js","webpack:///./renderer/canvas/ImageRenderer.js","webpack:///./InkPaperFacade.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","getAvailableLanguageList","register","InkPaper","DebugConfig","undefined","_DebugConfig","_DebugConfig2","_InkPaper","_InkPaperFacade","_interopRequireWildcard","newObj","key","prototype","hasOwnProperty","_LoggerConfig","loggerConfig","_ModelStats","modelStats","utilLogger","testLogger","recognizerLogger","modelLogger","rendererLogger","inkpaperLogger","grabberLogger","_loglevel","log","logging","noConflict","setDefaultLevel","levels","ERROR","setLevel","getLogger","INFO","DEBUG","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","realMethod","methodName","console","undefinedType","bindMethod","noop","method","bind","Function","e","apply","arguments","enableLoggingWhenConsoleArrives","level","loggerName","replaceLoggingMethods","i","logMethods","length","methodFactory","defaultMethodFactory","Logger","name","defaultLevel","persistLevelIfPossible","levelNum","levelName","toUpperCase","window","localStorage","storageKey","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","indexOf","exec","slice","self","currentLevel","TRACE","WARN","SILENT","getLevel","persist","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","TypeError","logger","_log","computeStats","model","stats","strokesCount","pointsCount","byteSize","humanSize","humanUnit","rawStrokes","restMessage","Cdkv3RestTextRecognizer","buildInput","MyScriptJSOptions","overrideDefaultOptions","map","stroke","x","reduce","a","b","textInput","toFixed","_Cdkv3RestTextRecognizer","_MyScriptJSOptions","getInfo","assign","_Cdkv3CommonRestRecognizer","commonRestV3Configuration","textRestV3Configuration","options","instanceId","input","inputUnits","textInputType","_MyScriptJSConstants2","InputType","MULTI_LINE_TEXT","components","StrokeComponent","toJSON","textParameter","recognitionParams","debug","data","applicationKey","server","JSON","stringify","hmacKey","hmac","CryptoHelper","computeHmac","recognize","recognizerContext","modelReference","recognizerContextReference","textInstanceId","_RecognizerContext","updateSentRecognitionPositions","NetworkInterface","post","scheme","host","then","response","rawResult","type","toLowerCase","_Cdkv3CommonTextRecognizer","processRenderingResult","updateModelReceivedPosition","reset","resetRecognitionPositions","Promise","resolve","close","init","_DefaultRecognizer","enumerable","get","_MyScriptJSConstants","_StrokeComponent","_networkInterface","_CryptoHelper","RecognitionType","TEXT","protocol","Protocol","REST","apiVersion","Constants","MATH","SHAPE","MUSIC","ANALYZER","InputMode","CURSIVE","ISOLATED","SUPERIMPOSED","VERTICAL","CHAR","WORD","SINGLE_LINE_TEXT","ResultDetail","CHARACTER","ResultType","Math","LATEX","MATHML","SYMBOLTREE","OFFICEOPENXMLMATH","Music","MUSICXML","SCORETREE","WEBSOCKET","ModelState","INITIALIZING","ASKING_FOR_RECOGNITION","PROCESSING_RECOGNITION_RESULT","RENDERING_RECOGNITION","RECOGNITION_ERROR","RECOGNITION_OVER","RecognitionTrigger","QUIET_PERIOD","PEN_UP","DEMAND","computeDistance","y","xArray","yArray","lastIndexPoint","distance","sqrt","pow","isNaN","computeLength","lArray","computePressure","ratio","pressure","max","parseFloat","filterPointByAcquisitionDelta","width","delta","ret","abs","createStrokeComponent","properties","defaultStroke","t","l","addPoint","point","strokeReference","push","start","end","slicedStroke","color","getPointByIndex","index","parse","req","result","responseText","transformRequest","str","keys","forEach","join","xhr","url","notify","reject","request","XMLHttpRequest","open","withCredentials","setRequestHeader","onerror","Error","onprogress","total","onload","status","onreadystatechange","readyState","send","src","params","newSrc","jsonInput","_typeof","_hmacSha2","toString","_cryptoJs","enc","Hex","Symbol","iterator","constructor","_hmacSha","undef","CryptoJS","create","F","subtype","C","C_lib","lib","Base","extend","overrides","mixIn","$super","instance","propertyName","clone","WordArray","words","sigBytes","encoder","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","ceil","random","nBytes","rcache","r","m_w","m_z","mask","_r","C_enc","hexChars","bite","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","C_algo","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","message","_createHmacHelper","HMAC","algo","X32WordArray","C_x64","x64","Word","high","low","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","ArrayBuffer","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","swapEndian","word","Utf16","Utf16BE","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","parseLoop","base64Str","base64StrLength","reverseMap","bits1","bits2","Base64","_map","base64Chars","byte1","byte2","byte3","triplet","j","charAt","paddingChar","_reverseMap","paddingIndex","FF","d","s","n","GG","HH","II","T","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","H_i","HmacMD5","W","SHA1","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","SHA224","HmacSHA224","X64Word_create","X64Word","X64WordArray","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","al","bh","bl","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","Wi","Wih","Wil","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1l","t1h","t2l","t2h","HmacSHA512","SHA384","HmacSHA384","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newX","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","state","_state","nBlockSizeLanes","M2i","M2i1","lane","round","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","f1","z","f2","f3","f4","f5","rotl","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","ar","br","cr","dr","er","hr","zl","zr","sl","sr","HmacRIPEMD160","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","PBKDF2","keySize","iterations","compute","password","salt","derivedKey","blockIndex","derivedKeyWords","blockIndexWords","block","blockWords","blockWordsLength","intermediate","intermediateWords","EvpKDF","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","finalProcessedData","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","C_mode","StreamCipher","finalProcessedBlocks","mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","xorBlock","_prevBlock","processBlock","encryptBlock","thisBlock","decryptBlock","C_pad","pad","Pkcs7","nPaddingBytes","paddingWord","paddingWords","padding","unpad","CipherParams","BlockCipher","modeCreator","_mode","cipherParams","formatter","C_format","format","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","derivedParams","CFB","generateKeystreamAndEncrypt","keystream","CTR","counter","_counter","CTRGladman","incWord","b1","b2","b3","incCounter","OFB","_keystream","ECB","AnsiX923","lastBytePos","Ansix923","Iso10126","Iso97971","ZeroPadding","NoPadding","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","s0","s1","s2","s3","t0","t3","exchangeLR","_lBlock","_rBlock","exchangeRL","PC1","PC2","BIT_SHIFTS","SBOX_P","0","268435456","536870912","805306368","1073741824","1342177280","1610612736","1879048192","2147483648","2415919104","2684354560","2952790016","3221225472","3489660928","3758096384","4026531840","134217728","402653184","671088640","939524096","1207959552","1476395008","1744830464","2013265920","2281701376","2550136832","2818572288","3087007744","3355443200","3623878656","3892314112","4160749568","1","268435457","536870913","805306369","1073741825","1342177281","1610612737","1879048193","2147483649","2415919105","2684354561","2952790017","3221225473","3489660929","3758096385","4026531841","134217729","402653185","671088641","939524097","1207959553","1476395009","1744830465","2013265921","2281701377","2550136833","2818572289","3087007745","3355443201","3623878657","3892314113","4160749569","16777216","33554432","50331648","67108864","83886080","100663296","117440512","150994944","167772160","184549376","201326592","218103808","234881024","251658240","8388608","25165824","41943040","58720256","75497472","92274688","109051904","125829120","142606336","159383552","176160768","192937984","209715200","226492416","243269632","260046848","285212672","301989888","318767104","335544320","352321536","369098752","385875968","419430400","436207616","452984832","469762048","486539264","503316480","520093696","276824064","293601280","310378496","327155712","343932928","360710144","377487360","394264576","411041792","427819008","444596224","461373440","478150656","494927872","511705088","528482304","1048576","2097152","3145728","4194304","5242880","6291456","7340032","9437184","10485760","11534336","12582912","13631488","14680064","15728640","524288","1572864","2621440","3670016","4718592","5767168","6815744","7864320","8912896","9961472","11010048","12058624","13107200","14155776","15204352","16252928","17825792","18874368","19922944","20971520","22020096","23068672","24117248","26214400","27262976","28311552","29360128","30408704","31457280","32505856","17301504","18350080","19398656","20447232","21495808","22544384","23592960","24641536","25690112","26738688","27787264","28835840","29884416","30932992","31981568","33030144","65536","131072","196608","262144","327680","393216","458752","589824","655360","720896","786432","851968","917504","983040","32768","98304","163840","229376","294912","360448","425984","491520","557056","622592","688128","753664","819200","884736","950272","1015808","1114112","1179648","1245184","1310720","1376256","1441792","1507328","1638400","1703936","1769472","1835008","1900544","1966080","2031616","1081344","1146880","1212416","1277952","1343488","1409024","1474560","1540096","1605632","1671168","1736704","1802240","1867776","1933312","1998848","2064384","4096","8192","12288","16384","20480","24576","28672","36864","40960","45056","49152","53248","57344","61440","2048","6144","10240","14336","18432","22528","26624","30720","34816","38912","43008","47104","51200","55296","59392","63488","69632","73728","77824","81920","86016","90112","94208","102400","106496","110592","114688","118784","122880","126976","67584","71680","75776","79872","83968","88064","92160","96256","100352","104448","108544","112640","116736","120832","124928","129024","256","512","768","1024","1280","1536","1792","2304","2560","2816","3072","3328","3584","3840","128","384","640","896","1152","1408","1664","1920","2176","2432","2688","2944","3200","3456","3712","3968","4352","4608","4864","5120","5376","5632","5888","6400","6656","6912","7168","7424","7680","7936","4224","4480","4736","4992","5248","5504","5760","6016","6272","6528","6784","7040","7296","7552","7808","8064","16","32","48","64","80","96","112","144","160","176","192","208","224","240","8","24","40","56","72","88","104","120","136","152","168","184","200","216","232","248","272","288","304","320","336","352","368","400","416","432","448","464","480","496","264","280","296","312","328","344","360","376","392","408","424","440","456","472","488","504","2","3","4","5","6","7","9","10","11","12","13","14","15","2147483650","2147483651","2147483652","2147483653","2147483654","2147483655","2147483656","2147483657","2147483658","2147483659","2147483660","2147483661","2147483662","2147483663","17","18","19","20","21","22","23","25","26","27","28","29","30","31","2147483664","2147483665","2147483666","2147483667","2147483668","2147483669","2147483670","2147483671","2147483672","2147483673","2147483674","2147483675","2147483676","2147483677","2147483678","2147483679","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","lBlock","rBlock","TripleDES","_des1","_des2","_des3","generateKeystreamWord","S","_S","_i","_j","keystreamWord","RC4","keySigBytes","keyByteIndex","keyByte","RC4Drop","drop","nextState","X","_X","_C","C_","_b","gx","ga","gb","G","Rabbit","IV","IV_0","IV_1","i0","i2","i1","i3","RabbitLegacy","createEmptyRecognizerContext","recognitionContexts","initPromise","lastRecognitionPositions","lastSentPosition","lastReceivedPosition","suffixUrl","websocket","callback","currentReconnectionCount","modelRef","recognizerContextRef","shouldAttemptImmediateReconnect","autoReconnect","maxRetryCount","LOST_CONNEXION_MESSAGE","_InkModel","availableTriggers","preferredTrigger","_toConsumableArray","arr","Array","isArray","arr2","from","createModel","currentStroke","currentRecognitionId","defaultSymbols","_Symbol","getDefaultSymbols","recognizedSymbols","creationTime","Date","getTime","canUndo","canRedo","canClear","needRedraw","filter","symbol","addStroke","extractPendingStrokes","position","initPendingStroke","appendToPendingStroke","endPendingStroke","getBorderCoordinates","modelBounds","minX","Number","MAX_VALUE","maxX","MIN_VALUE","minY","maxY","getSymbolsBounds","extractStrokesFromInkRange","firstStroke","lastStroke","firstPoint","lastPoint","slicedStrokes","cloneModel","clonedModel","mergeModels","_len","models","mergeBounds","boundsA","boundsB","getLineBounds","line","getEllipseBounds","ellipse","angleStep","z1","cos","orientation","z3","z2","z4","maxRadius","minRadius","sweepAngle","angle","startAngle","alpha","atan2","cosAlpha","sinAlpha","center","getTextLineBounds","textLine","topLeftPoint","height","getClefBounds","clef","boundingBox","getStrokeBounds","symbols","bounds","boundsRef","getDefaultMusicSymbols","defaultStaff","musicParameter","staff","defaultClef","yAnchor","top","gap","count","_MusicSymbolCanvasRenderer","MusicClefs","getBoundingBox","createImage","browserDocument","img","createElement","dataset","style","display","preloadMusicSymbols","element","appendChild","svg","drawStaff","context","p1","p2","canvas","_ShapeSymbolCanvasRenderer","drawLine","drawClef","drawImage","querySelector","drawMusicSymbol","MusicSymbols","error","xAnchor","accidental","arpeggiate","bar","beam","decoration","dots","head","ledgerLine","rest","stem","tieOrSlur","timeSignature","phi","returnedAngle","PI","drawEllipseArc","centerPoint","boundariesPoints","save","beginPath","moveTo","lineTo","restore","drawArrowHead","headPoint","beta","contextReference","fillStyle","strokeStyle","fill","drawShapeEllipse","shapeEllipse","points","beginDecoration","beginTangentAngle","endDecoration","endTangentAngle","drawShapeLine","shapeLine","drawShapeSymbol","lineWidth","elementType","ShapeSymbols","shape","candidates","selectedCandidateIndex","table","lines","recognizedShape","primitives","primitive","_assignDeep2","defaultOptions","_assignDeep","undoRedoMaxStackSize","renderingParams","renderer","stroker","triggerRecognitionOn","triggerRecognitionQuietPeriod","triggerCallbacksAndRenderingQuietPeriod","maxPingLostCount","pingIntervalMillis","xyFloatPrecision","timestampFloatPrecision","mathParameter","resultTypes","columnarOperation","userResources","scratchOutDetectionSensitivity","language","textInputMode","resultDetail","textProperties","textCandidateListSize","shapeParameter","rejectDetectionSensitivity","doBeautification","divisions","octave","analyzerParameter","target","len","val","isPrimitive","isObject","assignSymbols","hasOwn","typeOf","receiver","objects","getOwnPropertySymbols","isEnumerable","propertyIsEnumerable","provider","names","Buffer","isBuffer","Boolean","RegExp","global","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","encoding","checked","string","isEncoding","actual","write","fromArrayLike","array","copy","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","read","buf","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","res","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","replace","INVALID_BASE64_RE","trim","units","Infinity","leadSurrogate","byteArray","hi","lo","toByteArray","dst","INSPECT_MAX_BYTES","poolSize","_augment","species","configurable","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","equals","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","placeHoldersCount","b64","tmp","placeHolders","Arr","L","revLookup","tripletToBase64","num","lookup","encodeChunk","uint8","output","extraBytes","parts","maxChunkLength","len2","isLE","mLen","eLen","eMax","eBias","nBits","NaN","rt","LN2","isSlowBuffer","_classCallCheck","Constructor","manageResetState","recognizer","isResetRequired","isRecognitionModeConfigured","inkPaper","recognitionMode","raiseError","domElement","dispatchEvent","CustomEvent","detail","triggerCallBacks","callbacks","modelChangedCallback","info","drawModel","rendererContext","triggerRenderingAndCallbackAfterDelay","inkPaperRef","clearTimeout","resulttimer","setTimeout","launchRecognition","modelToRecognize","renderAndFireAfterTimeoutIfRequired","mergeModelsCallback","modelRecognized","InkModel","managedModel","catch","stack","connexionError","askForTimeOutRecognition","recotimer","updateModelAndAskForRecognition","managePenUp","UndoRedoManager","pushModel","undoRedoContext","modelClone","manageResize","resize","askForResize","timer","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","_MyScriptJSBehaviors","MyScriptJSBehaviors","_MyScriptJSStyles","MyScriptJSStyles","_UndoRedoContext","UndoRedoContext","_UndoRedoManager","ModelStats","_ImageRenderer","ImageRenderer","RecognizerContext","customStyle","behaviors","classList","add","innerBehaviors","overrideDefaultBehaviors","drawCurrentStroke","_this","undo","_this2","redo","_this3","clear","innerOptions","behavior","getBehaviorFromOptions","createUndoRedoContext","innerCustomStyle","overrideDefaultStyle","_this4","grabberContext","removeEventListener","innerBehavior","grabber","attachEvents","innerRecognizer","innerRenderer","hasChildNodes","removeChild","firstChild","populateDomElement","getImage","defaultBehaviors","rendererList","strokerList","recognizerList","_PointerEventGrabber","PointerEventGrabber","_CanvasRenderer","CanvasRenderer","_QuadraticCanvasStroker","QuadraticCanvasStroker","_Cdkv3RestMathRecognizer","Cdkv3RestMathRecognizer","_Cdkv3RestAnalyzerRecognizer","Cdkv3RestAnalyzerRecognizer","_Cdkv3RestShapeRecognizer","Cdkv3RestShapeRecognizer","_Cdkv3RestMusicRecognizer","Cdkv3RestMusicRecognizer","_Cdkv3WSMathRecognizer","Cdkv3WSMathRecognizer","_Cdkv3WSTextRecognizer","Cdkv3WSTextRecognizer","_EventCallback","_EventCallback2","find","item","stopPropagation","event","preventDefault","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","floatPrecisionArray","extractPoint","eventRef","changedTouches","rect","getBoundingClientRect","clientX","left","clientLeft","clientY","clientTop","timeStamp","ignoreHandler","evt","pointerId","penDownHandler","activePointerId","penDown","penMoveHandler","penMove","penUpHandler","penUp","events","addEventListener","getPixelRatio","getContext","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","detectPixelRatio","tempCanvas","canvasRatio","createCanvas","clientWidth","clientHeight","resizeCanvas","pixelRatio","parentNode","scale","renderingCanvas","capturingCanvas","renderingCanvasContext","capturingCanvasContext","drawSymbol","_StrokeSymbolCanvasRenderer","drawStroke","_TextSymbolCanvasRenderer","TextSymbols","drawTextSymbol","warn","clearRect","drawUnderline","underline","label","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","inputCharacter","char","renderArc","radius","arc","renderLine","begin","linkPoints1","_QuadraticUtils","computeLinksPoints","computeAxeAngle","linkPoints2","renderFinal","ARCSPLIT","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","nbquadratics","computeMiddlePoint","closePath","point1","point2","mathRestV3Configuration","mathInput","mathInstanceId","_Cdkv3CommonMathRecognizer","extractRecognizedSymbolsFromMathResult","strokeList","scratchOutResults","_ret","inkRanges","scratchOutResult","erasedInkRanges","v","inkRange","component","analyzerRestV3Configuration","parameter","analyzerInput","extractSymbols","_Cdkv3CommonShapeRecognizer","getStyleFromInkRanges","textSegmentResult","selectedCandidateIdx","extractShapeSymbols","extractRecognizedSymbolsFromAnalyzerResult","shapes","tables","textLines","analyzerInstanceId","strokes","segment","selectedCandidate","extractRecognizedSymbolsFromShapeResult","segments","shapeRestV3Configuration","shapeInput","shapeInstanceId","PromiseHelper","destructurePromise","instanceSessionId","promise","_PromiseHelper","resolveParam","rejectParam","musicRestV3Configuration","musicInput","musicInstanceId","Cdkv3WSRecognizerUtil","commonWebSocketV3Configuration","mathWebSocketV3Configuration","buildMathInput","parameters","_Cdkv3WSRecognizerUtil","buildUrl","destructuredInitPromise","initCallback","Cdkv3WSWebsocketBuilder","buildWebSocketCallback","NetworkWSInterface","openWebSocket","recognitionContext","recognitionContextReference","buildInputFunction","sendException","sendFailedException","destructuredRecognitionPromise","recognitionPromiseCallbacks","recognitionError","_networkWSInterface","_Cdkv3WSBuilder","reason","infinitPing","websocketRef","pingCount","maxPingLost","addWebsocketAttributes","socket","WebSocket","onopen","onclose","onmessage","parsedMessage","callBackParam","buildInitInput","answerToHmacChallengeCallback","serverMessage","challenge","simpleCallBack","payload","updateInstanceId","onResult","shift","destructuredPromise","textWebSocketV3Configuration","buildTextInput","eventCallback","defaultStyle","currentPosition","maxSize","getModel","undoRedoContextReference","borderCoordinates","margin","renderStructure","translate","toDataURL","inputMode"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAA,SAAAD,IAEAD,EAAA,SAAAC,KACCK,KAAA,WACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAP,OAGA,IAAAC,GAAAO,EAAAD,IACAP,WACAS,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAS,QAAA,EAGAT,EAAAD,QAvBA,GAAAQ,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,SAGAR,EAAA,KDgBM,SAASL,EAAQD,EAASM,GAE/B,YAeA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAbvFG,OAAOC,eAAepB,EAAS,cAC3BqB,OAAO,IAEXrB,EAAQsB,yBAA2BtB,EAAQuB,SAAWvB,EAAQwB,SAAWxB,EAAQyB,YAAcC,ME7DhG,IAAAC,GAAArB,EAAA,GFiEKsB,EAAgBb,EAAuBY,GEhE5CE,EAAAvB,EAAA,IACAwB,EAAAxB,EAAA,GFuECN,GEpEGyB,YFoEmBG,EAAcV,QACpClB,EEpEGwB,SFoEgBK,EAAUL,SAC7BxB,EEpEGuB,SFoEgBO,EAAgBP,SACnCvB,EEpEGsB,yBFoEgCQ,EAAgBR,0BAI9C,SAASrB,EAAQD,EAASM,GAE/B,YAcA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAZlQb,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GGrFV,IAAAe,GAAA9B,EAAA,GAAY+B,EH0FQN,EAAwBK,GGzF5CE,EAAAhC,EAAA,GAAYiC,EH6FMR,EAAwBO,EAezCtC,GAAQkB,SG/FQmB,eAAcE,eHmGzB,SAAStC,EAAQD,EAASM,GAE/B,YAWA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EATlQb,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQwC,WAAaxC,EAAQyC,WAAazC,EAAQ0C,iBAAmB1C,EAAQ2C,YAAc3C,EAAQ4C,eAAiB5C,EAAQ6C,eAAiB7C,EAAQ8C,cAAgBpB,MIxHtK,IAAAqB,GAAAzC,EAAA,GAAY0C,EJ4HDjB,EAAwBgB,GI1H7BE,EAAUD,EAAIE,YACpBD,GAAQE,gBAAgBH,EAAII,OAAOC,OACnCJ,EAAQK,SAASN,EAAII,OAAOC,MAM5B,IAAMP,GAAgBG,EAAQM,UAAU,UACxCT,GAAcQ,SAASN,EAAII,OAAOI,KAMlC,IAAMX,GAAiBI,EAAQM,UAAU,WACzCV,GAAeS,SAASN,EAAII,OAAOI,KAMnC,IAAMZ,GAAiBK,EAAQM,UAAU,WACzCX,GAAeU,SAASN,EAAII,OAAOI,KAMnC,IAAMb,GAAcM,EAAQM,UAAU,QACtCZ,GAAYW,SAASN,EAAII,OAAOI,KAMhC,IAAMd,GAAmBO,EAAQM,UAAU,aAC3Cb,GAAiBY,SAASN,EAAII,OAAOK,MAMrC,IAAMhB,GAAaQ,EAAQM,UAAU,QACrCd,GAAWa,SAASN,EAAII,OAAOI,KAM/B,IAAMhB,GAAaS,EAAQM,UAAU,OACrCf,GAAWc,SAASN,EAAII,OAAOI,MJgI9BxD,EI9HQ8C,gBJ+HR9C,EI/HuB6C,iBJgIvB7C,EIhIuC4C,iBJiIvC5C,EIjIuD2C,cJkIvD3C,EIlIoE0C,mBJmIpE1C,EInIsFyC,aJoItFzC,EIpIkGwC,cJwI7F,SAASvC,EAAQD,EAASM,GK/LhC,GAAAoD,GAAAC,GAMA,SAAA7D,EAAA8D,GACA,YAEAF,GAAA,EAAAC,EAAA,kBAAAD,KAAA/C,KAAAX,EAAAM,EAAAN,EAAAC,GAAAyD,IAAAhC,SAAAiC,IAAA1D,EAAAD,QAAA2D,KAMCvD,KAAA,WACD,YAIA,SAAAyD,GAAAC,GACA,aAAAC,WAAAC,IAEStC,SAAAqC,QAAAD,GACTG,EAAAF,QAAAD,GACSpC,SAAAqC,QAAAf,IACTiB,EAAAF,QAAA,OAEAG,GAIA,QAAAD,GAAAjD,EAAA8C,GACA,GAAAK,GAAAnD,EAAA8C,EACA,sBAAAK,GAAAC,KACA,MAAAD,GAAAC,KAAApD,EAEA,KACA,MAAAqD,UAAAnC,UAAAkC,KAAAzD,KAAAwD,EAAAnD,GACa,MAAAsD,GAEb,kBACA,MAAAD,UAAAnC,UAAAqC,YAAAJ,GAAAnD,EAAAwD,cAQA,QAAAC,GAAAX,EAAAY,EAAAC,GACA,wBACAZ,WAAAC,IACAY,EAAAjE,KAAAP,KAAAsE,EAAAC,GACAvE,KAAA0D,GAAAS,MAAAnE,KAAAoE,aAKA,QAAAI,GAAAF,EAAAC,GAEA,OAAAE,GAAA,EAAuBA,EAAAC,EAAAC,OAAuBF,IAAA,CAC9C,GAAAf,GAAAgB,EAAAD,EACAzE,MAAA0D,GAAAe,EAAAH,EACAR,EACA9D,KAAA4E,cAAAlB,EAAAY,EAAAC,IAIA,QAAAM,GAAAnB,EAAAY,EAAAC,GAEA,MAAAd,GAAAC,IACAW,EAAAF,MAAAnE,KAAAoE,WAWA,QAAAU,GAAAC,EAAAC,EAAArF,GAQA,QAAAsF,GAAAC,GACA,GAAAC,IAAAT,EAAAQ,IAAA,UAAAE,aAGA,KAEA,YADAC,OAAAC,aAAAC,GAAAJ,GAEW,MAAAK,IAGX,IACAH,OAAAI,SAAAC,OACAC,mBAAAJ,GAAA,IAAAJ,EAAA,IACW,MAAAK,KAGX,QAAAI,KACA,GAAAC,EAEA,KACAA,EAAAR,OAAAC,aAAAC,GACW,MAAAC,IAEX,SAAAK,KAAAjC,EACA,IACA,GAAA8B,GAAAL,OAAAI,SAAAC,OACAI,EAAAJ,EAAAK,QACAJ,mBAAAJ,GAAA,IACAO,KACAD,EAAA,WAA0CG,KAAAN,EAAAO,MAAAH,IAAA,IAE3B,MAAAN,IAQf,MAJAlE,UAAA4E,EAAAlD,OAAA6C,KACAA,EAAAvE,QAGAuE,EA9CA,GACAM,GADAD,EAAAlG,KAEAuF,EAAA,UACAR,KACAQ,GAAA,IAAAR,GAmDAmB,EAAAlD,QAAqBoD,MAAA,EAAA/C,MAAA,EAAAD,KAAA,EAAAiD,KAAA,EACrBpD,MAAA,EAAAqD,OAAA,GAEAJ,EAAAtB,cAAAjF,GAAAkF,EAEAqB,EAAAK,SAAA,WACA,MAAAJ,IAGAD,EAAAhD,SAAA,SAAAoB,EAAAkC,GAIA,GAHA,gBAAAlC,IAAAhD,SAAA4E,EAAAlD,OAAAsB,EAAAc,iBACAd,EAAA4B,EAAAlD,OAAAsB,EAAAc,kBAEA,gBAAAd,OAAA,GAAAA,GAAA4B,EAAAlD,OAAAsD,QAUA,kDAAAhC,CAJA,IALA6B,EAAA7B,EACAkC,KAAA,GACAvB,EAAAX,GAEAE,EAAAjE,KAAA2F,EAAA5B,EAAAS,SACApB,WAAAC,GAAAU,EAAA4B,EAAAlD,OAAAsD,OACA,0CAOAJ,EAAAnD,gBAAA,SAAAuB,GACAsB,KACAM,EAAAhD,SAAAoB,GAAA,IAIA4B,EAAAO,UAAA,SAAAD,GACAN,EAAAhD,SAAAgD,EAAAlD,OAAAoD,MAAAI,IAGAN,EAAAQ,WAAA,SAAAF,GACAN,EAAAhD,SAAAgD,EAAAlD,OAAAsD,OAAAE,GAIA,IAAAG,GAAAf,GACA,OAAAe,IACAA,EAAA,MAAA3B,EAAA,OAAAA,GAEAkB,EAAAhD,SAAAyD,GAAA,GAxKA,GAAA7C,GAAA,aACAF,EAAA,YAyDAc,GACA,QACA,QACA,OACA,OACA,SAkHAkC,EAAA,GAAA9B,GAEA+B,IACAD,GAAAzD,UAAA,SAAA4B,GACA,mBAAAA,IAAA,KAAAA,EACA,SAAA+B,WAAA,iDAGA,IAAAC,GAAAF,EAAA9B,EAKA,OAJAgC,KACAA,EAAAF,EAAA9B,GAAA,GAAAD,GACAC,EAAA6B,EAAAL,WAAAK,EAAAhC,gBAEAmC,EAIA,IAAAC,SAAA3B,UAAAzB,EAAAyB,OAAAzC,IAAAtB,MAUA,OATAsF,GAAA9D,WAAA,WAMA,aALAuC,UAAAzB,GACAyB,OAAAzC,MAAAgE,IACAvB,OAAAzC,IAAAoE,GAGAJ,GAGAA,KLuMM,SAAS/G,EAAQD,EAASM,GAE/B,YAeA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EMra5P,QAASqF,GAAaC,GAC3B,GAAMC,IAAUC,aAAc,EAAGC,YAAa,EAAGC,SAAU,EAAGC,UAAW,EAAGC,UAAW,OACvF,IAAIN,EAAMO,WAAY,CACpBN,EAAMC,aAAeF,EAAMO,WAAW9C,MAEtC,IAAM+C,GAAcC,EAAwBC,WAAWC,EAAkBC,2BAA4BZ,EACrGC,GAAME,YAAcH,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUA,GAAOC,EAAEtD,SAAQuD,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAIC,GAAG,EAE5F,IAAMd,GAAWI,EAAYW,UAAU1D,MACvCwC,GAAMG,SAAWA,EACbA,EAAW,KACbH,EAAMK,UAAY,OAClBL,EAAMG,SAAW,EACjBH,EAAMI,UAAY,GACTD,EAAW,MACpBH,EAAMK,UAAY,QAClBL,EAAMI,UAAYD,GACTA,EAAW,SACpBH,EAAMK,UAAY,MAClBL,EAAMI,WAAaD,EAAW,MAAMgB,QAAQ,KAE5CnB,EAAMK,UAAY,MAClBL,EAAMI,WAAaD,EAAW,KAAO,MAAMgB,QAAQ,IAGvD,MAAOnB,GN+XRpG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EM3ZeqH,cAhBhB,IAAAsB,GAAArI,EAAA,GAAYyH,EN+amBhG,EAAwB4G,GM9avDC,EAAAtI,EAAA,IAAY2H,ENkbalG,EAAwB6G,IAmD3C,SAAS3I,EAAQD,EAASM,GAE/B,YAkDA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GOngBjF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAPC,EAAAC,0BAA6CC,GAU/C,QAASjB,GAAWkB,EAAS5B,EAAO6B,GACzC,GAAMC,IACJC,aACEC,cAAeC,EAAArI,QAAoBsI,UAAUC,gBAE7CC,WAAYpC,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,OAGtEjH,QAAO2H,OAAOM,GAASS,cAAeX,EAAQY,kBAAkBD,gBAEhEzH,EAAAM,iBAAOqH,MAAP,0CAAuDX,EAAMC,WAAW,GAAGK,WAAW3E,OAEtF,IAAMiF,IACJb,aACAc,eAAgBf,EAAQY,kBAAkBI,OAAOD,eACjDxB,UAAW0B,KAAKC,UAAUhB,GAM5B,OAHIF,GAAQY,kBAAkBI,OAAOG,UACnCL,EAAKM,KAAOC,EAAaC,YAAYR,EAAKvB,UAAWS,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAElIL,EAUF,QAASS,GAAUvB,EAAS5B,EAAOoD,GACxC,GAAMC,GAAiBrD,EACjBsD,EAA6BF,EAE7BV,EAAOhC,EAAWkB,EAASyB,EAAgBC,EAA2BC,eAE5E,QADA,EAAAC,EAAAC,gCAA+BH,EAA4BD,GACpDK,EAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,2DAAuKnB,GACzKoB,KACG,SAACC,GAMC,MALAjJ,GAAAM,iBAAOqH,MAAM,kCAAmCsB,GAChDT,EAA2BC,eAAiBQ,EAASlC,WACrD/G,EAAAM,iBAAOqH,MAAM,uCAAwCsB,GACrDV,EAAeW,UAAYD,EAC3BV,EAAeW,UAAUC,KAAUtC,EAAwBsC,KAAKC,cAAhE,SACOb,IAGZS,KAXEK,EAAAC,wBAYFN,KAZErC,EAAA4C,6BAsBF,QAASC,GAAM1C,EAAS5B,EAAOoD,GAKpC,OAJA,EAAAI,EAAAe,2BAA0BnB,EAAmBpD,SAGtCoD,GAAkBG,eAClBiB,QAAQC,QAAQzE,GPsYxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQiJ,wBAA0BjJ,EAAQgM,MAAQhM,EAAQiM,KAAOvK,MAEjE,IAAIwK,GAAqB5L,EAAoB,EAE7Ca,QAAOC,eAAepB,EAAS,QAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,GO3eHD,QP8eR9K,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,GOjfGF,SPofdhM,EOpee6I,UPqef7I,EO1degI,aP2dfhI,EO5beyK,YP6bfzK,EOjae4L,OA/FhB,IAAAxJ,GAAA9B,EAAA,GACA+L,EAAA/L,EAAA,GPqgBKiJ,EAAwBxI,EAAuBsL,GOpgBpDC,EAAAhM,EAAA,GAAYqJ,EPwgBW5H,EAAwBuK,GOvgB/CC,EAAAjM,EAAA,GAAY0K,EP2gBYjJ,EAAwBwK,GO1gBhDC,EAAAlM,EAAA,IAAYiK,EP8gBQxI,EAAwByK,GO7gB5C1B,EAAAxK,EAAA,IACAyI,EAAAzI,EAAA,IACAmL,EAAAnL,EAAA,IAQa2I,6BACXsC,KAAMhC,EAAArI,QAAoBuL,gBAAgBC,KAC1CC,SAAUpD,EAAArI,QAAoB0L,SAASC,KACvCC,WAAY,OPumBR,SAAS7M,EAAQD,EAASM,GAE/B,YQ9lBM,SAASsL,GAAM1C,EAAS5B,EAAOoD,GAEpC,MADAtI,GAAAM,iBAAOqH,MAAM,qBACN+B,QAAQC,QAAQzE,GAUlB,QAAS0E,GAAM9C,EAAS5B,EAAOoD,GAEpC,MADAtI,GAAAM,iBAAOqH,MAAM,qBACN+B,QAAQC,QAAQzE,GAUlB,QAAS2E,GAAK/C,EAAS5B,EAAOoD,GAEnC,MADAtI,GAAAM,iBAAOqH,MAAM,oBACN+B,QAAQC,QAAQzE,GRskBxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EQnmBe4L,QRomBf5L,EQxlBegM,QRylBfhM,EQ7kBeiM,MArDhB,IAAA7J,GAAA9B,EAAA,IRgsBM,SAASL,EAAQD,GAEtB,YAEAmB,QAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GSzrBV,IAAM0L,IACJN,iBACEC,KAAM,OACNM,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,SAAU,YAEZC,WACEC,QAAS,UACTC,SAAU,WACVC,aAAc,eACdC,SAAU,YAEZhE,WACEiE,KAAM,OACNC,KAAM,OACNC,iBAAkB,mBAClBlE,gBAAiB,mBAEnBmE,cACElB,KAAM,OACNgB,KAAM,OACNG,UAAW,aAEbC,YACEC,MACEC,MAAO,QACPC,OAAQ,SACRC,WAAY,aACZC,kBAAmB,qBAErBC,OACEC,SAAU,WACVC,UAAW,cAGf1B,UACE2B,UAAW,YACX1B,KAAM,QAER2B,YACEC,aAAc,eACdC,uBAAwB,yBACxBC,8BAA+B,gCAC/BC,sBAAuB,wBACvBC,kBAAmB,oBACnBC,iBAAkB,oBAEpBC,oBACEC,aAAc,eACdC,OAAQ,SACRC,OAAQ,UT0sBXlP,GAAQkB,QSvsBM6L,GT2sBT,SAAS9M,EAAQD,EAASM,GAE/B,YUjwBD,SAAS6O,GAAgB9G,EAAG+G,EAAGC,EAAQC,EAAQC,GAC7C,GAAMC,GAAWzB,KAAK0B,KAAK1B,KAAK2B,IAAKN,EAAIE,EAAOC,EAAiB,GAAK,GAAKxB,KAAK2B,IAAKrH,EAAIgH,EAAOE,EAAiB,GAAK,GACtH,OAAOI,OAAMH,GAAY,EAAIA,EAG/B,QAASI,GAAcvH,EAAG+G,EAAGC,EAAQC,EAAQO,EAAQN,GACnD,GAAMxK,GAAS8K,EAAON,EAAiB,GAAKJ,EAAgB9G,EAAG+G,EAAGC,EAAQC,EAAQC,EAClF,OAAOI,OAAM5K,GAAU,EAAIA,EAG7B,QAAS+K,GAAgBzH,EAAG+G,EAAGC,EAAQC,EAAQO,EAAQN,GACrD,GAAIQ,GAAQ,EACNP,EAAWL,EAAgB9G,EAAG+G,EAAGC,EAAQC,EAAQC,GACjDxK,EAAS6K,EAAcvH,EAAG+G,EAAGC,EAAQC,EAAQO,EAAQN,EAE5C,KAAXxK,EACFgL,EAAQ,GACCP,IAAazK,EACtBgL,EAAQ,EACCP,EAAW,GACpBO,EAAQ,GAAMhC,KAAK2B,IAAI,GAAMF,EAAU,IAC9BA,EAAWzK,EAAS,KAC7BgL,EAAQ,GAAMhC,KAAK2B,IAAI,IAAO3K,EAASyK,GAAW,IAEpD,IAAMQ,GAAWD,EAAQhC,KAAKkC,IAAI,GAAK,EAAO,GAAMlC,KAAK0B,KAAKD,GAC9D,OAAOG,OAAMO,WAAWF,IAAa,GAAMA,EAG7C,QAASG,GAA8B9H,EAAG+G,EAAGC,EAAQC,EAAQc,GAC3D,GAAMC,GAAS,EAAKD,EAAQ,EACxBE,GAAM,CAIV,QAHsB,IAAlBjB,EAAOtK,QAAkC,IAAlBuK,EAAOvK,QAAgBgJ,KAAKwC,IAAIlB,EAAOA,EAAOtK,OAAS,GAAKsD,IAAMgI,GAAStC,KAAKwC,IAAIjB,EAAOA,EAAOvK,OAAS,GAAKqK,IAAMiB,KAC/IC,GAAM,GAEDA,EAQF,QAASE,GAAsBC,GACpC,GAAMC,IACJnF,KAAM,SACNlD,KACA+G,KACAuB,KACA7P,KACA8P,KACAR,MAAO,EAET,OAAOjP,QAAO2H,UAAW4H,EAAeD,GAQnC,QAAS7G,GAAOxB,GACrB,OAASmD,KAAMnD,EAAOmD,KAAMlD,EAAGD,EAAOC,EAAG+G,EAAGhH,EAAOgH,EAAGuB,EAAGvI,EAAOuI,GAS3D,QAASE,GAASzI,EAAQ0I,GAC/B,GAAMC,GAAkB3I,CAUxB,OATI+H,GAA8BW,EAAMzI,EAAGyI,EAAM1B,EAAG2B,EAAgB1I,EAAG0I,EAAgB3B,EAAG2B,EAAgBX,QACxGW,EAAgB1I,EAAE2I,KAAKF,EAAMzI,GAC7B0I,EAAgB3B,EAAE4B,KAAKF,EAAM1B,GAC7B2B,EAAgBJ,EAAEK,KAAKF,EAAMH,GAC7BI,EAAgBjQ,EAAEkQ,KAAKlB,EAAgBgB,EAAMzI,EAAGyI,EAAM1B,EAAG2B,EAAgB1I,EAAG0I,EAAgB3B,EAAG2B,EAAgBH,EAAGG,EAAgB1I,EAAEtD,OAAS,IAC7IgM,EAAgBH,EAAEI,KAAKpB,EAAckB,EAAMzI,EAAGyI,EAAM1B,EAAG2B,EAAgB1I,EAAG0I,EAAgB3B,EAAG2B,EAAgBH,EAAGG,EAAgB1I,EAAEtD,OAAS,KAE3I3C,EAAAO,YAAOoH,MAAM,wBAAyB+G,GAEjCC,EAUF,QAAS1K,GAAM+B,GAEpB,IAAK,GAFuB6I,GAAkCzM,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAA1B,EAAG0M,EAAuB1M,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAAjB4D,EAAOC,EAAEtD,OAChDoM,EAAeX,GAAwBY,MAAOhJ,EAAOgJ,MAAOhB,MAAOhI,EAAOgI,QACvEvL,EAAIoM,EAAOpM,EAAIqM,EAAKrM,IAC3BgM,EAASM,GACP9I,EAAGD,EAAOC,EAAExD,GACZuK,EAAGhH,EAAOgH,EAAEvK,GACZ8L,EAAGvI,EAAOuI,EAAE9L,IAGhB,OAAOsM,GASF,QAASE,GAAgBjJ,EAAQkJ,GACtC,GAAIR,SAUJ,OATcpP,UAAV4P,GAAuBA,GAAS,GAAKA,EAAQlJ,EAAOC,EAAEtD,SACxD+L,GACEzI,EAAGD,EAAOC,EAAEiJ,GACZlC,EAAGhH,EAAOgH,EAAEkC,GACZX,EAAGvI,EAAOuI,EAAEW,GACZxQ,EAAGsH,EAAOtH,EAAEwQ,GACZV,EAAGxI,EAAOwI,EAAEU,KAGTR,EV2oBR3P,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EU5tBewQ,wBV6tBfxQ,EU3sBe4J,SV4sBf5J,EUlsBe6Q,WVmsBf7Q,EU9qBeqG,QV+qBfrG,EU7pBeqR,iBA5HhB,IAAAjP,GAAA9B,EAAA,IV06BM,SAASL,EAAQD,GAEtB,YWv6BM,SAASuR,GAAMC,GACpB,GAAIC,SACJ,KACEA,EAAStH,KAAKoH,MAAMC,EAAIE,cACxB,MAAOpN,GACPmN,EAASD,EAAIE,aAEf,MAAOD,GAQF,QAASE,GAAiB3Q,GAC/B,GAAM4Q,KAON,OANAzQ,QAAO0Q,KAAK7Q,GAAK8Q,QAAQ,SAAChR,GACD,mBAAXE,GAAIF,IACO,kBAAXE,GAAIF,IACd8Q,EAAIZ,KAAKjL,mBAAmBjF,GAAK,IAAMiF,mBAAmB/E,EAAIF,OAG3D8Q,EAAIG,KAAK,KAWX,QAASC,GAAIzG,EAAM0G,EAAKjI,EAAMkI,GACnC,MAAO,IAAIpG,SAAQ,SAACC,EAASoG,GAG3B,GAAMC,GAAU,GAAIC,eACpBD,GAAQE,KAAK/G,EAAM0G,GAAK,GACxBG,EAAQG,iBAAkB,EAC1BH,EAAQI,iBAAiB,SAAU,oBACnCJ,EAAQI,iBAAiB,eAAgB,mDAEzCJ,EAAQK,QAAU,WAChBN,EAAO,GAAIO,OAAM,aAAgBT,KAGnCG,EAAQO,WAAa,SAACrO,GAChB4N,GACFA,EAAO5N,EAAE5D,OAAS4D,EAAEsO,QAIxBR,EAAQS,OAAS,WACXT,EAAQU,QAAU,KAAOV,EAAQU,OAAS,IAC5C/G,EAAQwF,EAAMa,IAEdD,EAAO,GAAIO,OAAMN,EAAQV,gBAI7BU,EAAQW,mBAAqB,WACA,IAAvBX,EAAQY,YACNZ,EAAQU,QAAU,KAAOV,EAAQU,OAAS,KAC5C/G,EAAQwF,EAAMa,KAKpBA,EAAQa,KAAKjJ,EAAO2H,EAAiB3H,GAAQtI,UAU1C,QAAS0K,GAAI8G,EAAKC,GACvB,GAAIC,GAASF,CAIb,OAHIC,KACFC,GAAU,IAAMzB,EAAiBwB,IAE5BnB,EAAI,MAAOoB,EAAQ1R,QAUrB,QAASuJ,GAAKgH,EAAKjI,GACxB,MAAOgI,GAAI,OAAQC,EAAKjI,GXy0BzB7I,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EW56BeuR,QX66BfvR,EW95Be2R,mBX+5Bf3R,EW54BegS,MX64BfhS,EW/1BeoM,MXg2BfpM,EWj1BeiL,QX27BV,SAAShL,EAAQD,EAASM,GAE/B,YAkBA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GYviCjF,QAASwJ,GAAYpB,EAAOa,EAAgBI,GACjD,GAAMgJ,GAA8B,YAAjB,mBAAOjK,GAAP,YAAAkK,EAAOlK,IAAsBe,KAAKC,UAAUhB,GAASA,CAExE,OADAhH,GAAAM,iBAAOqH,MAAM,oCAAbwJ,EAAArS,SACO,GAAAqS,GAAArS,QAAemS,EAAWpJ,EAAiBI,GAASmJ,SAASC,EAAAC,IAAIC,KZohCzExS,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GAGT,IAAIiS,GAA4B,kBAAXM,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU7S,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX4S,SAAyB5S,EAAI8S,cAAgBF,QAAU5S,IAAQ4S,OAAO1R,UAAY,eAAkBlB,GAEtQhB,GY7hCewK,aAZhB,IAAAiJ,GAAAnT,EAAA,IACAyT,EAAAzT,EAAA,IZ8iCKiT,EAAYxS,EAAuBgT,GY7iCxC3R,EAAA9B,EAAA,IZmkCM,SAASL,EAAQD,EAASM,IarkC/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAED,MAAAA,Mb6kCM,SAAShU,EAAQD,EAASM,Ic5lC/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,KAUCK,KAAA,WAKD,GAAA6T,MAAA,SAAAlG,EAAArM,GAIA,GAAAwS,GAAA/S,OAAA+S,QAAA,WACA,QAAAC,MAEA,gBAAAnT,GACA,GAAAoT,EAQA,OANAD,GAAAjS,UAAAlB,EAEAoT,EAAA,GAAAD,GAEAA,EAAAjS,UAAA,KAEAkS,MAOAC,KAKAC,EAAAD,EAAAE,OAKAC,EAAAF,EAAAE,KAAA,WAGA,OAmBAC,OAAA,SAAAC,GAEA,GAAAN,GAAAF,EAAA9T,KAoBA,OAjBAsU,IACAN,EAAAO,MAAAD,GAIAN,EAAAjS,eAAA,SAAA/B,KAAA6L,OAAAmI,EAAAnI,OACAmI,EAAAnI,KAAA,WACAmI,EAAAQ,OAAA3I,KAAA1H,MAAAnE,KAAAoE,aAKA4P,EAAAnI,KAAA/J,UAAAkS,EAGAA,EAAAQ,OAAAxU,KAEAgU,GAeAF,OAAA,WACA,GAAAW,GAAAzU,KAAAqU,QAGA,OAFAI,GAAA5I,KAAA1H,MAAAsQ,EAAArQ,WAEAqQ,GAeA5I,KAAA,aAcA0I,MAAA,SAAAlE,GACA,OAAAqE,KAAArE,GACAA,EAAAtO,eAAA2S,KACA1U,KAAA0U,GAAArE,EAAAqE,GAKArE,GAAAtO,eAAA,cACA/B,KAAAoT,SAAA/C,EAAA+C,WAaAuB,MAAA,WACA,MAAA3U,MAAA6L,KAAA/J,UAAAuS,OAAArU,WAWA4U,EAAAV,EAAAU,UAAAR,EAAAC,QAaAxI,KAAA,SAAAgJ,EAAAC,GACAD,EAAA7U,KAAA6U,YAEAC,GAAAxT,EACAtB,KAAA8U,WAEA9U,KAAA8U,SAAA,EAAAD,EAAAlQ,QAiBAyO,SAAA,SAAA2B,GACA,OAAAA,GAAAxB,GAAAvJ,UAAAhK,OAcAgV,OAAA,SAAAC,GAEA,GAAAC,GAAAlV,KAAA6U,MACAM,EAAAF,EAAAJ,MACAO,EAAApV,KAAA8U,SACAO,EAAAJ,EAAAH,QAMA,IAHA9U,KAAAsV,QAGAF,EAAA,EAEA,OAAA3Q,GAAA,EAAgCA,EAAA4Q,EAAkB5Q,IAAA,CAClD,GAAA8Q,GAAAJ,EAAA1Q,IAAA,QAAAA,EAAA,OACAyQ,GAAAE,EAAA3Q,IAAA,IAAA8Q,GAAA,IAAAH,EAAA3Q,GAAA,QAIA,QAAAA,GAAA,EAAgCA,EAAA4Q,EAAkB5Q,GAAA,EAClDyQ,EAAAE,EAAA3Q,IAAA,GAAA0Q,EAAA1Q,IAAA,EAMA,OAHAzE,MAAA8U,UAAAO,EAGArV,MAUAsV,MAAA,WAEA,GAAAT,GAAA7U,KAAA6U,MACAC,EAAA9U,KAAA8U,QAGAD,GAAAC,IAAA,mBAAAA,EAAA,IACAD,EAAAlQ,OAAAgJ,EAAA6H,KAAAV,EAAA,IAYAH,MAAA,WACA,GAAAA,GAAAP,EAAAO,MAAApU,KAAAP,KAGA,OAFA2U,GAAAE,MAAA7U,KAAA6U,MAAA5O,MAAA,GAEA0O,GAgBAc,OAAA,SAAAC,GAkBA,OAAAC,GAjBAd,KAEAe,EAAA,SAAAC,GACA,GAAAA,KACAC,EAAA,UACAC,EAAA,UAEA,mBACAD,EAAA,aAAAA,OAAA,IAAAC,EACAF,EAAA,YAAAA,OAAA,IAAAE,CACA,IAAA1E,IAAAyE,GAAA,IAAAD,EAAAE,CAGA,OAFA1E,IAAA,WACAA,GAAA,GACAA,GAAA1D,EAAA8H,SAAA,WAIAhR,EAAA,EAAoCA,EAAAiR,EAAYjR,GAAA,GAChD,GAAAuR,GAAAJ,EAAA,YAAAD,GAAAhI,EAAA8H,UAEAE,GAAA,UAAAK,IACAnB,EAAAjE,KAAA,WAAAoF,IAAA,GAGA,UAAApB,GAAA/I,KAAAgJ,EAAAa,MAOAO,EAAAhC,EAAAX,OAKAC,EAAA0C,EAAA1C,KAcAvJ,UAAA,SAAAiL,GAOA,OALAJ,GAAAI,EAAAJ,MACAC,EAAAG,EAAAH,SAGAoB,KACAzR,EAAA,EAA4BA,EAAAqQ,EAAcrQ,IAAA,CAC1C,GAAA0R,GAAAtB,EAAApQ,IAAA,QAAAA,EAAA,OACAyR,GAAAtF,MAAAuF,IAAA,GAAA/C,SAAA,KACA8C,EAAAtF,MAAA,GAAAuF,GAAA/C,SAAA,KAGA,MAAA8C,GAAAvE,KAAA,KAgBAR,MAAA,SAAAiF,GAMA,OAJAC,GAAAD,EAAAzR,OAGAkQ,KACApQ,EAAA,EAA4BA,EAAA4R,EAAkB5R,GAAA,EAC9CoQ,EAAApQ,IAAA,IAAA6R,SAAAF,EAAAG,OAAA9R,EAAA,WAAAA,EAAA,GAGA,WAAAmQ,GAAA/I,KAAAgJ,EAAAwB,EAAA,KAOAG,EAAAP,EAAAO,QAcAxM,UAAA,SAAAiL,GAOA,OALAJ,GAAAI,EAAAJ,MACAC,EAAAG,EAAAH,SAGA2B,KACAhS,EAAA,EAA4BA,EAAAqQ,EAAcrQ,IAAA,CAC1C,GAAA0R,GAAAtB,EAAApQ,IAAA,QAAAA,EAAA,OACAgS,GAAA7F,KAAA8F,OAAAC,aAAAR,IAGA,MAAAM,GAAA9E,KAAA,KAgBAR,MAAA,SAAAyF,GAMA,OAJAC,GAAAD,EAAAjS,OAGAkQ,KACApQ,EAAA,EAA4BA,EAAAoS,EAAqBpS,IACjDoQ,EAAApQ,IAAA,SAAAmS,EAAAE,WAAArS,KAAA,GAAAA,EAAA,GAGA,WAAAmQ,GAAA/I,KAAAgJ,EAAAgC,KAOAE,EAAAd,EAAAc,MAcA/M,UAAA,SAAAiL,GACA,IACA,MAAA+B,oBAAAC,OAAAT,EAAAxM,UAAAiL,KACc,MAAA/Q,GACd,SAAAoO,OAAA,0BAiBAnB,MAAA,SAAA+F,GACA,MAAAV,GAAArF,MAAAgG,SAAAxR,mBAAAuR,OAWAE,EAAAlD,EAAAkD,uBAAAhD,EAAAC,QAQA7I,MAAA,WAEAxL,KAAAqX,MAAA,GAAAzC,GAAA/I,KACA7L,KAAAsX,YAAA,GAaAC,QAAA,SAAA3N,GAEA,gBAAAA,KACAA,EAAAmN,EAAA5F,MAAAvH,IAIA5J,KAAAqX,MAAArC,OAAApL,GACA5J,KAAAsX,aAAA1N,EAAAkL,UAiBA0C,SAAA,SAAAC,GAEA,GAAA7N,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MACA8C,EAAA/N,EAAAkL,SACA8C,EAAA5X,KAAA4X,UACAC,EAAA,EAAAD,EAGAE,EAAAH,EAAAE,CAGAC,GAFAL,EAEA9J,EAAA6H,KAAAsC,GAIAnK,EAAAkC,KAAA,EAAAiI,GAAA9X,KAAA+X,eAAA,EAIA,IAAAC,GAAAF,EAAAF,EAGAK,EAAAtK,EAAAuK,IAAA,EAAAF,EAAAL,EAGA,IAAAK,EAAA,CACA,OAAAG,GAAA,EAAqCA,EAAAH,EAAsBG,GAAAP,EAE3D5X,KAAAoY,gBAAAV,EAAAS,EAIA,IAAAE,GAAAX,EAAAY,OAAA,EAAAN,EACApO,GAAAkL,UAAAmD,EAIA,UAAArD,GAAA/I,KAAAwM,EAAAJ,IAYAtD,MAAA,WACA,GAAAA,GAAAP,EAAAO,MAAApU,KAAAP,KAGA,OAFA2U,GAAA0C,MAAArX,KAAAqX,MAAA1C,QAEAA,GAGAoD,eAAA,IA2IAQ,GAnIArE,EAAAsE,OAAApB,EAAA/C,QAIAoE,IAAArE,EAAAC,SAWAxI,KAAA,SAAA4M,GAEAzY,KAAAyY,IAAAzY,KAAAyY,IAAApE,OAAAoE,GAGAzY,KAAAwL,SAUAA,MAAA,WAEA4L,EAAA5L,MAAAjL,KAAAP,MAGAA,KAAA0Y,YAeAC,OAAA,SAAAC,GAQA,MANA5Y,MAAAuX,QAAAqB,GAGA5Y,KAAAwX,WAGAxX,MAiBA6Y,SAAA,SAAAD,GAEAA,GACA5Y,KAAAuX,QAAAqB,EAIA,IAAAE,GAAA9Y,KAAA+Y,aAEA,OAAAD,IAGAlB,UAAA,GAeAoB,cAAA,SAAAC,GACA,gBAAAC,EAAAT,GACA,UAAAQ,GAAApN,KAAA4M,GAAAI,SAAAK,KAiBAC,kBAAA,SAAAF,GACA,gBAAAC,EAAArX,GACA,UAAA0W,GAAAa,KAAAvN,KAAAoN,EAAApX,GAAAgX,SAAAK,OAQAjF,EAAAoF,QAEA,OAAApF,IACEtG,KAGF,OAAAkG,MdomCM,SAAShU,EAAQD,EAASM,Iez1D/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAgSD,MA9RA,UAAAvS,GAEA,GAAA2S,GAAAJ,EACAK,EAAAD,EAAAE,IACAC,EAAAF,EAAAE,KACAkF,EAAApF,EAAAU,UAKA2E,EAAAtF,EAAAuF,MAKAD,GAAAE,KAAArF,EAAAC,QAWAxI,KAAA,SAAA6N,EAAAC,GACA3Z,KAAA0Z,OACA1Z,KAAA2Z,SA+KAJ,EAAA3E,UAAAR,EAAAC,QAqBAxI,KAAA,SAAAgJ,EAAAC,GACAD,EAAA7U,KAAA6U,YAEAC,GAAAxT,EACAtB,KAAA8U,WAEA9U,KAAA8U,SAAA,EAAAD,EAAAlQ,QAaAiV,MAAA,WAOA,OALAC,GAAA7Z,KAAA6U,MACAiF,EAAAD,EAAAlV,OAGAoV,KACAtV,EAAA,EAA4BA,EAAAqV,EAAoBrV,IAAA,CAChD,GAAAuV,GAAAH,EAAApV,EACAsV,GAAAnJ,KAAAoJ,EAAAN,MACAK,EAAAnJ,KAAAoJ,EAAAL,KAGA,MAAAL,GAAAxF,OAAAiG,EAAA/Z,KAAA8U,WAYAH,MAAA,WAQA,OAPAA,GAAAP,EAAAO,MAAApU,KAAAP,MAGA6U,EAAAF,EAAAE,MAAA7U,KAAA6U,MAAA5O,MAAA,GAGAgU,EAAApF,EAAAlQ,OACAF,EAAA,EAA4BA,EAAAwV,EAAiBxV,IAC7CoQ,EAAApQ,GAAAoQ,EAAApQ,GAAAkQ,OAGA,OAAAA,SAMAd,Kfi2DM,SAAShU,EAAQD,EAASM,IgB9oE/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GA4DD,MA1DA,YAEA,qBAAAqG,aAAA,CAKA,GAAAjG,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UAGAuF,EAAAvF,EAAA/I,KAGAuO,EAAAxF,EAAA/I,KAAA,SAAAwO,GAqBA,GAnBAA,YAAAH,eACAG,EAAA,GAAAC,YAAAD,KAKAA,YAAAE,YACA,mBAAAC,oBAAAH,YAAAG,oBACAH,YAAAI,aACAJ,YAAAK,cACAL,YAAAM,aACAN,YAAAO,cACAP,YAAAQ,eACAR,YAAAS,iBAEAT,EAAA,GAAAC,YAAAD,EAAAU,OAAAV,EAAAW,WAAAX,EAAAY,aAIAZ,YAAAC,YAAA,CAMA,OAJAY,GAAAb,EAAAY,WAGApG,KACApQ,EAAA,EAA4BA,EAAAyW,EAA0BzW,IACtDoQ,EAAApQ,IAAA,IAAA4V,EAAA5V,IAAA,GAAAA,EAAA,GAIA0V,GAAA5Z,KAAAP,KAAA6U,EAAAqG,OAGAf,GAAAhW,MAAAnE,KAAAoE,WAIAgW,GAAAtY,UAAA8S,MAIAf,EAAAM,IAAAS,ahBspEM,SAAS/U,EAAQD,EAASM,IiB/tE/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAqID,MAnIA,YA6HA,QAAAsH,GAAAC,GACA,MAAAA,IAAA,aAAAA,IAAA,WA5HA,GAAAnH,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACAqB,EAAAhC,EAAAX,GAKA2C,GAAAoF,MAAApF,EAAAqF,SAcAtR,UAAA,SAAAiL,GAOA,OALAJ,GAAAI,EAAAJ,MACAC,EAAAG,EAAAH,SAGAyG,KACA9W,EAAA,EAA4BA,EAAAqQ,EAAcrQ,GAAA,GAC1C,GAAA+W,GAAA3G,EAAApQ,IAAA,QAAAA,EAAA,SACA8W,GAAA3K,KAAA8F,OAAAC,aAAA6E,IAGA,MAAAD,GAAA5J,KAAA,KAgBAR,MAAA,SAAAsK,GAMA,OAJAC,GAAAD,EAAA9W,OAGAkQ,KACApQ,EAAA,EAA4BA,EAAAiX,EAAoBjX,IAChDoQ,EAAApQ,IAAA,IAAAgX,EAAA3E,WAAArS,IAAA,GAAAA,EAAA,IAGA,OAAAmQ,GAAAd,OAAAe,EAAA,EAAA6G,IAOAzF,GAAA0F,SAcA3R,UAAA,SAAAiL,GAOA,OALAJ,GAAAI,EAAAJ,MACAC,EAAAG,EAAAH,SAGAyG,KACA9W,EAAA,EAA4BA,EAAAqQ,EAAcrQ,GAAA,GAC1C,GAAA+W,GAAAL,EAAAtG,EAAApQ,IAAA,QAAAA,EAAA,UACA8W,GAAA3K,KAAA8F,OAAAC,aAAA6E,IAGA,MAAAD,GAAA5J,KAAA,KAgBAR,MAAA,SAAAsK,GAMA,OAJAC,GAAAD,EAAA9W,OAGAkQ,KACApQ,EAAA,EAA4BA,EAAAiX,EAAoBjX,IAChDoQ,EAAApQ,IAAA,IAAA0W,EAAAM,EAAA3E,WAAArS,IAAA,GAAAA,EAAA,KAGA,OAAAmQ,GAAAd,OAAAe,EAAA,EAAA6G,QAUA7H,EAAAP,IAAA+H,SjBuuEM,SAASxb,EAAQD,EAASM,IkBz3E/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAuHD,MArHA,YAqGA,QAAA+H,GAAAC,EAAAC,EAAAC,GAGA,OAFAlH,MACAa,EAAA,EACAjR,EAAA,EAAsBA,EAAAqX,EAAqBrX,IAC3C,GAAAA,EAAA,GACA,GAAAuX,GAAAD,EAAAF,EAAA/E,WAAArS,EAAA,KAAAA,EAAA,IACAwX,EAAAF,EAAAF,EAAA/E,WAAArS,MAAA,EAAAA,EAAA,GACAoQ,GAAAa,IAAA,KAAAsG,EAAAC,IAAA,GAAAvG,EAAA,IACAA,IAGA,MAAAd,GAAAd,OAAAe,EAAAa,GA9GA,GAAAzB,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACAqB,EAAAhC,EAAAX,GAKA2C,GAAAiG,QAcAlS,UAAA,SAAAiL,GAEA,GAAAJ,GAAAI,EAAAJ,MACAC,EAAAG,EAAAH,SACA/M,EAAA/H,KAAAmc,IAGAlH,GAAAK,OAIA,QADA8G,MACA3X,EAAA,EAA4BA,EAAAqQ,EAAcrQ,GAAA,EAO1C,OANA4X,GAAAxH,EAAApQ,IAAA,QAAAA,EAAA,QACA6X,EAAAzH,EAAApQ,EAAA,aAAAA,EAAA,WACA8X,EAAA1H,EAAApQ,EAAA,aAAAA,EAAA,WAEA+X,EAAAH,GAAA,GAAAC,GAAA,EAAAC,EAEAE,EAAA,EAAgCA,EAAA,GAAAhY,EAAA,IAAAgY,EAAA3H,EAAsC2H,IACtEL,EAAAxL,KAAA7I,EAAA2U,OAAAF,IAAA,KAAAC,GAAA,IAKA,IAAAE,GAAA5U,EAAA2U,OAAA,GACA,IAAAC,EACA,KAAAP,EAAAzX,OAAA,GACAyX,EAAAxL,KAAA+L,EAIA,OAAAP,GAAAzK,KAAA,KAgBAR,MAAA,SAAA0K,GAEA,GAAAC,GAAAD,EAAAlX,OACAoD,EAAA/H,KAAAmc,KACAJ,EAAA/b,KAAA4c,WAEA,KAAAb,EAAA,CACAA,EAAA/b,KAAA4c,cACA,QAAAH,GAAA,EAAoCA,EAAA1U,EAAApD,OAAgB8X,IACpDV,EAAAhU,EAAA+O,WAAA2F,MAKA,GAAAE,GAAA5U,EAAA2U,OAAA,GACA,IAAAC,EAAA,CACA,GAAAE,GAAAhB,EAAA9V,QAAA4W,EACAE,MAAA,IACAf,EAAAe,GAKA,MAAAjB,GAAAC,EAAAC,EAAAC,IAIAI,KAAA,wEAmBAtI,EAAAP,IAAA4I,UlBi4EM,SAASrc,EAAQD,EAASM,ImBrgF/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GA4PD,MA1PA,UAAAlG,GAoMA,QAAAmP,GAAA3U,EAAAC,EAAA3H,EAAAsc,EAAA9U,EAAA+U,EAAAzM,GACA,GAAA0M,GAAA9U,GAAAC,EAAA3H,GAAA2H,EAAA2U,GAAA9U,EAAAsI,CACA,QAAA0M,GAAAD,EAAAC,IAAA,GAAAD,GAAA5U,EAGA,QAAA8U,GAAA/U,EAAAC,EAAA3H,EAAAsc,EAAA9U,EAAA+U,EAAAzM,GACA,GAAA0M,GAAA9U,GAAAC,EAAA2U,EAAAtc,GAAAsc,GAAA9U,EAAAsI,CACA,QAAA0M,GAAAD,EAAAC,IAAA,GAAAD,GAAA5U,EAGA,QAAA+U,GAAAhV,EAAAC,EAAA3H,EAAAsc,EAAA9U,EAAA+U,EAAAzM,GACA,GAAA0M,GAAA9U,GAAAC,EAAA3H,EAAAsc,GAAA9U,EAAAsI,CACA,QAAA0M,GAAAD,EAAAC,IAAA,GAAAD,GAAA5U,EAGA,QAAAgV,GAAAjV,EAAAC,EAAA3H,EAAAsc,EAAA9U,EAAA+U,EAAAzM,GACA,GAAA0M,GAAA9U,GAAA1H,GAAA2H,GAAA2U,IAAA9U,EAAAsI,CACA,QAAA0M,GAAAD,EAAAC,IAAA,GAAAD,GAAA5U,EAnNA,GAAA6L,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA4D,EAAAtE,EAAAsE,OACAD,EAAAtE,EAAAoF,KAGAgE,MAGA,WACA,OAAA5Y,GAAA,EAAwBA,EAAA,GAAQA,IAChC4Y,EAAA5Y,GAAA,WAAAkJ,EAAAwC,IAAAxC,EAAA2P,IAAA7Y,EAAA,QAOA,IAAA8Y,GAAAhF,EAAAgF,IAAA/E,EAAAnE,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAA5I,GAAA/I,MACA,sBACA,wBAIAuM,gBAAA,SAAAqF,EAAAtF,GAEA,OAAA1T,GAAA,EAA4BA,EAAA,GAAQA,IAAA,CAEpC,GAAAiZ,GAAAvF,EAAA1T,EACAkZ,EAAAF,EAAAC,EAEAD,GAAAC,GACA,UAAAC,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAKA,GAAAC,GAAA5d,KAAAwd,MAAA3I,MAEAgJ,EAAAJ,EAAAtF,EAAA,GACA2F,EAAAL,EAAAtF,EAAA,GACA4F,EAAAN,EAAAtF,EAAA,GACA6F,EAAAP,EAAAtF,EAAA,GACA8F,EAAAR,EAAAtF,EAAA,GACA+F,EAAAT,EAAAtF,EAAA,GACAgG,EAAAV,EAAAtF,EAAA,GACAiG,EAAAX,EAAAtF,EAAA,GACAkG,EAAAZ,EAAAtF,EAAA,GACAmG,EAAAb,EAAAtF,EAAA,GACAoG,EAAAd,EAAAtF,EAAA,IACAqG,EAAAf,EAAAtF,EAAA,IACAsG,EAAAhB,EAAAtF,EAAA,IACAuG,EAAAjB,EAAAtF,EAAA,IACAwG,EAAAlB,EAAAtF,EAAA,IACAyG,EAAAnB,EAAAtF,EAAA,IAGAhQ,EAAAyV,EAAA,GACAxV,EAAAwV,EAAA,GACAnd,EAAAmd,EAAA,GACAb,EAAAa,EAAA,EAGAzV,GAAA2U,EAAA3U,EAAAC,EAAA3H,EAAAsc,EAAAc,EAAA,EAAAR,EAAA,IACAN,EAAAD,EAAAC,EAAA5U,EAAAC,EAAA3H,EAAAqd,EAAA,GAAAT,EAAA,IACA5c,EAAAqc,EAAArc,EAAAsc,EAAA5U,EAAAC,EAAA2V,EAAA,GAAAV,EAAA,IACAjV,EAAA0U,EAAA1U,EAAA3H,EAAAsc,EAAA5U,EAAA6V,EAAA,GAAAX,EAAA,IACAlV,EAAA2U,EAAA3U,EAAAC,EAAA3H,EAAAsc,EAAAkB,EAAA,EAAAZ,EAAA,IACAN,EAAAD,EAAAC,EAAA5U,EAAAC,EAAA3H,EAAAyd,EAAA,GAAAb,EAAA,IACA5c,EAAAqc,EAAArc,EAAAsc,EAAA5U,EAAAC,EAAA+V,EAAA,GAAAd,EAAA,IACAjV,EAAA0U,EAAA1U,EAAA3H,EAAAsc,EAAA5U,EAAAiW,EAAA,GAAAf,EAAA,IACAlV,EAAA2U,EAAA3U,EAAAC,EAAA3H,EAAAsc,EAAAsB,EAAA,EAAAhB,EAAA,IACAN,EAAAD,EAAAC,EAAA5U,EAAAC,EAAA3H,EAAA6d,EAAA,GAAAjB,EAAA,IACA5c,EAAAqc,EAAArc,EAAAsc,EAAA5U,EAAAC,EAAAmW,EAAA,GAAAlB,EAAA,KACAjV,EAAA0U,EAAA1U,EAAA3H,EAAAsc,EAAA5U,EAAAqW,EAAA,GAAAnB,EAAA,KACAlV,EAAA2U,EAAA3U,EAAAC,EAAA3H,EAAAsc,EAAA0B,EAAA,EAAApB,EAAA,KACAN,EAAAD,EAAAC,EAAA5U,EAAAC,EAAA3H,EAAAie,EAAA,GAAArB,EAAA,KACA5c,EAAAqc,EAAArc,EAAAsc,EAAA5U,EAAAC,EAAAuW,EAAA,GAAAtB,EAAA,KACAjV,EAAA0U,EAAA1U,EAAA3H,EAAAsc,EAAA5U,EAAAyW,EAAA,GAAAvB,EAAA,KAEAlV,EAAA+U,EAAA/U,EAAAC,EAAA3H,EAAAsc,EAAAe,EAAA,EAAAT,EAAA,KACAN,EAAAG,EAAAH,EAAA5U,EAAAC,EAAA3H,EAAA0d,EAAA,EAAAd,EAAA,KACA5c,EAAAyc,EAAAzc,EAAAsc,EAAA5U,EAAAC,EAAAoW,EAAA,GAAAnB,EAAA,KACAjV,EAAA8U,EAAA9U,EAAA3H,EAAAsc,EAAA5U,EAAA0V,EAAA,GAAAR,EAAA,KACAlV,EAAA+U,EAAA/U,EAAAC,EAAA3H,EAAAsc,EAAAmB,EAAA,EAAAb,EAAA,KACAN,EAAAG,EAAAH,EAAA5U,EAAAC,EAAA3H,EAAA8d,EAAA,EAAAlB,EAAA,KACA5c,EAAAyc,EAAAzc,EAAAsc,EAAA5U,EAAAC,EAAAwW,EAAA,GAAAvB,EAAA,KACAjV,EAAA8U,EAAA9U,EAAA3H,EAAAsc,EAAA5U,EAAA8V,EAAA,GAAAZ,EAAA,KACAlV,EAAA+U,EAAA/U,EAAAC,EAAA3H,EAAAsc,EAAAuB,EAAA,EAAAjB,EAAA,KACAN,EAAAG,EAAAH,EAAA5U,EAAAC,EAAA3H,EAAAke,EAAA,EAAAtB,EAAA,KACA5c,EAAAyc,EAAAzc,EAAAsc,EAAA5U,EAAAC,EAAA4V,EAAA,GAAAX,EAAA,KACAjV,EAAA8U,EAAA9U,EAAA3H,EAAAsc,EAAA5U,EAAAkW,EAAA,GAAAhB,EAAA,KACAlV,EAAA+U,EAAA/U,EAAAC,EAAA3H,EAAAsc,EAAA2B,EAAA,EAAArB,EAAA,KACAN,EAAAG,EAAAH,EAAA5U,EAAAC,EAAA3H,EAAAsd,EAAA,EAAAV,EAAA,KACA5c,EAAAyc,EAAAzc,EAAAsc,EAAA5U,EAAAC,EAAAgW,EAAA,GAAAf,EAAA,KACAjV,EAAA8U,EAAA9U,EAAA3H,EAAAsc,EAAA5U,EAAAsW,EAAA,GAAApB,EAAA,KAEAlV,EAAAgV,EAAAhV,EAAAC,EAAA3H,EAAAsc,EAAAmB,EAAA,EAAAb,EAAA,KACAN,EAAAI,EAAAJ,EAAA5U,EAAAC,EAAA3H,EAAA4d,EAAA,GAAAhB,EAAA,KACA5c,EAAA0c,EAAA1c,EAAAsc,EAAA5U,EAAAC,EAAAoW,EAAA,GAAAnB,EAAA,KACAjV,EAAA+U,EAAA/U,EAAA3H,EAAAsc,EAAA5U,EAAAwW,EAAA,GAAAtB,EAAA,KACAlV,EAAAgV,EAAAhV,EAAAC,EAAA3H,EAAAsc,EAAAe,EAAA,EAAAT,EAAA,KACAN,EAAAI,EAAAJ,EAAA5U,EAAAC,EAAA3H,EAAAwd,EAAA,GAAAZ,EAAA,KACA5c,EAAA0c,EAAA1c,EAAAsc,EAAA5U,EAAAC,EAAAgW,EAAA,GAAAf,EAAA,KACAjV,EAAA+U,EAAA/U,EAAA3H,EAAAsc,EAAA5U,EAAAoW,EAAA,GAAAlB,EAAA,KACAlV,EAAAgV,EAAAhV,EAAAC,EAAA3H,EAAAsc,EAAA2B,EAAA,EAAArB,EAAA,KACAN,EAAAI,EAAAJ,EAAA5U,EAAAC,EAAA3H,EAAAod,EAAA,GAAAR,EAAA,KACA5c,EAAA0c,EAAA1c,EAAAsc,EAAA5U,EAAAC,EAAA4V,EAAA,GAAAX,EAAA,KACAjV,EAAA+U,EAAA/U,EAAA3H,EAAAsc,EAAA5U,EAAAgW,EAAA,GAAAd,EAAA,KACAlV,EAAAgV,EAAAhV,EAAAC,EAAA3H,EAAAsc,EAAAuB,EAAA,EAAAjB,EAAA,KACAN,EAAAI,EAAAJ,EAAA5U,EAAAC,EAAA3H,EAAAge,EAAA,GAAApB,EAAA,KACA5c,EAAA0c,EAAA1c,EAAAsc,EAAA5U,EAAAC,EAAAwW,EAAA,GAAAvB,EAAA,KACAjV,EAAA+U,EAAA/U,EAAA3H,EAAAsc,EAAA5U,EAAA4V,EAAA,GAAAV,EAAA,KAEAlV,EAAAiV,EAAAjV,EAAAC,EAAA3H,EAAAsc,EAAAc,EAAA,EAAAR,EAAA,KACAN,EAAAK,EAAAL,EAAA5U,EAAAC,EAAA3H,EAAA2d,EAAA,GAAAf,EAAA,KACA5c,EAAA2c,EAAA3c,EAAAsc,EAAA5U,EAAAC,EAAAuW,EAAA,GAAAtB,EAAA,KACAjV,EAAAgV,EAAAhV,EAAA3H,EAAAsc,EAAA5U,EAAA+V,EAAA,GAAAb,EAAA,KACAlV,EAAAiV,EAAAjV,EAAAC,EAAA3H,EAAAsc,EAAA0B,EAAA,EAAApB,EAAA,KACAN,EAAAK,EAAAL,EAAA5U,EAAAC,EAAA3H,EAAAud,EAAA,GAAAX,EAAA,KACA5c,EAAA2c,EAAA3c,EAAAsc,EAAA5U,EAAAC,EAAAmW,EAAA,GAAAlB,EAAA,KACAjV,EAAAgV,EAAAhV,EAAA3H,EAAAsc,EAAA5U,EAAA2V,EAAA,GAAAT,EAAA,KACAlV,EAAAiV,EAAAjV,EAAAC,EAAA3H,EAAAsc,EAAAsB,EAAA,EAAAhB,EAAA,KACAN,EAAAK,EAAAL,EAAA5U,EAAAC,EAAA3H,EAAAme,EAAA,GAAAvB,EAAA,KACA5c,EAAA2c,EAAA3c,EAAAsc,EAAA5U,EAAAC,EAAA+V,EAAA,GAAAd,EAAA,KACAjV,EAAAgV,EAAAhV,EAAA3H,EAAAsc,EAAA5U,EAAAuW,EAAA,GAAArB,EAAA,KACAlV,EAAAiV,EAAAjV,EAAAC,EAAA3H,EAAAsc,EAAAkB,EAAA,EAAAZ,EAAA,KACAN,EAAAK,EAAAL,EAAA5U,EAAAC,EAAA3H,EAAA+d,EAAA,GAAAnB,EAAA,KACA5c,EAAA2c,EAAA3c,EAAAsc,EAAA5U,EAAAC,EAAA2V,EAAA,GAAAV,EAAA,KACAjV,EAAAgV,EAAAhV,EAAA3H,EAAAsc,EAAA5U,EAAAmW,EAAA,GAAAjB,EAAA,KAGAO,EAAA,GAAAA,EAAA,GAAAzV,EAAA,EACAyV,EAAA,GAAAA,EAAA,GAAAxV,EAAA,EACAwV,EAAA,GAAAA,EAAA,GAAAnd,EAAA,EACAmd,EAAA,GAAAA,EAAA,GAAAb,EAAA,GAGAhE,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAgK,EAAA,EAAA7e,KAAAsX,YACAwH,EAAA,EAAAlV,EAAAkL,QAGA4C,GAAAoH,IAAA,YAAAA,EAAA,EAEA,IAAAC,GAAApR,EAAAqR,MAAAH,EAAA,YACAI,EAAAJ,CACAnH,IAAAoH,EAAA,eACA,UAAAC,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAEArH,GAAAoH,EAAA,eACA,UAAAG,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAGArV,EAAAkL,SAAA,GAAA4C,EAAA/S,OAAA,GAGA3E,KAAAwX,UAOA,QAJAsB,GAAA9Y,KAAAwd,MACAI,EAAA9E,EAAAjE,MAGApQ,EAAA,EAA4BA,EAAA,EAAOA,IAAA,CAEnC,GAAAya,GAAAtB,EAAAnZ,EAEAmZ,GAAAnZ,GAAA,UAAAya,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAIA,MAAApG,IAGAnE,MAAA,WACA,GAAAA,GAAA6D,EAAA7D,MAAApU,KAAAP,KAGA,OAFA2U,GAAA6I,MAAAxd,KAAAwd,MAAA7I,QAEAA,IAsCAV,GAAAsJ,IAAA/E,EAAAQ,cAAAuE,GAgBAtJ,EAAAkL,QAAA3G,EAAAW,kBAAAoE,IACE5P,MAGFkG,EAAA0J,OnB6gFM,SAAS1d,EAAQD,EAASM,IoBtxF/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAsID,MApIA,YAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA4D,EAAAtE,EAAAsE,OACAD,EAAAtE,EAAAoF,KAGA+F,KAKAC,EAAA9G,EAAA8G,KAAA7G,EAAAnE,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAA5I,GAAA/I,MACA,sBACA,qBACA,cAIAuM,gBAAA,SAAAqF,EAAAtF,GAYA,OAVAyF,GAAA5d,KAAAwd,MAAA3I,MAGA1M,EAAAyV,EAAA,GACAxV,EAAAwV,EAAA,GACAnd,EAAAmd,EAAA,GACAb,EAAAa,EAAA,GACA1Z,EAAA0Z,EAAA,GAGAnZ,EAAA,EAA4BA,EAAA,GAAQA,IAAA,CACpC,GAAAA,EAAA,GACA2a,EAAA3a,GAAA,EAAAgZ,EAAAtF,EAAA1T,OACkB,CAClB,GAAAwY,GAAAmC,EAAA3a,EAAA,GAAA2a,EAAA3a,EAAA,GAAA2a,EAAA3a,EAAA,IAAA2a,EAAA3a,EAAA,GACA2a,GAAA3a,GAAAwY,GAAA,EAAAA,IAAA,GAGA,GAAA1M,IAAApI,GAAA,EAAAA,IAAA,IAAAjE,EAAAkb,EAAA3a,EAEA8L,IADA9L,EAAA,IACA2D,EAAA3H,GAAA2H,EAAA2U,GAAA,WACkBtY,EAAA,IAClB2D,EAAA3H,EAAAsc,GAAA,WACkBtY,EAAA,IAClB2D,EAAA3H,EAAA2H,EAAA2U,EAAAtc,EAAAsc,GAAA,YAEA3U,EAAA3H,EAAAsc,GAAA,UAGA7Y,EAAA6Y,EACAA,EAAAtc,EACAA,EAAA2H,GAAA,GAAAA,IAAA,EACAA,EAAAD,EACAA,EAAAoI,EAIAqN,EAAA,GAAAA,EAAA,GAAAzV,EAAA,EACAyV,EAAA,GAAAA,EAAA,GAAAxV,EAAA,EACAwV,EAAA,GAAAA,EAAA,GAAAnd,EAAA,EACAmd,EAAA,GAAAA,EAAA,GAAAb,EAAA,EACAa,EAAA,GAAAA,EAAA,GAAA1Z,EAAA,GAGA6U,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAgK,EAAA,EAAA7e,KAAAsX,YACAwH,EAAA,EAAAlV,EAAAkL,QAYA,OATA4C,GAAAoH,IAAA,YAAAA,EAAA,GACApH,GAAAoH,EAAA,eAAAnR,KAAAqR,MAAAH,EAAA,YACAnH,GAAAoH,EAAA,eAAAD,EACAjV,EAAAkL,SAAA,EAAA4C,EAAA/S,OAGA3E,KAAAwX,WAGAxX,KAAAwd,OAGA7I,MAAA,WACA,GAAAA,GAAA6D,EAAA7D,MAAApU,KAAAP,KAGA,OAFA2U,GAAA6I,MAAAxd,KAAAwd,MAAA7I,QAEAA,IAkBAV,GAAAoL,KAAA7G,EAAAQ,cAAAqG,GAgBApL,EAAAqL,SAAA9G,EAAAW,kBAAAkG,MAIAxL,EAAAwL,QpB8xFM,SAASxf,EAAQD,EAASM,IqBj7F/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAuLD,MArLA,UAAAlG,GAEA,GAAAsG,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA4D,EAAAtE,EAAAsE,OACAD,EAAAtE,EAAAoF,KAGAuE,KACA2B,MAGA,WACA,QAAAC,GAAAvC,GAEA,OADAwC,GAAA9R,EAAA0B,KAAA4N,GACAyC,EAAA,EAAiCA,GAAAD,EAAiBC,IAClD,KAAAzC,EAAAyC,GACA,QAIA,UAGA,QAAAC,GAAA1C,GACA,mBAAAA,GAAA,EAAAA,IAAA,EAKA,IAFA,GAAAA,GAAA,EACA2C,EAAA,EACAA,EAAA,IACAJ,EAAAvC,KACA2C,EAAA,IACAhC,EAAAgC,GAAAD,EAAAhS,EAAA2B,IAAA2N,EAAA,MAEAsC,EAAAK,GAAAD,EAAAhS,EAAA2B,IAAA2N,EAAA,MAEA2C,KAGA3C,MAKA,IAAAmC,MAKAS,EAAAtH,EAAAsH,OAAArH,EAAAnE,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAA5I,GAAA/I,KAAA+R,EAAA3X,MAAA,KAGAmS,gBAAA,SAAAqF,EAAAtF,GAeA,OAbAyF,GAAA5d,KAAAwd,MAAA3I,MAGA1M,EAAAyV,EAAA,GACAxV,EAAAwV,EAAA,GACAnd,EAAAmd,EAAA,GACAb,EAAAa,EAAA,GACA1Z,EAAA0Z,EAAA,GACAkC,EAAAlC,EAAA,GACAmC,EAAAnC,EAAA,GACAoC,EAAApC,EAAA,GAGAnZ,EAAA,EAA4BA,EAAA,GAAQA,IAAA,CACpC,GAAAA,EAAA,GACA2a,EAAA3a,GAAA,EAAAgZ,EAAAtF,EAAA1T,OACkB,CAClB,GAAAwb,GAAAb,EAAA3a,EAAA,IACAyb,GAAAD,GAAA,GAAAA,IAAA,IACAA,GAAA,GAAAA,IAAA,IACAA,IAAA,EAEAE,EAAAf,EAAA3a,EAAA,GACA2b,GAAAD,GAAA,GAAAA,IAAA,KACAA,GAAA,GAAAA,IAAA,IACAA,IAAA,EAEAf,GAAA3a,GAAAyb,EAAAd,EAAA3a,EAAA,GAAA2b,EAAAhB,EAAA3a,EAAA,IAGA,GAAA4b,GAAAnc,EAAA4b,GAAA5b,EAAA6b,EACAO,EAAAnY,EAAAC,EAAAD,EAAA1H,EAAA2H,EAAA3H,EAEA8f,GAAApY,GAAA,GAAAA,IAAA,IAAAA,GAAA,GAAAA,IAAA,KAAAA,GAAA,GAAAA,IAAA,IACAqY,GAAAtc,GAAA,GAAAA,IAAA,IAAAA,GAAA,GAAAA,IAAA,KAAAA,GAAA,EAAAA,IAAA,IAEAuc,EAAAT,EAAAQ,EAAAH,EAAAd,EAAA9a,GAAA2a,EAAA3a,GACAic,EAAAH,EAAAD,CAEAN,GAAAD,EACAA,EAAAD,EACAA,EAAA5b,EACAA,EAAA6Y,EAAA0D,EAAA,EACA1D,EAAAtc,EACAA,EAAA2H,EACAA,EAAAD,EACAA,EAAAsY,EAAAC,EAAA,EAIA9C,EAAA,GAAAA,EAAA,GAAAzV,EAAA,EACAyV,EAAA,GAAAA,EAAA,GAAAxV,EAAA,EACAwV,EAAA,GAAAA,EAAA,GAAAnd,EAAA,EACAmd,EAAA,GAAAA,EAAA,GAAAb,EAAA,EACAa,EAAA,GAAAA,EAAA,GAAA1Z,EAAA,EACA0Z,EAAA,GAAAA,EAAA,GAAAkC,EAAA,EACAlC,EAAA,GAAAA,EAAA,GAAAmC,EAAA,EACAnC,EAAA,GAAAA,EAAA,GAAAoC,EAAA,GAGAjH,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAgK,EAAA,EAAA7e,KAAAsX,YACAwH,EAAA,EAAAlV,EAAAkL,QAYA,OATA4C,GAAAoH,IAAA,YAAAA,EAAA,GACApH,GAAAoH,EAAA,eAAAnR,EAAAqR,MAAAH,EAAA,YACAnH,GAAAoH,EAAA,eAAAD,EACAjV,EAAAkL,SAAA,EAAA4C,EAAA/S,OAGA3E,KAAAwX,WAGAxX,KAAAwd,OAGA7I,MAAA,WACA,GAAAA,GAAA6D,EAAA7D,MAAApU,KAAAP,KAGA,OAFA2U,GAAA6I,MAAAxd,KAAAwd,MAAA7I,QAEAA,IAkBAV,GAAA4L,OAAArH,EAAAQ,cAAA6G,GAgBA5L,EAAA0M,WAAAnI,EAAAW,kBAAA0G,IACElS,MAGFkG,EAAAgM,UrBy7FM,SAAShgB,EAAQD,EAASM,IsB7nG/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAgED,MA9DA,YAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA2D,EAAAtE,EAAAoF,KACAwG,EAAAtH,EAAAsH,OAKAe,EAAArI,EAAAqI,OAAAf,EAAAxL,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAA5I,GAAA/I,MACA,0CACA,+CAIAkN,YAAA,WACA,GAAAD,GAAA+G,EAAA9G,YAAAxY,KAAAP,KAIA,OAFA8Y,GAAAhE,UAAA,EAEAgE,IAkBA7E,GAAA2M,OAAAf,EAAA7G,cAAA4H,GAgBA3M,EAAA4M,WAAAhB,EAAA1G,kBAAAyH,MAIA/M,EAAA+M,UtBqoGM,SAAS/gB,EAAQD,EAASM,IuBltG/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAmTD,MAjTA,YAUA,QAAAiN,KACA,MAAAC,GAAAjN,OAAA3P,MAAA4c,EAAA3c,WATA,GAAA6P,GAAAJ,EACAK,EAAAD,EAAAE,IACAqE,EAAAtE,EAAAsE,OACAe,EAAAtF,EAAAuF,IACAuH,EAAAxH,EAAAE,KACAuH,EAAAzH,EAAA3E,UACA2D,EAAAtE,EAAAoF,KAOAkG,GACAuB,EAAA,uBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,sBAAAA,EAAA,qBACAA,EAAA,sBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,qBACAA,EAAA,sBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,sBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,sBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,qBACAA,EAAA,qBAAAA,EAAA,sBACAA,EAAA,sBAAAA,EAAA,uBACAA,EAAA,uBAAAA,EAAA,uBACAA,EAAA,sBAAAA,EAAA,wBAIA1B,MACA,WACA,OAAA3a,GAAA,EAAwBA,EAAA,GAAQA,IAChC2a,EAAA3a,GAAAqc,MAOA,IAAAG,GAAA1I,EAAA0I,OAAAzI,EAAAnE,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAAwD,GAAAnV,MACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,uBACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,uBACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,sBACA,GAAAkV,GAAAlV,KAAA,yBAAAkV,GAAAlV,KAAA,yBAIAuM,gBAAA,SAAAqF,EAAAtF,GAiDA,OA/CAyF,GAAA5d,KAAAwd,MAAA3I,MAEAqM,EAAAtD,EAAA,GACAuD,EAAAvD,EAAA,GACAwD,EAAAxD,EAAA,GACAyD,EAAAzD,EAAA,GACA0D,EAAA1D,EAAA,GACA2D,EAAA3D,EAAA,GACA4D,EAAA5D,EAAA,GACA6D,EAAA7D,EAAA,GAEA8D,EAAAR,EAAAxH,KACAiI,EAAAT,EAAAvH,IACAiI,EAAAT,EAAAzH,KACAmI,EAAAV,EAAAxH,IACAmI,EAAAV,EAAA1H,KACAqI,EAAAX,EAAAzH,IACAqI,EAAAX,EAAA3H,KACAuI,EAAAZ,EAAA1H,IACAuI,EAAAZ,EAAA5H,KACAyI,EAAAb,EAAA3H,IACAyI,EAAAb,EAAA7H,KACA2I,EAAAd,EAAA5H,IACA2I,EAAAd,EAAA9H,KACA6I,EAAAf,EAAA7H,IACA6I,EAAAf,EAAA/H,KACA+I,EAAAhB,EAAA9H,IAGA+I,EAAAhB,EACAiB,EAAAhB,EACAiB,EAAAhB,EACAiB,EAAAhB,EACAxB,EAAAyB,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EACAgB,EAAAf,EAGAhe,EAAA,EAA4BA,EAAA,GAAQA,IAAA,CAEpC,GAAAgf,GAAArE,EAAA3a,EAGA,IAAAA,EAAA,GACA,GAAAif,GAAAD,EAAA/J,KAAA,EAAA+D,EAAAtF,EAAA,EAAA1T,GACAkf,EAAAF,EAAA9J,IAAA,EAAA8D,EAAAtF,EAAA,EAAA1T,EAAA,OACkB,CAElB,GAAAwb,GAAAb,EAAA3a,EAAA,IACAmf,EAAA3D,EAAAvG,KACAmK,EAAA5D,EAAAtG,IACAmK,GAAAF,IAAA,EAAAC,GAAA,KAAAD,IAAA,EAAAC,GAAA,IAAAD,IAAA,EACAG,GAAAF,IAAA,EAAAD,GAAA,KAAAC,IAAA,EAAAD,GAAA,KAAAC,IAAA,EAAAD,GAAA,IAGAzD,GAAAf,EAAA3a,EAAA,GACAuf,GAAA7D,GAAAzG,KACAuK,GAAA9D,GAAAxG,IACAuK,IAAAF,KAAA,GAAAC,IAAA,KAAAD,IAAA,EAAAC,KAAA,IAAAD,KAAA,EACAG,IAAAF,KAAA,GAAAD,IAAA,KAAAC,IAAA,EAAAD,KAAA,KAAAC,KAAA,EAAAD,IAAA,IAGAI,GAAAhF,EAAA3a,EAAA,GACA4f,GAAAD,GAAA1K,KACA4K,GAAAF,GAAAzK,IAEA4K,GAAAnF,EAAA3a,EAAA,IACA+f,GAAAD,GAAA7K,KACA+K,GAAAF,GAAA5K,IAEAgK,EAAAI,EAAAO,GACAZ,EAAAI,EAAAO,IAAAV,IAAA,EAAAI,IAAA,OACAJ,IAAAQ,GACAT,IAAAQ,IAAAP,IAAA,EAAAQ,KAAA,OACAR,IAAAc,GACAf,IAAAc,IAAAb,IAAA,EAAAc,KAAA,MAEAhB,GAAA/J,KAAAgK,EACAD,EAAA9J,IAAAgK,EAGA,GAAAe,IAAAzB,EAAAE,GAAAF,EAAAI,EACAsB,GAAAzB,EAAAE,GAAAF,EAAAI,EACAsB,GAAAlC,EAAAE,EAAAF,EAAArC,EAAAuC,EAAAvC,EACAwE,GAAAlC,EAAAE,EAAAF,EAAAG,EAAAD,EAAAC,EAEAgC,IAAApC,IAAA,GAAAC,GAAA,IAAAD,GAAA,GAAAC,IAAA,IAAAD,GAAA,GAAAC,IAAA,GACAoC,IAAApC,IAAA,GAAAD,GAAA,IAAAC,GAAA,GAAAD,IAAA,IAAAC,GAAA,GAAAD,IAAA,GACAsC,IAAA/B,IAAA,GAAAC,GAAA,KAAAD,IAAA,GAAAC,GAAA,KAAAD,GAAA,GAAAC,IAAA,GACA+B,IAAA/B,IAAA,GAAAD,GAAA,KAAAC,IAAA,GAAAD,GAAA,KAAAC,GAAA,GAAAD,IAAA,GAGAiC,GAAA3F,EAAA9a,GACA0gB,GAAAD,GAAAxL,KACA0L,GAAAF,GAAAvL,IAEA0L,GAAA7B,EAAAyB,GACAK,GAAA/B,EAAAyB,IAAAK,KAAA,EAAA7B,IAAA,OACA6B,MAAAV,GACAW,MAAAZ,IAAAW,KAAA,EAAAV,KAAA,OACAU,MAAAD,GACAE,MAAAH,IAAAE,KAAA,EAAAD,KAAA,OACAC,MAAA1B,EACA2B,MAAA5B,GAAA2B,KAAA,EAAA1B,IAAA,OAGA4B,GAAAR,GAAAF,GACAW,GAAAV,GAAAF,IAAAW,KAAA,EAAAR,KAAA,MAGAxB,GAAAF,EACAG,EAAAF,EACAD,EAAAF,EACAG,EAAAF,EACAD,EAAAF,EACAG,EAAAF,EACAA,EAAAF,EAAAqC,GAAA,EACApC,EAAAF,EAAAuC,IAAApC,IAAA,EAAAF,IAAA,SACAD,EAAA1C,EACA2C,EAAAF,EACAzC,EAAAuC,EACAE,EAAAD,EACAD,EAAAF,EACAG,EAAAF,EACAA,EAAA0C,GAAAE,GAAA,EACA7C,EAAA4C,GAAAE,IAAA7C,IAAA,EAAA0C,KAAA,SAIA1D,EAAAT,EAAAvH,IAAAgI,EAAAgB,EACAzB,EAAAxH,KAAAgI,EAAAgB,GAAAf,IAAA,EAAAgB,IAAA,OACAd,EAAAV,EAAAxH,IAAAkI,EAAAgB,EACA1B,EAAAzH,KAAAkI,EAAAgB,GAAAf,IAAA,EAAAgB,IAAA,OACAd,EAAAX,EAAAzH,IAAAoI,EAAAe,EACA1B,EAAA1H,KAAAoI,EAAAzB,GAAA0B,IAAA,EAAAe,IAAA,OACAb,EAAAZ,EAAA1H,IAAAsI,EAAAe,EACA3B,EAAA3H,KAAAsI,EAAAe,GAAAd,IAAA,EAAAe,IAAA,OACAb,EAAAb,EAAA3H,IAAAwI,EAAAe,EACA5B,EAAA5H,KAAAwI,EAAAe,GAAAd,IAAA,EAAAe,IAAA,OACAb,EAAAd,EAAA5H,IAAA0I,EAAAe,EACA7B,EAAA7H,KAAA0I,EAAAe,GAAAd,IAAA,EAAAe,IAAA,OACAb,EAAAf,EAAA7H,IAAA4I,EAAAe,EACA9B,EAAA9H,KAAA4I,EAAAe,GAAAd,IAAA,EAAAe,IAAA,OACAb,EAAAhB,EAAA9H,IAAA8I,EAAAe,EACA/B,EAAA/H,KAAA8I,EAAAe,GAAAd,IAAA,EAAAe,IAAA,QAGAzK,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAgK,EAAA,EAAA7e,KAAAsX,YACAwH,EAAA,EAAAlV,EAAAkL,QAGA4C,GAAAoH,IAAA,YAAAA,EAAA,GACApH,GAAAoH,EAAA,iBAAAnR,KAAAqR,MAAAH,EAAA,YACAnH,GAAAoH,EAAA,iBAAAD,EACAjV,EAAAkL,SAAA,EAAA4C,EAAA/S,OAGA3E,KAAAwX,UAGA,IAAAsB,GAAA9Y,KAAAwd,MAAA5D,OAGA,OAAAd,IAGAnE,MAAA,WACA,GAAAA,GAAA6D,EAAA7D,MAAApU,KAAAP,KAGA,OAFA2U,GAAA6I,MAAAxd,KAAAwd,MAAA7I,QAEAA,GAGAiD,UAAA,IAiBA3D,GAAAgN,OAAAzI,EAAAQ,cAAAiI,GAgBAhN,EAAAwR,WAAAjN,EAAAW,kBAAA8H,MAIApN,EAAAoN,UvB0tGM,SAASphB,EAAQD,EAASM,IwB1hH/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAmED,MAjEA,YAEA,GAAAI,GAAAJ,EACA0F,EAAAtF,EAAAuF,IACAuH,EAAAxH,EAAAE,KACAuH,EAAAzH,EAAA3E,UACA2D,EAAAtE,EAAAoF,KACA4H,EAAA1I,EAAA0I,OAKAyE,EAAAnN,EAAAmN,OAAAzE,EAAA5M,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA,GAAAwD,GAAAnV,MACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,sBACA,GAAAkV,GAAAlV,KAAA,yBAAAkV,GAAAlV,KAAA,sBACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,uBACA,GAAAkV,GAAAlV,KAAA,0BAAAkV,GAAAlV,KAAA,0BAIAkN,YAAA,WACA,GAAAD,GAAAmI,EAAAlI,YAAAxY,KAAAP,KAIA,OAFA8Y,GAAAhE,UAAA,GAEAgE,IAkBA7E,GAAAyR,OAAAzE,EAAAjI,cAAA0M,GAgBAzR,EAAA0R,WAAA1E,EAAA9H,kBAAAuM,MAIA7R,EAAA6R,UxBkiHM,SAAS7lB,EAAQD,EAASM,IyBlnH/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAmTD,MAjTA,UAAAlG,GAEA,GAAAsG,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA4D,EAAAtE,EAAAsE,OACAe,EAAAtF,EAAAuF,IACAuH,EAAAxH,EAAAE,KACAlB,EAAAtE,EAAAoF,KAGAuM,KACAC,KACAC,MAGA,WAGA,OADA7d,GAAA,EAAA+G,EAAA,EACAuB,EAAA,EAAwBA,EAAA,GAAQA,IAAA,CAChCqV,EAAA3d,EAAA,EAAA+G,IAAAuB,EAAA,IAAAA,EAAA,OAEA,IAAAwV,GAAA/W,EAAA,EACAgX,GAAA,EAAA/d,EAAA,EAAA+G,GAAA,CACA/G,GAAA8d,EACA/W,EAAAgX,EAIA,OAAA/d,GAAA,EAAwBA,EAAA,EAAOA,IAC/B,OAAA+G,GAAA,EAA4BA,EAAA,EAAOA,IACnC6W,EAAA5d,EAAA,EAAA+G,MAAA,EAAA/G,EAAA,EAAA+G,GAAA,GAMA,QADAiX,GAAA,EACAxhB,EAAA,EAAwBA,EAAA,GAAQA,IAAA,CAIhC,OAHAyhB,GAAA,EACAC,EAAA,EAEA1J,EAAA,EAA4BA,EAAA,EAAOA,IAAA,CACnC,KAAAwJ,EAAA,CACA,GAAAG,IAAA,GAAA3J,GAAA,CACA2J,GAAA,GACAD,GAAA,GAAAC,EAEAF,GAAA,GAAAE,EAAA,GAKA,IAAAH,EAEAA,KAAA,MAEAA,IAAA,EAIAH,EAAArhB,GAAAsc,EAAAjN,OAAAoS,EAAAC,MAKA,IAAA9I,OACA,WACA,OAAA5Y,GAAA,EAAwBA,EAAA,GAAQA,IAChC4Y,EAAA5Y,GAAAsc,EAAAjN,WAOA,IAAAuS,GAAA9N,EAAA8N,KAAA7N,EAAAnE,QASAoE,IAAAD,EAAAC,IAAApE,QACAiS,aAAA,MAGA5N,SAAA,WAEA,OADA6N,GAAAvmB,KAAAwmB,UACA/hB,EAAA,EAA4BA,EAAA,GAAQA,IACpC8hB,EAAA9hB,GAAA,GAAAsc,GAAAlV,IAGA7L,MAAA4X,WAAA,OAAA5X,KAAAyY,IAAA6N,cAAA,IAGAlO,gBAAA,SAAAqF,EAAAtF,GAMA,OAJAoO,GAAAvmB,KAAAwmB,OACAC,EAAAzmB,KAAA4X,UAAA,EAGAnT,EAAA,EAA4BA,EAAAgiB,EAAqBhiB,IAAA,CAEjD,GAAAiiB,GAAAjJ,EAAAtF,EAAA,EAAA1T,GACAkiB,EAAAlJ,EAAAtF,EAAA,EAAA1T,EAAA,EAGAiiB,GACA,UAAAA,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAEAC,EACA,UAAAA,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,EAIA,IAAAC,GAAAL,EAAA9hB,EACAmiB,GAAAlN,MAAAiN,EACAC,EAAAjN,KAAA+M,EAIA,OAAAG,GAAA,EAAgCA,EAAA,GAAYA,IAAA,CAE5C,OAAA5e,GAAA,EAAgCA,EAAA,EAAOA,IAAA,CAGvC,OADA6e,GAAA,EAAAC,EAAA,EACA/X,EAAA,EAAoCA,EAAA,EAAOA,IAAA,CAC3C,GAAA4X,GAAAL,EAAAte,EAAA,EAAA+G,EACA8X,IAAAF,EAAAlN,KACAqN,GAAAH,EAAAjN,IAIA,GAAAqN,GAAA3J,EAAApV,EACA+e,GAAAtN,KAAAoN,EACAE,EAAArN,IAAAoN,EAEA,OAAA9e,GAAA,EAAgCA,EAAA,EAAOA,IAUvC,OARAgf,GAAA5J,GAAApV,EAAA,MACAif,EAAA7J,GAAApV,EAAA,MACAkf,EAAAD,EAAAxN,KACA0N,EAAAF,EAAAvN,IAGAmN,EAAAG,EAAAvN,MAAAyN,GAAA,EAAAC,IAAA,IACAL,EAAAE,EAAAtN,KAAAyN,GAAA,EAAAD,IAAA,IACAnY,EAAA,EAAoCA,EAAA,EAAOA,IAAA,CAC3C,GAAA4X,GAAAL,EAAAte,EAAA,EAAA+G,EACA4X,GAAAlN,MAAAoN,EACAF,EAAAjN,KAAAoN,EAKA,OAAAM,GAAA,EAAwCA,EAAA,GAAgBA,IAAA,CAExD,GAAAT,GAAAL,EAAAc,GACAC,EAAAV,EAAAlN,KACA6N,EAAAX,EAAAjN,IACA6N,EAAA5B,EAAAyB,EAGA,IAAAG,EAAA,GACA,GAAAV,GAAAQ,GAAAE,EAAAD,IAAA,GAAAC,EACAT,EAAAQ,GAAAC,EAAAF,IAAA,GAAAE,MAEA,IAAAV,GAAAS,GAAAC,EAAA,GAAAF,IAAA,GAAAE,EACAT,EAAAO,GAAAE,EAAA,GAAAD,IAAA,GAAAC,CAIA,IAAAC,GAAApK,EAAAwI,EAAAwB,GACAI,GAAA/N,KAAAoN,EACAW,EAAA9N,IAAAoN,EAIA,GAAAW,GAAArK,EAAA,GACAsK,EAAApB,EAAA,EACAmB,GAAAhO,KAAAiO,EAAAjO,KACAgO,EAAA/N,IAAAgO,EAAAhO,GAGA,QAAA1R,GAAA,EAAgCA,EAAA,EAAOA,IACvC,OAAA+G,GAAA,EAAoCA,EAAA,EAAOA,IAAA,CAE3C,GAAAqY,GAAApf,EAAA,EAAA+G,EACA4X,EAAAL,EAAAc,GACAO,EAAAvK,EAAAgK,GACAQ,EAAAxK,GAAApV,EAAA,OAAA+G,GACA8Y,EAAAzK,GAAApV,EAAA,OAAA+G,EAGA4X,GAAAlN,KAAAkO,EAAAlO,MAAAmO,EAAAnO,KAAAoO,EAAApO,KACAkN,EAAAjN,IAAAiO,EAAAjO,KAAAkO,EAAAlO,IAAAmO,EAAAnO,IAKA,GAAAiN,GAAAL,EAAA,GACAwB,EAAAjC,EAAAe,EACAD,GAAAlN,MAAAqO,EAAArO,KACAkN,EAAAjN,KAAAoO,EAAApO,MAIAZ,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAiK,GADA,EAAA9e,KAAAsX,YACA,EAAA1N,EAAAkL,UACAkT,EAAA,GAAAhoB,KAAA4X,SAGAF,GAAAoH,IAAA,UAAAA,EAAA,GACApH,GAAA/J,EAAA6H,MAAAsJ,EAAA,GAAAkJ,OAAA,WACApe,EAAAkL,SAAA,EAAA4C,EAAA/S,OAGA3E,KAAAwX,UASA,QANA+O,GAAAvmB,KAAAwmB,OACAyB,EAAAjoB,KAAAyY,IAAA6N,aAAA,EACA4B,EAAAD,EAAA,EAGAE,KACA1jB,EAAA,EAA4BA,EAAAyjB,EAAuBzjB,IAAA;AAEnD,GAAAmiB,GAAAL,EAAA9hB,GACA6iB,EAAAV,EAAAlN,KACA6N,EAAAX,EAAAjN,GAGA2N,GACA,UAAAA,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAEAC,EACA,UAAAA,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAIAY,EAAAvX,KAAA2W,GACAY,EAAAvX,KAAA0W,GAIA,UAAA1S,GAAA/I,KAAAsc,EAAAF,IAGAtT,MAAA,WAIA,OAHAA,GAAA6D,EAAA7D,MAAApU,KAAAP,MAEAumB,EAAA5R,EAAA6R,OAAAxmB,KAAAwmB,OAAAvgB,MAAA,GACAxB,EAAA,EAA4BA,EAAA,GAAQA,IACpC8hB,EAAA9hB,GAAA8hB,EAAA9hB,GAAAkQ,OAGA,OAAAA,KAkBAV,GAAAoS,KAAA7N,EAAAQ,cAAAqN,GAgBApS,EAAAmU,SAAA5P,EAAAW,kBAAAkN,IACE1Y,MAGFkG,EAAAwS,QzB0nHM,SAASxmB,EAAQD,EAASM,I0B17H/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T;;;;;;;;;;AA2PD,MA9OA,UAAAlG,GAiLA,QAAA0a,GAAApgB,EAAA+G,EAAAsZ,GACA,aAIA,QAAAC,GAAAtgB,EAAA+G,EAAAsZ,GACA,YAAArgB,EAAA,EAGA,QAAAugB,GAAAvgB,EAAA+G,EAAAsZ,GACA,eAGA,QAAAG,GAAAxgB,EAAA+G,EAAAsZ,GACA,gBAGA,QAAAI,GAAAzgB,EAAA+G,EAAAsZ,GACA,gBAIA,QAAAK,GAAA1gB,EAAAgV,GACA,MAAAhV,IAAAgV,EAAAhV,IAAA,GAAAgV,EAtMA,GAAAhJ,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACA4D,EAAAtE,EAAAsE,OACAD,EAAAtE,EAAAoF,KAGAuP,EAAAhU,EAAAd,QACA,sCACA,sCACA,sCACA,sCACA,wCACA+U,EAAAjU,EAAAd,QACA,sCACA,sCACA,sCACA,sCACA,wCACAgV,EAAAlU,EAAAd,QACA,wCACA,wCACA,wCACA,wCACA,0CACAiV,EAAAnU,EAAAd,QACA,wCACA,wCACA,wCACA,wCACA,0CAEAkV,EAAApU,EAAAd,QAAA,gDACAmV,EAAArU,EAAAd,QAAA,gDAKAoV,EAAA3Q,EAAA2Q,UAAA1Q,EAAAnE,QACAqE,SAAA,WACA1Y,KAAAwd,MAAA5I,EAAAd,QAAA,yDAGAsE,gBAAA,SAAAqF,EAAAtF,GAGA,OAAA1T,GAAA,EAA4BA,EAAA,GAAQA,IAAA,CAEpC,GAAAiZ,GAAAvF,EAAA1T,EACAkZ,EAAAF,EAAAC,EAGAD,GAAAC,GACA,UAAAC,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAIA,GASAgF,GAAAE,EAAAC,EAAAE,EAAAE,EACAiG,EAAAC,EAAAC,EAAAC,EAAAC,EAVA3L,EAAA5d,KAAAwd,MAAA3I,MACA2O,EAAAwF,EAAAnU,MACA2U,EAAAP,EAAApU,MACA4U,EAAAb,EAAA/T,MACA6U,EAAAb,EAAAhU,MACA8U,EAAAb,EAAAjU,MACA+U,EAAAb,EAAAlU,KAMAsU,GAAAxG,EAAA/E,EAAA,GACAwL,EAAAvG,EAAAjF,EAAA,GACAyL,EAAAvG,EAAAlF,EAAA,GACA0L,EAAAtG,EAAApF,EAAA,GACA2L,EAAArG,EAAAtF,EAAA,EAGA,QADArN,GACA9L,EAAA,EAA4BA,EAAA,GAAQA,GAAA,EACpC8L,EAAAoS,EAAAlF,EAAAtF,EAAAsR,EAAAhlB,IAAA,EAEA8L,GADA9L,EAAA,GACA4jB,EAAAxF,EAAAC,EAAAE,GAAAQ,EAAA,GACkB/e,EAAA,GAClB8jB,EAAA1F,EAAAC,EAAAE,GAAAQ,EAAA,GACkB/e,EAAA,GAClB+jB,EAAA3F,EAAAC,EAAAE,GAAAQ,EAAA,GACkB/e,EAAA,GAClBgkB,EAAA5F,EAAAC,EAAAE,GAAAQ,EAAA,GAEAkF,EAAA7F,EAAAC,EAAAE,GAAAQ,EAAA,GAEAjT,GAAA,EACAA,EAAAoY,EAAApY,EAAAoZ,EAAAllB,IACA8L,IAAA2S,EAAA,EACAP,EAAAO,EACAA,EAAAF,EACAA,EAAA2F,EAAA7F,EAAA,IACAA,EAAAD,EACAA,EAAAtS,EAEAA,EAAA4Y,EAAA1L,EAAAtF,EAAAuR,EAAAjlB,IAAA,EAEA8L,GADA9L,EAAA,GACAikB,EAAAU,EAAAC,EAAAC,GAAAE,EAAA,GACkB/kB,EAAA,GAClBgkB,EAAAW,EAAAC,EAAAC,GAAAE,EAAA,GACkB/kB,EAAA,GAClB+jB,EAAAY,EAAAC,EAAAC,GAAAE,EAAA,GACkB/kB,EAAA,GAClB8jB,EAAAa,EAAAC,EAAAC,GAAAE,EAAA,GAEAnB,EAAAe,EAAAC,EAAAC,GAAAE,EAAA,GAEAjZ,GAAA,EACAA,EAAAoY,EAAApY,EAAAqZ,EAAAnlB,IACA8L,IAAAgZ,EAAA,EACAJ,EAAAI,EACAA,EAAAD,EACAA,EAAAX,EAAAU,EAAA,IACAA,EAAAD,EACAA,EAAA7Y,CAGAA,GAAAqN,EAAA,GAAAkF,EAAAwG,EAAA,EACA1L,EAAA,GAAAA,EAAA,GAAAoF,EAAAuG,EAAA,EACA3L,EAAA,GAAAA,EAAA,GAAAsF,EAAAiG,EAAA,EACAvL,EAAA,GAAAA,EAAA,GAAA+E,EAAAyG,EAAA,EACAxL,EAAA,GAAAA,EAAA,GAAAiF,EAAAwG,EAAA,EACAzL,EAAA,GAAArN,GAGAwI,YAAA,WAEA,GAAAnP,GAAA5J,KAAAqX,MACAK,EAAA9N,EAAAiL,MAEAgK,EAAA,EAAA7e,KAAAsX,YACAwH,EAAA,EAAAlV,EAAAkL,QAGA4C,GAAAoH,IAAA,YAAAA,EAAA,GACApH,GAAAoH,EAAA,eACA,UAAAD,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAEAjV,EAAAkL,SAAA,GAAA4C,EAAA/S,OAAA,GAGA3E,KAAAwX,UAOA,QAJAsB,GAAA9Y,KAAAwd,MACAI,EAAA9E,EAAAjE,MAGApQ,EAAA,EAA4BA,EAAA,EAAOA,IAAA,CAEnC,GAAAya,GAAAtB,EAAAnZ,EAGAmZ,GAAAnZ,GAAA,UAAAya,GAAA,EAAAA,IAAA,IACA,YAAAA,GAAA,GAAAA,IAAA,GAIA,MAAApG,IAGAnE,MAAA,WACA,GAAAA,GAAA6D,EAAA7D,MAAApU,KAAAP,KAGA,OAFA2U,GAAA6I,MAAAxd,KAAAwd,MAAA7I,QAEAA,IA8CAV,GAAAiV,UAAA1Q,EAAAQ,cAAAkQ,GAgBAjV,EAAA4V,cAAArR,EAAAW,kBAAA+P,IACEvb,MAGFkG,EAAAqV,a1Bk8HM,SAASrpB,EAAQD,EAASM,I2B1sI/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,IAED,WAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAC,EAAAF,EAAAE,KACA6B,EAAAhC,EAAAX,IACAyD,EAAAd,EAAAc,KACAwB,EAAAtE,EAAAoF,IAKAd,GAAAa,KAAAhF,EAAAC,QAWAxI,KAAA,SAAAoN,EAAApX,GAEAoX,EAAAjZ,KAAA8pB,QAAA,GAAA7Q,GAAApN,KAGA,gBAAAhK,KACAA,EAAAkV,EAAA5F,MAAAtP,GAIA,IAAAkoB,GAAA9Q,EAAArB,UACAoS,EAAA,EAAAD,CAGAloB,GAAAiT,SAAAkV,IACAnoB,EAAAoX,EAAAJ,SAAAhX,IAIAA,EAAAyT,OAWA,QARA2U,GAAAjqB,KAAAkqB,MAAAroB,EAAA8S,QACAwV,EAAAnqB,KAAAoqB,MAAAvoB,EAAA8S,QAGA0V,EAAAJ,EAAApV,MACAyV,EAAAH,EAAAtV,MAGApQ,EAAA,EAA4BA,EAAAslB,EAAqBtlB,IACjD4lB,EAAA5lB,IAAA,WACA6lB,EAAA7lB,IAAA,SAEAwlB,GAAAnV,SAAAqV,EAAArV,SAAAkV,EAGAhqB,KAAAwL,SAUAA,MAAA,WAEA,GAAAyN,GAAAjZ,KAAA8pB,OAGA7Q,GAAAzN,QACAyN,EAAAN,OAAA3Y,KAAAoqB,QAeAzR,OAAA,SAAAC,GAIA,MAHA5Y,MAAA8pB,QAAAnR,OAAAC,GAGA5Y,MAiBA6Y,SAAA,SAAAD,GAEA,GAAAK,GAAAjZ,KAAA8pB,QAGAS,EAAAtR,EAAAJ,SAAAD,EACAK,GAAAzN,OACA,IAAAtB,GAAA+O,EAAAJ,SAAA7Y,KAAAkqB,MAAAvV,QAAAK,OAAAuV,GAEA,OAAArgB,Y3BstIM,SAASrK,EAAQD,EAASM,I4B91I/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAiID,MA/HA,YAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAC,EAAAF,EAAAE,KACAQ,EAAAV,EAAAU,UACA2D,EAAAtE,EAAAoF,KACAgG,EAAA9G,EAAA8G,KACAjG,EAAAb,EAAAa,KAKAoR,EAAAjS,EAAAiS,OAAApW,EAAAC,QAQAoE,IAAArE,EAAAC,QACAoW,QAAA,EACAxR,OAAAoG,EACAqL,WAAA,IAcA7e,KAAA,SAAA4M,GACAzY,KAAAyY,IAAAzY,KAAAyY,IAAApE,OAAAoE,IAeAkS,QAAA,SAAAC,EAAAC,GAkBA,IAhBA,GAAApS,GAAAzY,KAAAyY,IAGAvO,EAAAkP,EAAAtF,OAAA2E,EAAAQ,OAAA2R,GAGAE,EAAAlW,EAAAd,SACAiX,EAAAnW,EAAAd,QAAA,IAGAkX,EAAAF,EAAAjW,MACAoW,EAAAF,EAAAlW,MACA4V,EAAAhS,EAAAgS,QACAC,EAAAjS,EAAAiS,WAGAM,EAAArmB,OAAA8lB,GAAA,CACA,GAAAS,GAAAhhB,EAAAyO,OAAAkS,GAAAhS,SAAAkS,EACA7gB,GAAAsB,OAQA,QALA2f,GAAAD,EAAArW,MACAuW,EAAAD,EAAAxmB,OAGA0mB,EAAAH,EACAzmB,EAAA,EAAgCA,EAAAimB,EAAgBjmB,IAAA,CAChD4mB,EAAAnhB,EAAA2O,SAAAwS,GACAnhB,EAAAsB,OAMA,QAHA8f,GAAAD,EAAAxW,MAGA4H,EAAA,EAAoCA,EAAA2O,EAAsB3O,IAC1D0O,EAAA1O,IAAA6O,EAAA7O,GAIAqO,EAAA9V,OAAAkW,GACAD,EAAA,KAIA,MAFAH,GAAAhW,SAAA,EAAA2V,EAEAK,IAqBA7W,GAAAuW,OAAA,SAAAI,EAAAC,EAAApS,GACA,MAAA+R,GAAA1W,OAAA2E,GAAAkS,QAAAC,EAAAC,OAKAhX,EAAA2W,U5Bs2IM,SAAS3qB,EAAQD,EAASM,I6Bp/I/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAoHD,MAlHA,YAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAC,EAAAF,EAAAE,KACAQ,EAAAV,EAAAU,UACA2D,EAAAtE,EAAAoF,KACAkE,EAAAhF,EAAAgF,IAMAgO,EAAAhT,EAAAgT,OAAAnX,EAAAC,QAQAoE,IAAArE,EAAAC,QACAoW,QAAA,EACAxR,OAAAsE,EACAmN,WAAA,IAcA7e,KAAA,SAAA4M,GACAzY,KAAAyY,IAAAzY,KAAAyY,IAAApE,OAAAoE,IAeAkS,QAAA,SAAAC,EAAAC,GAgBA,IAdA,GAAApS,GAAAzY,KAAAyY,IAGAQ,EAAAR,EAAAQ,OAAAnF,SAGAgX,EAAAlW,EAAAd,SAGAkX,EAAAF,EAAAjW,MACA4V,EAAAhS,EAAAgS,QACAC,EAAAjS,EAAAiS,WAGAM,EAAArmB,OAAA8lB,GAAA,CACAS,GACAjS,EAAAN,OAAAuS,EAEA,IAAAA,GAAAjS,EAAAN,OAAAiS,GAAA/R,SAAAgS,EACA5R,GAAAzN,OAGA,QAAA/G,GAAA,EAAgCA,EAAAimB,EAAgBjmB,IAChDymB,EAAAjS,EAAAJ,SAAAqS,GACAjS,EAAAzN,OAGAsf,GAAA9V,OAAAkW,GAIA,MAFAJ,GAAAhW,SAAA,EAAA2V,EAEAK,IAqBA7W,GAAAsX,OAAA,SAAAX,EAAAC,EAAApS,GACA,MAAA8S,GAAAzX,OAAA2E,GAAAkS,QAAAC,EAAAC,OAKAhX,EAAA0X,U7B4/IM,SAAS1rB,EAAQD,EAASM,I8B7nJ/B,SAAAR,EAAAC,GAGDE,EAAAD,UAAAD,EAAAO,EAAA,MAUCF,KAAA,SAAA6T,GAKDA,EAAAM,IAAAqX,QAAA,SAAAlqB,GAEA,GAAA2S,GAAAJ,EACAK,EAAAD,EAAAE,IACAC,EAAAF,EAAAE,KACAQ,EAAAV,EAAAU,UACAwC,EAAAlD,EAAAkD,uBACAnB,EAAAhC,EAAAX,IAEA4I,GADAjG,EAAAc,KACAd,EAAAiG,QACA3D,EAAAtE,EAAAoF,KACAkS,EAAAhT,EAAAgT,OAUAC,EAAAtX,EAAAsX,OAAApU,EAAA/C,QAMAoE,IAAArE,EAAAC,SAgBAoX,gBAAA,SAAA5pB,EAAA4W,GACA,MAAAzY,MAAA8T,OAAA9T,KAAA0rB,gBAAA7pB,EAAA4W,IAiBAkT,gBAAA,SAAA9pB,EAAA4W,GACA,MAAAzY,MAAA8T,OAAA9T,KAAA4rB,gBAAA/pB,EAAA4W,IAcA5M,KAAA,SAAAggB,EAAAhqB,EAAA4W,GAEAzY,KAAAyY,IAAAzY,KAAAyY,IAAApE,OAAAoE,GAGAzY,KAAA8rB,WAAAD,EACA7rB,KAAA+rB,KAAAlqB,EAGA7B,KAAAwL,SAUAA,MAAA,WAEA4L,EAAA5L,MAAAjL,KAAAP,MAGAA,KAAA0Y,YAeAsT,QAAA,SAAAC,GAKA,MAHAjsB,MAAAuX,QAAA0U,GAGAjsB,KAAAwX,YAiBAqB,SAAA,SAAAoT,GAEAA,GACAjsB,KAAAuX,QAAA0U,EAIA,IAAAC,GAAAlsB,KAAA+Y,aAEA,OAAAmT,IAGAzB,QAAA,EAEA0B,OAAA,EAEAT,gBAAA,EAEAE,gBAAA,EAeA5S,cAAA,WACA,QAAAoT,GAAAvqB,GACA,sBAAAA,GACAwqB,EAEAC,EAIA,gBAAAC,GACA,OACAC,QAAA,SAAAtT,EAAArX,EAAA4W,GACA,MAAA2T,GAAAvqB,GAAA2qB,QAAAD,EAAArT,EAAArX,EAAA4W,IAGAgU,QAAA,SAAAC,EAAA7qB,EAAA4W,GACA,MAAA2T,GAAAvqB,GAAA4qB,QAAAF,EAAAG,EAAA7qB,EAAA4W,WA0BAkU,GAdAzY,EAAA0Y,aAAApB,EAAAnX,QACA0E,YAAA,WAEA,GAAA8T,GAAA7sB,KAAAwX,UAAA,EAEA,OAAAqV,IAGAjV,UAAA,IAMA3D,EAAA6Y,SAKAC,EAAA7Y,EAAA6Y,gBAAA3Y,EAAAC,QAaAoX,gBAAA,SAAAc,EAAAS,GACA,MAAAhtB,MAAAitB,UAAAnZ,OAAAyY,EAAAS,IAeArB,gBAAA,SAAAY,EAAAS,GACA,MAAAhtB,MAAAktB,UAAApZ,OAAAyY,EAAAS,IAaAnhB,KAAA,SAAA0gB,EAAAS,GACAhtB,KAAAmtB,QAAAZ,EACAvsB,KAAAotB,IAAAJ,KAOAK,EAAAV,EAAAU,IAAA,WAiEA,QAAAC,GAAAzY,EAAAsD,EAAAP,GAEA,GAAAoV,GAAAhtB,KAAAotB,GAGA,IAAAJ,EAAA,CACA,GAAA9B,GAAA8B,CAGAhtB,MAAAotB,IAAA9rB,MAEA,IAAA4pB,GAAAlrB,KAAAutB,UAIA,QAAA9oB,GAAA,EAA4BA,EAAAmT,EAAenT,IAC3CoQ,EAAAsD,EAAA1T,IAAAymB,EAAAzmB,GA7EA,GAAA4oB,GAAAN,EAAA1Y,QAiFA,OA5EAgZ,GAAAJ,UAAAI,EAAAhZ,QAWAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,SAGA0V,GAAA/sB,KAAAP,KAAA6U,EAAAsD,EAAAP,GACA2U,EAAAkB,aAAA5Y,EAAAsD,GAGAnY,KAAAutB,WAAA1Y,EAAA5O,MAAAkS,IAAAP,MAOAyV,EAAAH,UAAAG,EAAAhZ,QAWAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,UAGA8V,EAAA7Y,EAAA5O,MAAAkS,IAAAP,EAGA2U,GAAAoB,aAAA9Y,EAAAsD,GACAmV,EAAA/sB,KAAAP,KAAA6U,EAAAsD,EAAAP,GAGA5X,KAAAutB,WAAAG,KAwBAL,KAMAO,EAAA3Z,EAAA4Z,OAKAC,EAAAF,EAAAE,OAaAD,IAAA,SAAAjkB,EAAAgO,GAYA,OAVAC,GAAA,EAAAD,EAGAmW,EAAAlW,EAAAjO,EAAAkL,SAAA+C,EAGAmW,EAAAD,GAAA,GAAAA,GAAA,GAAAA,GAAA,EAAAA,EAGAE,KACAxpB,EAAA,EAA4BA,EAAAspB,EAAmBtpB,GAAA,EAC/CwpB,EAAArd,KAAAod,EAEA,IAAAE,GAAAtZ,EAAAd,OAAAma,EAAAF,EAGAnkB,GAAAoL,OAAAkZ,IAcAC,MAAA,SAAAvkB,GAEA,GAAAmkB,GAAA,IAAAnkB,EAAAiL,MAAAjL,EAAAkL,SAAA,MAGAlL,GAAAkL,UAAAiZ,IAoFAK,GA3EAla,EAAAma,YAAA7C,EAAAnX,QAOAoE,IAAA+S,EAAA/S,IAAApE,QACAyY,KAAAO,EACAa,QAAAJ,IAGAtiB,MAAA,WAEAggB,EAAAhgB,MAAAjL,KAAAP,KAGA,IAAAyY,GAAAzY,KAAAyY,IACAuU,EAAAvU,EAAAuU,GACAF,EAAArU,EAAAqU,IAGA,IAAA9sB,KAAA8rB,YAAA9rB,KAAA0rB,gBACA,GAAA4C,GAAAxB,EAAArB,oBACc,CACd,GAAA6C,GAAAxB,EAAAnB,eAGA3rB,MAAA+X,eAAA,EAEA/X,KAAAuuB,MAAAD,EAAA/tB,KAAAusB,EAAA9sB,KAAAgtB,KAAAnY,QAGAuD,gBAAA,SAAAvD,EAAAsD,GACAnY,KAAAuuB,MAAAf,aAAA3Y,EAAAsD,IAGAY,YAAA,WAEA,GAAAmV,GAAAluB,KAAAyY,IAAAyV,OAGA,IAAAluB,KAAA8rB,YAAA9rB,KAAA0rB,gBAAA,CAEAwC,EAAAL,IAAA7tB,KAAAqX,MAAArX,KAAA4X,UAGA,IAAAiV,GAAA7sB,KAAAwX,UAAA,OACc,CAEd,GAAAqV,GAAA7sB,KAAAwX,UAAA,EAGA0W,GAAAC,MAAAtB,GAGA,MAAAA,IAGAjV,UAAA,IAgBA1D,EAAAka,aAAAha,EAAAC,QAoBAxI,KAAA,SAAA2iB,GACAxuB,KAAAuU,MAAAia,IAkBApb,SAAA,SAAAqb,GACA,OAAAA,GAAAzuB,KAAAyuB,WAAAzkB,UAAAhK,UAOA0uB,EAAAza,EAAA0a,UAKAC,EAAAF,EAAAG,SAcA7kB,UAAA,SAAAwkB,GAEA,GAAA9B,GAAA8B,EAAA9B,WACA7B,EAAA2D,EAAA3D,IAGA,IAAAA,EACA,GAAA5V,GAAAL,EAAAd,QAAA,wBAAAkB,OAAA6V,GAAA7V,OAAA0X,OAEA,IAAAzX,GAAAyX,CAGA,OAAAzX,GAAA7B,SAAA8I,IAgBA/K,MAAA,SAAA2d,GAEA,GAAApC,GAAAxQ,EAAA/K,MAAA2d,GAGAC,EAAArC,EAAA7X,KAGA,gBAAAka,EAAA,gBAAAA,EAAA,IAEA,GAAAlE,GAAAjW,EAAAd,OAAAib,EAAA9oB,MAAA,KAGA8oB,GAAAzW,OAAA,KACAoU,EAAA5X,UAAA,GAGA,MAAAsZ,GAAAta,QAAyC4Y,aAAA7B,WAOzCyB,EAAApY,EAAAoY,mBAAAlY,EAAAC,QAMAoE,IAAArE,EAAAC,QACAsa,OAAAC,IAqBApC,QAAA,SAAAD,EAAArT,EAAArX,EAAA4W,GAEAA,EAAAzY,KAAAyY,IAAApE,OAAAoE,EAGA,IAAAuW,GAAAzC,EAAAd,gBAAA5pB,EAAA4W,GACAiU,EAAAsC,EAAAnW,SAAAK,GAGA+V,EAAAD,EAAAvW,GAGA,OAAA2V,GAAAta,QACA4Y,aACA7qB,MACAmrB,GAAAiC,EAAAjC,GACAkC,UAAA3C,EACAO,KAAAmC,EAAAnC,KACAoB,QAAAe,EAAAf,QACAtW,UAAA2U,EAAA3U,UACA6W,UAAAhW,EAAAkW,UAqBAlC,QAAA,SAAAF,EAAAG,EAAA7qB,EAAA4W,GAEAA,EAAAzY,KAAAyY,IAAApE,OAAAoE,GAGAiU,EAAA1sB,KAAAmvB,OAAAzC,EAAAjU,EAAAkW,OAGA,IAAAS,GAAA7C,EAAAZ,gBAAA9pB,EAAA4W,GAAAI,SAAA6T,aAEA,OAAA0C,IAkBAD,OAAA,SAAAzC,EAAAiC,GACA,sBAAAjC,GACAiC,EAAAxd,MAAAub,EAAA1sB,MAEA0sB,KAQA2C,EAAApb,EAAAqb,OAKAC,EAAAF,EAAAR,SAkBAW,QAAA,SAAA5E,EAAAH,EAAA0B,EAAAtB,GAEAA,IACAA,EAAAjW,EAAAa,OAAA,GAIA,IAAA5T,GAAA0pB,EAAAzX,QAAsC2W,UAAA0B,IAA4BxB,QAAAC,EAAAC,GAGlEmC,EAAApY,EAAAd,OAAAjS,EAAAgT,MAAA5O,MAAAwkB,GAAA,EAAA0B,EAIA,OAHAtqB,GAAAiT,SAAA,EAAA2V,EAGA2D,EAAAta,QAAyCjS,MAAAmrB,KAAAnC,WAQzCwB,EAAAnY,EAAAmY,oBAAAC,EAAAjY,QAMAoE,IAAA6T,EAAA7T,IAAApE,QACAib,IAAAC,IAoBA/C,QAAA,SAAAD,EAAArT,EAAA0R,EAAAnS,GAEAA,EAAAzY,KAAAyY,IAAApE,OAAAoE,EAGA,IAAAgX,GAAAhX,EAAA6W,IAAAE,QAAA5E,EAAA2B,EAAA9B,QAAA8B,EAAAJ,OAGA1T,GAAAuU,GAAAyC,EAAAzC,EAGA,IAAAN,GAAAJ,EAAAE,QAAAjsB,KAAAP,KAAAusB,EAAArT,EAAAuW,EAAA5tB,IAAA4W,EAKA,OAFAiU,GAAAnY,MAAAkb,GAEA/C,GAoBAD,QAAA,SAAAF,EAAAG,EAAA9B,EAAAnS,GAEAA,EAAAzY,KAAAyY,IAAApE,OAAAoE,GAGAiU,EAAA1sB,KAAAmvB,OAAAzC,EAAAjU,EAAAkW,OAGA,IAAAc,GAAAhX,EAAA6W,IAAAE,QAAA5E,EAAA2B,EAAA9B,QAAA8B,EAAAJ,OAAAO,EAAA7B,KAGApS,GAAAuU,GAAAyC,EAAAzC,EAGA,IAAAoC,GAAA9C,EAAAG,QAAAlsB,KAAAP,KAAAusB,EAAAG,EAAA+C,EAAA5tB,IAAA4W,EAEA,OAAA2W,Y9ByoJM,SAASvvB,EAAQD,EAASM,I+B7+K/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA8DD,MAzDAA,GAAAiZ,KAAA4C,IAAA,WAgCA,QAAAC,GAAA9a,EAAAsD,EAAAP,EAAA2U,GAEA,GAAAS,GAAAhtB,KAAAotB,GAGA,IAAAJ,EAAA,CACA,GAAA4C,GAAA5C,EAAA/mB,MAAA,EAGAjG,MAAAotB,IAAA9rB,WAEA,IAAAsuB,GAAA5vB,KAAAutB,UAEAhB,GAAAkB,aAAAmC,EAAA,EAGA,QAAAnrB,GAAA,EAAwBA,EAAAmT,EAAenT,IACvCoQ,EAAAsD,EAAA1T,IAAAmrB,EAAAnrB,GAhDA,GAAAirB,GAAA7b,EAAAM,IAAA4Y,gBAAA1Y,QAoDA,OAlDAqb,GAAAzC,UAAAyC,EAAArb,QACAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,SAEA+X,GAAApvB,KAAAP,KAAA6U,EAAAsD,EAAAP,EAAA2U,GAGAvsB,KAAAutB,WAAA1Y,EAAA5O,MAAAkS,IAAAP,MAIA8X,EAAAxC,UAAAwC,EAAArb,QACAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,UAGA8V,EAAA7Y,EAAA5O,MAAAkS,IAAAP,EAEA+X,GAAApvB,KAAAP,KAAA6U,EAAAsD,EAAAP,EAAA2U,GAGAvsB,KAAAutB,WAAAG,KAyBAgC,KAIA7b,EAAAiZ,KAAA4C,O/Bq/KM,SAAS7vB,EAAQD,EAASM,IgChkL/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA0CD,MArCAA,GAAAiZ,KAAA+C,IAAA,WACA,GAAAA,GAAAhc,EAAAM,IAAA4Y,gBAAA1Y,SAEA4Y,EAAA4C,EAAA5C,UAAA4C,EAAAxb,QACAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,UACAoV,EAAAhtB,KAAAotB,IACA0C,EAAA9vB,KAAA+vB,QAGA/C,KACA8C,EAAA9vB,KAAA+vB,SAAA/C,EAAA/mB,MAAA,GAGAjG,KAAAotB,IAAA9rB,OAEA,IAAAsuB,GAAAE,EAAA7pB,MAAA,EACAsmB,GAAAkB,aAAAmC,EAAA,GAGAE,EAAAlY,EAAA,GAAAkY,EAAAlY,EAAA,MAGA,QAAAnT,GAAA,EAA4BA,EAAAmT,EAAenT,IAC3CoQ,EAAAsD,EAAA1T,IAAAmrB,EAAAnrB,KAOA,OAFAorB,GAAA3C,UAAAD,EAEA4C,KAIAhc,EAAAiZ,KAAA+C,OhCwkLM,SAAShwB,EAAQD,EAASM,IiC/nL/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T;;;;;AAoGD,MA7FAA,GAAAiZ,KAAAkD,WAAA,WAGA,QAAAC,GAAA7U,GAEA,UAAAA,GAAA,SACA,GAAA8U,GAAA9U,GAAA,OACA+U,EAAA/U,GAAA,MACAgV,EAAA,IAAAhV,CAEA,OAAA8U,GAEAA,EAAA,EACA,MAAAC,GAEAA,EAAA,EACA,MAAAC,EAEAA,EAAA,IAIAA,KAKAD,KAKAD,EAGA9U,EAAA,EACAA,GAAA8U,GAAA,GACA9U,GAAA+U,GAAA,EACA/U,GAAAgV,MAIAhV,IAAA,KAEA,OAAAA,GAGA,QAAAiV,GAAAP,GAOA,MALA,MAAAA,EAAA,GAAAG,EAAAH,EAAA,OAGAA,EAAA,GAAAG,EAAAH,EAAA,KAEAA,EArDA,GAAAE,GAAAnc,EAAAM,IAAA4Y,gBAAA1Y,SAwDA4Y,EAAA+C,EAAA/C,UAAA+C,EAAA3b,QACAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,UACAoV,EAAAhtB,KAAAotB,IACA0C,EAAA9vB,KAAA+vB,QAGA/C,KACA8C,EAAA9vB,KAAA+vB,SAAA/C,EAAA/mB,MAAA,GAGAjG,KAAAotB,IAAA9rB,QAGA+uB,EAAAP,EAEA,IAAAF,GAAAE,EAAA7pB,MAAA,EACAsmB,GAAAkB,aAAAmC,EAAA,EAGA,QAAAnrB,GAAA,EAA4BA,EAAAmT,EAAenT,IAC3CoQ,EAAAsD,EAAA1T,IAAAmrB,EAAAnrB,KAOA,OAFAurB,GAAA9C,UAAAD,EAEA+C,KAMAnc,EAAAiZ,KAAAkD,cjCuoLM,SAASnwB,EAAQD,EAASM,IkCxvL/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAsCD,MAjCAA,GAAAiZ,KAAAwD,IAAA,WACA,GAAAA,GAAAzc,EAAAM,IAAA4Y,gBAAA1Y,SAEA4Y,EAAAqD,EAAArD,UAAAqD,EAAAjc,QACAmZ,aAAA,SAAA3Y,EAAAsD,GAEA,GAAAoU,GAAAvsB,KAAAmtB,QACAvV,EAAA2U,EAAA3U,UACAoV,EAAAhtB,KAAAotB,IACAwC,EAAA5vB,KAAAuwB,UAGAvD,KACA4C,EAAA5vB,KAAAuwB,WAAAvD,EAAA/mB,MAAA,GAGAjG,KAAAotB,IAAA9rB,QAEAirB,EAAAkB,aAAAmC,EAAA,EAGA,QAAAnrB,GAAA,EAA4BA,EAAAmT,EAAenT,IAC3CoQ,EAAAsD,EAAA1T,IAAAmrB,EAAAnrB,KAOA,OAFA6rB,GAAApD,UAAAD,EAEAqD,KAIAzc,EAAAiZ,KAAAwD,OlCgwLM,SAASzwB,EAAQD,EAASM,ImCnzL/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAwBD,MAnBAA,GAAAiZ,KAAA0D,IAAA,WACA,GAAAA,GAAA3c,EAAAM,IAAA4Y,gBAAA1Y,QAcA,OAZAmc,GAAAvD,UAAAuD,EAAAnc,QACAmZ,aAAA,SAAA3Y,EAAAsD,GACAnY,KAAAmtB,QAAAM,aAAA5Y,EAAAsD,MAIAqY,EAAAtD,UAAAsD,EAAAnc,QACAmZ,aAAA,SAAA3Y,EAAAsD,GACAnY,KAAAmtB,QAAAQ,aAAA9Y,EAAAsD,MAIAqY,KAIA3c,EAAAiZ,KAAA0D,OnC2zLM,SAAS3wB,EAAQD,EAASM,IoCh2L/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAiCD,MA5BAA,GAAAga,IAAA4C,UACA5C,IAAA,SAAAjkB,EAAAgO,GAEA,GAAAD,GAAA/N,EAAAkL,SACA+C,EAAA,EAAAD,EAGAmW,EAAAlW,EAAAF,EAAAE,EAGA6Y,EAAA/Y,EAAAoW,EAAA,CAGAnkB,GAAA0L,QACA1L,EAAAiL,MAAA6b,IAAA,IAAA3C,GAAA,GAAA2C,EAAA,IACA9mB,EAAAkL,UAAAiZ,GAGAI,MAAA,SAAAvkB,GAEA,GAAAmkB,GAAA,IAAAnkB,EAAAiL,MAAAjL,EAAAkL,SAAA,MAGAlL,GAAAkL,UAAAiZ,IAKAla,EAAAga,IAAA8C,YpCw2LM,SAAS9wB,EAAQD,EAASM,IqCt5L/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA4BD,MAvBAA,GAAAga,IAAA+C,UACA/C,IAAA,SAAAjkB,EAAAgO,GAEA,GAAAC,GAAA,EAAAD,EAGAmW,EAAAlW,EAAAjO,EAAAkL,SAAA+C,CAGAjO,GAAAoL,OAAAnB,EAAAM,IAAAS,UAAAa,OAAAsY,EAAA,IACA/Y,OAAAnB,EAAAM,IAAAS,UAAAd,QAAAia,GAAA,SAGAI,MAAA,SAAAvkB,GAEA,GAAAmkB,GAAA,IAAAnkB,EAAAiL,MAAAjL,EAAAkL,SAAA,MAGAlL,GAAAkL,UAAAiZ,IAKAla,EAAAga,IAAA+C,YrC85LM,SAAS/wB,EAAQD,EAASM,IsCv8L/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAwBD,MAnBAA,GAAAga,IAAAgD,UACAhD,IAAA,SAAAjkB,EAAAgO,GAEAhO,EAAAoL,OAAAnB,EAAAM,IAAAS,UAAAd,QAAA,gBAGAD,EAAAga,IAAAiD,YAAAjD,IAAAjkB,EAAAgO,IAGAuW,MAAA,SAAAvkB,GAEAiK,EAAAga,IAAAiD,YAAA3C,MAAAvkB,GAGAA,EAAAkL,aAKAjB,EAAAga,IAAAgD,YtC+8LM,SAAShxB,EAAQD,EAASM,IuCp/L/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA6BD,MAxBAA,GAAAga,IAAAiD,aACAjD,IAAA,SAAAjkB,EAAAgO,GAEA,GAAAC,GAAA,EAAAD,CAGAhO,GAAA0L,QACA1L,EAAAkL,UAAA+C,GAAAjO,EAAAkL,SAAA+C,OAGAsW,MAAA,SAAAvkB,GAMA,IAJA,GAAA8N,GAAA9N,EAAAiL,MAGApQ,EAAAmF,EAAAkL,SAAA,IACA4C,EAAAjT,IAAA,QAAAA,EAAA,UACAA,GAEAmF,GAAAkL,SAAArQ,EAAA,IAKAoP,EAAAga,IAAAiD,evC4/LM,SAASjxB,EAAQD,EAASM,IwCtiM/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAcD,MATAA,GAAAga,IAAAkD,WACAlD,IAAA,aAGAM,MAAA,cAKAta,EAAAga,IAAAkD,axC8iMM,SAASlxB,EAAQD,EAASM,IyCzkM/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAkDD,MAhDA,UAAAvS,GAEA,GAAA2S,GAAAJ,EACAK,EAAAD,EAAAE,IACAia,EAAAla,EAAAka,aACAnY,EAAAhC,EAAAX,IACAC,EAAA0C,EAAA1C,IACAmb,EAAAza,EAAA0a,MAEAD,GAAAnb,KAcAvJ,UAAA,SAAAwkB,GACA,MAAAA,GAAA9B,WAAAtZ,SAAAG,IAgBApC,MAAA,SAAAnI,GACA,GAAA0jB,GAAAnZ,EAAApC,MAAAnI,EACA,OAAAolB,GAAAta,QAAyC4Y,oBAMzC7Y,EAAA8a,OAAApb,OzCilMM,SAAS1T,EAAQD,EAASM,I0ChpM/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAwND,MAtNA,YAEA,GAAAI,GAAAJ,EACAK,EAAAD,EAAAE,IACAka,EAAAna,EAAAma,YACA9V,EAAAtE,EAAAoF,KAGA2X,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,KACAC,MAGA,WAGA,OADA1U,MACAtY,EAAA,EAAwBA,EAAA,IAASA,IACjCA,EAAA,IACAsY,EAAAtY,MAAA,EAEAsY,EAAAtY,MAAA,KAOA,QAFAwD,GAAA,EACAypB,EAAA,EACAjtB,EAAA,EAAwBA,EAAA,IAASA,IAAA,CAEjC,GAAAktB,GAAAD,KAAA,EAAAA,GAAA,EAAAA,GAAA,EAAAA,GAAA,CACAC,OAAA,MAAAA,EAAA,GACAX,EAAA/oB,GAAA0pB,EACAV,EAAAU,GAAA1pB,CAGA,IAAA2pB,GAAA7U,EAAA9U,GACA4pB,EAAA9U,EAAA6U,GACAE,EAAA/U,EAAA8U,GAGAthB,EAAA,IAAAwM,EAAA4U,GAAA,SAAAA,CACAT,GAAAjpB,GAAAsI,GAAA,GAAAA,IAAA,EACA4gB,EAAAlpB,GAAAsI,GAAA,GAAAA,IAAA,GACA6gB,EAAAnpB,GAAAsI,GAAA,EAAAA,IAAA,GACA8gB,EAAAppB,GAAAsI,CAGA,IAAAA,GAAA,SAAAuhB,EAAA,MAAAD,EAAA,IAAAD,EAAA,SAAA3pB,CACAqpB,GAAAK,GAAAphB,GAAA,GAAAA,IAAA,EACAghB,EAAAI,GAAAphB,GAAA,GAAAA,IAAA,GACAihB,EAAAG,GAAAphB,GAAA,EAAAA,IAAA,GACAkhB,EAAAE,GAAAphB,EAGAtI,GAGAA,EAAA2pB,EAAA7U,MAAA+U,EAAAF,KACAF,GAAA3U,IAAA2U,KAHAzpB,EAAAypB,EAAA,KASA,IAAAK,IAAA,8BAKAC,EAAAzZ,EAAAyZ,IAAA3D,EAAAha,QACAqE,SAAA,WAEA,IAAA1Y,KAAAiyB,UAAAjyB,KAAAkyB,iBAAAlyB,KAAA+rB,KAAA,CAiBA,OAZAlqB,GAAA7B,KAAAkyB,eAAAlyB,KAAA+rB,KACAoG,EAAAtwB,EAAAgT,MACA4V,EAAA5oB,EAAAiT,SAAA,EAGAsd,EAAApyB,KAAAiyB,SAAAxH,EAAA,EAGA4H,EAAA,GAAAD,EAAA,GAGAE,EAAAtyB,KAAAuyB,gBACAC,EAAA,EAAgCA,EAAAH,EAAgBG,IAChD,GAAAA,EAAA/H,EACA6H,EAAAE,GAAAL,EAAAK,OACkB,CAClB,GAAAjiB,GAAA+hB,EAAAE,EAAA,EAEAA,GAAA/H,EASsBA,EAAA,GAAA+H,EAAA/H,GAAA,IAEtBla,EAAAygB,EAAAzgB,IAAA,QAAAygB,EAAAzgB,IAAA,YAAAygB,EAAAzgB,IAAA,UAAAygB,EAAA,IAAAzgB,KATAA,KAAA,EAAAA,IAAA,GAGAA,EAAAygB,EAAAzgB,IAAA,QAAAygB,EAAAzgB,IAAA,YAAAygB,EAAAzgB,IAAA,UAAAygB,EAAA,IAAAzgB,GAGAA,GAAAwhB,EAAAS,EAAA/H,EAAA,QAMA6H,EAAAE,GAAAF,EAAAE,EAAA/H,GAAAla,EAMA,OADAkiB,GAAAzyB,KAAA0yB,mBACAC,EAAA,EAAmCA,EAAAN,EAAmBM,IAAA,CACtD,GAAAH,GAAAH,EAAAM,CAEA,IAAAA,EAAA,EACA,GAAApiB,GAAA+hB,EAAAE,OAEA,IAAAjiB,GAAA+hB,EAAAE,EAAA,EAGAG,GAAA,GAAAH,GAAA,EACAC,EAAAE,GAAApiB,EAEAkiB,EAAAE,GAAArB,EAAAN,EAAAzgB,IAAA,KAAAghB,EAAAP,EAAAzgB,IAAA,SACAihB,EAAAR,EAAAzgB,IAAA,QAAAkhB,EAAAT,EAAA,IAAAzgB,OAKAkd,aAAA,SAAAhQ,EAAAtF,GACAnY,KAAA4yB,cAAAnV,EAAAtF,EAAAnY,KAAAuyB,aAAArB,EAAAC,EAAAC,EAAAC,EAAAL,IAGArD,aAAA,SAAAlQ,EAAAtF,GAEA,GAAA5H,GAAAkN,EAAAtF,EAAA,EACAsF,GAAAtF,EAAA,GAAAsF,EAAAtF,EAAA,GACAsF,EAAAtF,EAAA,GAAA5H,EAEAvQ,KAAA4yB,cAAAnV,EAAAtF,EAAAnY,KAAA0yB,gBAAApB,EAAAC,EAAAC,EAAAC,EAAAR,EAGA,IAAA1gB,GAAAkN,EAAAtF,EAAA,EACAsF,GAAAtF,EAAA,GAAAsF,EAAAtF,EAAA,GACAsF,EAAAtF,EAAA,GAAA5H,GAGAqiB,cAAA,SAAAnV,EAAAtF,EAAAma,EAAApB,EAAAC,EAAAC,EAAAC,EAAAL,GAcA,OAZAoB,GAAApyB,KAAAiyB,SAGAY,EAAApV,EAAAtF,GAAAma,EAAA,GACAQ,EAAArV,EAAAtF,EAAA,GAAAma,EAAA,GACAS,EAAAtV,EAAAtF,EAAA,GAAAma,EAAA,GACAU,EAAAvV,EAAAtF,EAAA,GAAAma,EAAA,GAGAE,EAAA,EAGA3L,EAAA,EAAgCA,EAAAuL,EAAiBvL,IAAA,CAEjD,GAAAoM,GAAA/B,EAAA2B,IAAA,IAAA1B,EAAA2B,IAAA,QAAA1B,EAAA2B,IAAA,OAAA1B,EAAA,IAAA2B,GAAAV,EAAAE,KACA/R,EAAAyQ,EAAA4B,IAAA,IAAA3B,EAAA4B,IAAA,QAAA3B,EAAA4B,IAAA,OAAA3B,EAAA,IAAAwB,GAAAP,EAAAE,KACA9R,EAAAwQ,EAAA6B,IAAA,IAAA5B,EAAA6B,IAAA,QAAA5B,EAAAyB,IAAA,OAAAxB,EAAA,IAAAyB,GAAAR,EAAAE,KACAU,EAAAhC,EAAA8B,IAAA,IAAA7B,EAAA0B,IAAA,QAAAzB,EAAA0B,IAAA,OAAAzB,EAAA,IAAA0B,GAAAT,EAAAE,IAGAK,GAAAI,EACAH,EAAArS,EACAsS,EAAArS,EACAsS,EAAAE,EAIA,GAAAD,IAAAjC,EAAA6B,IAAA,QAAA7B,EAAA8B,IAAA,YAAA9B,EAAA+B,IAAA,UAAA/B,EAAA,IAAAgC,IAAAV,EAAAE,KACA/R,GAAAuQ,EAAA8B,IAAA,QAAA9B,EAAA+B,IAAA,YAAA/B,EAAAgC,IAAA,UAAAhC,EAAA,IAAA6B,IAAAP,EAAAE,KACA9R,GAAAsQ,EAAA+B,IAAA,QAAA/B,EAAAgC,IAAA,YAAAhC,EAAA6B,IAAA,UAAA7B,EAAA,IAAA8B,IAAAR,EAAAE,KACAU,GAAAlC,EAAAgC,IAAA,QAAAhC,EAAA6B,IAAA,YAAA7B,EAAA8B,IAAA,UAAA9B,EAAA,IAAA+B,IAAAT,EAAAE,IAGA/U,GAAAtF,GAAA8a,EACAxV,EAAAtF,EAAA,GAAAsI,EACAhD,EAAAtF,EAAA,GAAAuI,EACAjD,EAAAtF,EAAA,GAAA+a,GAGAzI,QAAA,GAWAxW,GAAA+d,IAAA3D,EAAArV,cAAAgZ,MAIAne,EAAAme,O1CwpMM,SAASnyB,EAAQD,EAASM,I2C73M/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAkvBD,MAhvBA,YA4qBA,QAAAsf,GAAAhb,EAAApC,GACA,GAAAxF,IAAAvQ,KAAAozB,UAAAjb,EAAAnY,KAAAqzB,SAAAtd,CACA/V,MAAAqzB,SAAA9iB,EACAvQ,KAAAozB,SAAA7iB,GAAA4H,EAGA,QAAAmb,GAAAnb,EAAApC,GACA,GAAAxF,IAAAvQ,KAAAqzB,UAAAlb,EAAAnY,KAAAozB,SAAArd,CACA/V,MAAAozB,SAAA7iB,EACAvQ,KAAAqzB,SAAA9iB,GAAA4H,EAnrBA,GAAAlE,GAAAJ,EACAK,EAAAD,EAAAE,IACAS,EAAAV,EAAAU,UACAyZ,EAAAna,EAAAma,YACA9V,EAAAtE,EAAAoF,KAGAka,GACA,sBACA,uBACA,uBACA,wBACA,uBACA,uBACA,uBAIAC,GACA,gBACA,gBACA,gBACA,gBACA,kBACA,kBACA,kBACA,mBAIAC,GAAA,4CAGAC,IAEAC,EAAA,QACAC,UAAA,MACAC,UAAA,QACAC,UAAA,EACAC,WAAA,IACAC,WAAA,QACAC,WAAA,QACAC,WAAA,QACAC,WAAA,IACAC,WAAA,QACAC,WAAA,MACAC,WAAA,QACAC,WAAA,MACAC,WAAA,QACAC,WAAA,EACAC,WAAA,MACAC,UAAA,EACAC,UAAA,QACAC,UAAA,MACAC,UAAA,MACAC,WAAA,QACAC,WAAA,IACAC,WAAA,QACAC,WAAA,EACAC,WAAA,QACAC,WAAA,MACAC,WAAA,QACAC,WAAA,QACAC,WAAA,QACAC,WAAA,MACAC,WAAA,IACAC,WAAA,QACAC,EAAA,MACAC,UAAA,EACAC,UAAA,QACAC,UAAA,QACAC,WAAA,QACAC,WAAA,MACAC,WAAA,IACAC,WAAA,QACAC,WAAA,QACAC,WAAA,QACAC,WAAA,QACAC,WAAA,MACAC,WAAA,IACAC,WAAA,QACAC,WAAA,MACAC,WAAA,EACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,IACAC,WAAA,MACAC,WAAA,QACAC,WAAA,EACAC,WAAA,MACAC,WAAA,MACAC,WAAA,QACAC,WAAA,IACAC,WAAA,QACAC,WAAA,QACAC,WAAA,EACAC,WAAA,MACAC,WAAA,UAGA/D,EAAA,WACAgE,SAAA,MACAC,SAAA,OACAC,SAAA,WACAC,SAAA,WACAC,SAAA,WACAC,UAAA,WACAC,UAAA,GACAtD,UAAA,OACAuD,UAAA,WACAC,UAAA,WACAC,UAAA,OACAC,UAAA,OACAC,UAAA,EACAC,UAAA,MACAC,UAAA,WACAC,QAAA,WACAC,SAAA,OACAC,SAAA,GACAC,SAAA,WACAC,SAAA,WACAC,SAAA,WACAC,UAAA,OACAC,UAAA,WACAC,UAAA,OACAC,UAAA,EACAC,UAAA,MACAC,UAAA,WACAC,UAAA,WACAC,UAAA,OACAC,UAAA,WACAC,UAAA,MACA5F,UAAA,EACA6F,UAAA,WACAC,UAAA,WACAC,UAAA,WACAC,UAAA,WACAC,UAAA,GACAC,UAAA,OACAC,UAAA,MACAnF,UAAA,MACAoF,UAAA,OACAC,UAAA,OACAC,UAAA,WACAC,UAAA,OACAC,UAAA,WACAC,UAAA,WACAC,UAAA,WACAC,UAAA,OACAC,UAAA,OACAC,UAAA,WACAC,UAAA,MACAC,UAAA,WACAC,UAAA,WACAC,UAAA,GACAC,UAAA,WACAC,UAAA,WACAC,UAAA,WACAC,UAAA,WACAC,UAAA,OACAC,UAAA,EACAC,UAAA,MACAC,UAAA,WACAC,UAAA,SAGA3H,EAAA,IACA4H,QAAA,EACAC,QAAA,SACAC,QAAA,MACAC,QAAA,MACAC,QAAA,SACAC,QAAA,SACAC,QAAA,SACApD,QAAA,SACAqD,QAAA,SACAC,SAAA,MACAC,SAAA,SACAC,SAAA,SACAC,SAAA,MACAC,SAAA,EACAC,SAAA,IACAC,OAAA,SACAC,QAAA,SACAC,QAAA,EACAC,QAAA,SACAC,QAAA,SACAC,QAAA,MACAC,QAAA,MACAC,QAAA,IACAC,QAAA,EACAC,QAAA,IACAC,SAAA,SACAC,SAAA,MACAC,SAAA,MACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAzF,SAAA,SACA0F,SAAA,MACAC,SAAA,MACAC,SAAA,SACAC,SAAA,IACAC,SAAA,SACAC,SAAA,SACAC,SAAA,EACAjF,SAAA,SACAkF,SAAA,SACAC,SAAA,EACAC,SAAA,MACAC,SAAA,SACAC,SAAA,IACAC,SAAA,MACAC,SAAA,SACAC,SAAA,SACAC,SAAA,IACAC,SAAA,SACAC,SAAA,EACAC,SAAA,MACAC,SAAA,SACAC,SAAA,IACAC,SAAA,SACAC,SAAA,MACAC,SAAA,SACAC,SAAA,MACAC,SAAA,SACAC,SAAA,SACAC,SAAA,SACAC,SAAA,EACAC,SAAA,QAGAvL,EAAA,WACAwL,MAAA,WACAC,OAAA,QACAC,OAAA,WACAC,OAAA,EACAC,OAAA,QACAC,OAAA,WACAC,OAAA,QACApD,OAAA,WACAqD,OAAA,QACAC,OAAA,GACAC,OAAA,WACAC,OAAA,WACAC,OAAA,KACAC,OAAA,KACAC,OAAA,WACAC,MAAA,WACAC,MAAA,GACAC,OAAA,WACAC,OAAA,WACAC,OAAA,QACAC,OAAA,WACAC,OAAA,EACAC,OAAA,WACAC,OAAA,KACAC,OAAA,WACAC,OAAA,QACAC,OAAA,KACAC,OAAA,WACAC,OAAA,QACAC,OAAA,QACAC,QAAA,WACAzF,QAAA,QACA0F,QAAA,QACAC,QAAA,WACAC,QAAA,EACAC,QAAA,KACAC,QAAA,WACAC,QAAA,WACAC,QAAA,WACAjF,QAAA,WACAkF,QAAA,WACAC,QAAA,WACAC,QAAA,QACAC,QAAA,WACAC,QAAA,QACAC,QAAA,GACAC,QAAA,KACAC,QAAA,WACAC,QAAA,WACAC,QAAA,EACAC,QAAA,QACAC,QAAA,QACAC,QAAA,WACAC,QAAA,WACAC,QAAA,GACAC,QAAA,WACAC,QAAA,KACAC,QAAA,WACAC,QAAA,WACAC,QAAA,KACAC,QAAA,WACAC,QAAA,QACAC,QAAA,UAGAnP,EAAA,IACAoP,KAAA,SACAC,KAAA,OACAC,MAAA,UACAC,MAAA,UACAC,MAAA,SACAC,MAAA,UACAC,MAAA,OACApD,MAAA,SACAqD,MAAA,UACAC,MAAA,UACAC,MAAA,UACAC,MAAA,UACAC,MAAA,EACAC,MAAA,SACAC,MAAA,UACAC,KAAA,SACAC,KAAA,UACAC,MAAA,IACAC,MAAA,SACAC,MAAA,OACAC,MAAA,UACAC,MAAA,UACAC,MAAA,UACAC,MAAA,UACAC,MAAA,EACAC,MAAA,UACAC,MAAA,SACAC,MAAA,UACAC,MAAA,UACAC,MAAA,SACAC,MAAA,OACAzF,MAAA,OACA0F,MAAA,IACAC,MAAA,UACAC,MAAA,UACAC,MAAA,SACAC,MAAA,UACAC,MAAA,UACAC,MAAA,SACAjF,MAAA,UACAkF,OAAA,UACAC,OAAA,SACAC,OAAA,UACAC,OAAA,OACAC,OAAA,UACAC,OAAA,EACAC,OAAA,SACAC,MAAA,UACAC,MAAA,SACAC,MAAA,SACAC,MAAA,UACAC,MAAA,UACAC,MAAA,SACAC,MAAA,IACAC,MAAA,UACAC,OAAA,OACAC,OAAA,UACAC,OAAA,EACAC,OAAA,UACAC,OAAA,SACAC,OAAA,OACAC,OAAA,UACAC,OAAA,YAGA/S,EAAA,UACAgT,IAAA,KACAC,IAAA,UACAC,IAAA,UACAC,KAAA,UACAC,KAAA,QACAC,KAAA,QACAC,KAAA,UACApD,KAAA,EACAqD,KAAA,UACAC,KAAA,QACAC,KAAA,EACAC,KAAA,UACAC,KAAA,QACAC,KAAA,KACAC,KAAA,UACAC,IAAA,UACAC,IAAA,UACAC,IAAA,EACAC,IAAA,QACAC,KAAA,QACAC,KAAA,UACAC,KAAA,UACAC,KAAA,KACAC,KAAA,QACAC,KAAA,KACAC,KAAA,UACAC,KAAA,UACAC,KAAA,EACAC,KAAA,UACAC,KAAA,QACAC,KAAA,UACAzF,KAAA,UACA0F,KAAA,UACAC,KAAA,UACAC,KAAA,KACAC,KAAA,QACAC,KAAA,UACAC,KAAA,UACAC,KAAA,QACAjF,KAAA,QACAkF,KAAA,EACAC,KAAA,EACAC,KAAA,UACAC,KAAA,KACAC,KAAA,UACAC,KAAA,UACAC,KAAA,QACAC,KAAA,EACAC,KAAA,QACAC,KAAA,QACAC,KAAA,UACAC,KAAA,UACAC,KAAA,KACAC,KAAA,UACAC,KAAA,UACAC,KAAA,UACAC,KAAA,UACAC,KAAA,KACAC,KAAA,QACAC,KAAA,QACAC,KAAA,EACAC,KAAA,UACAC,KAAA,YAGA3W,EAAA,QACA4W,GAAA,SACAC,GAAA,KACAC,GAAA,QACAC,GAAA,SACAC,GAAA,EACAC,GAAA,EACAC,IAAA,SACApD,IAAA,SACAqD,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,SACAC,IAAA,KACAC,IAAA,QACAC,IAAA,SACAC,EAAA,SACAC,GAAA,EACAC,GAAA,SACAC,GAAA,SACAC,GAAA,QACAC,GAAA,SACAC,IAAA,SACAC,IAAA,KACAC,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,QACAC,IAAA,KACAC,IAAA,SACAC,IAAA,EACAC,IAAA,QACAzF,IAAA,SACA0F,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,QACAjF,IAAA,KACAkF,IAAA,SACAC,IAAA,QACAC,IAAA,EACAC,IAAA,EACAC,IAAA,SACAC,IAAA,SACAC,IAAA,KACAC,IAAA,QACAC,IAAA,SACAC,IAAA,SACAC,IAAA,EACAC,IAAA,SACAC,IAAA,QACAC,IAAA,KACAC,IAAA,SACAC,IAAA,SACAC,IAAA,SACAC,IAAA,EACAC,IAAA,SACAC,IAAA,QACAC,IAAA,KACAC,IAAA,SACAC,IAAA,UAGAva,EAAA,UACAgC,EAAA,OACAwY,EAAA,UACAC,EAAA,GACAC,EAAA,OACAC,EAAA,UACAC,EAAA,UACAC,EAAA,KACAnD,EAAA,UACAoD,EAAA,UACAC,GAAA,OACAC,GAAA,UACAC,GAAA,KACAC,GAAA,EACAC,GAAA,UACAC,GAAA,OACA5a,WAAA,KACAgC,WAAA,UACA6Y,WAAA,UACAC,WAAA,UACAC,WAAA,UACAC,WAAA,OACAC,WAAA,OACAC,WAAA,GACAC,WAAA,UACAC,WAAA,KACAC,WAAA,OACAC,WAAA,UACAC,WAAA,EACAC,WAAA,UACAC,WAAA,UACAC,WAAA,OACAtF,GAAA,OACAuF,GAAA,UACAC,GAAA,GACAC,GAAA,KACAC,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,OACA9E,GAAA,EACA+E,GAAA,OACAC,GAAA,UACAC,GAAA,UACAC,GAAA,UACAC,GAAA,OACAC,GAAA,KACAC,GAAA,UACAC,WAAA,OACAC,WAAA,KACAC,WAAA,UACAC,WAAA,OACAC,WAAA,GACAC,WAAA,UACAC,WAAA,UACAC,WAAA,UACAC,WAAA,UACAC,WAAA,UACAC,WAAA,UACAC,WAAA,EACAC,WAAA,OACAC,WAAA,KACAC,WAAA,OACAC,WAAA,YAKAC,GACA,sCACA,4BAMAC,EAAAt5B,EAAAs5B,IAAAxjB,EAAAha,QACAqE,SAAA,WAOA,OALA7W,GAAA7B,KAAA+rB,KACAoG,EAAAtwB,EAAAgT,MAGAi9B,KACArtC,EAAA,EAA4BA,EAAA,GAAQA,IAAA,CACpC,GAAAstC,GAAAxe,EAAA9uB,GAAA,CACAqtC,GAAArtC,GAAA0tB,EAAA4f,IAAA,QAAAA,EAAA,KAKA,OADAC,GAAAhyC,KAAAiyC,YACAC,EAAA,EAAkCA,EAAA,GAAcA,IAAA,CAQhD,OANAC,GAAAH,EAAAE,MAGAE,EAAA3e,EAAAye,GAGAztC,EAAA,EAAgCA,EAAA,GAAQA,IAExC0tC,EAAA1tC,EAAA,MAAAqtC,GAAAte,EAAA/uB,GAAA,EAAA2tC,GAAA,QAAA3tC,EAAA,EAGA0tC,EAAA,GAAA1tC,EAAA,OAAAqtC,EAAA,IAAAte,EAAA/uB,EAAA,MAAA2tC,GAAA,QAAA3tC,EAAA,CAMA0tC,GAAA,GAAAA,EAAA,MAAAA,EAAA,OACA,QAAA1tC,GAAA,EAAgCA,EAAA,EAAOA,IACvC0tC,EAAA1tC,GAAA0tC,EAAA1tC,KAAA,GAAAA,EAAA,IAEA0tC,GAAA,GAAAA,EAAA,MAAAA,EAAA,QAKA,OADAE,GAAAryC,KAAAsyC,eACA7tC,EAAA,EAA4BA,EAAA,GAAQA,IACpC4tC,EAAA5tC,GAAAutC,EAAA,GAAAvtC,IAIAgpB,aAAA,SAAAhQ,EAAAtF,GACAnY,KAAA4yB,cAAAnV,EAAAtF,EAAAnY,KAAAiyC,WAGAtkB,aAAA,SAAAlQ,EAAAtF,GACAnY,KAAA4yB,cAAAnV,EAAAtF,EAAAnY,KAAAsyC,cAGA1f,cAAA,SAAAnV,EAAAtF,EAAA65B,GAEAhyC,KAAAozB,QAAA3V,EAAAtF,GACAnY,KAAAqzB,QAAA5V,EAAAtF,EAAA,GAGAgb,EAAA5yB,KAAAP,KAAA,aACAmzB,EAAA5yB,KAAAP,KAAA,UACAszB,EAAA/yB,KAAAP,KAAA,aACAszB,EAAA/yB,KAAAP,KAAA,YACAmzB,EAAA5yB,KAAAP,KAAA,aAGA,QAAA6mB,GAAA,EAAgCA,EAAA,GAAYA,IAAA,CAQ5C,OANAsrB,GAAAH,EAAAnrB,GACA0rB,EAAAvyC,KAAAozB,QACAof,EAAAxyC,KAAAqzB,QAGAvT,EAAA,EACArb,EAAA,EAAgCA,EAAA,EAAOA,IACvCqb,GAAA4T,EAAAjvB,KAAA+tC,EAAAL,EAAA1tC,IAAAmtC,EAAAntC,MAAA,EAEAzE,MAAAozB,QAAAof,EACAxyC,KAAAqzB,QAAAkf,EAAAzyB,EAIA,GAAAvP,GAAAvQ,KAAAozB,OACApzB,MAAAozB,QAAApzB,KAAAqzB,QACArzB,KAAAqzB,QAAA9iB,EAGA4iB,EAAA5yB,KAAAP,KAAA,cACAszB,EAAA/yB,KAAAP,KAAA,YACAszB,EAAA/yB,KAAAP,KAAA,aACAmzB,EAAA5yB,KAAAP,KAAA,UACAmzB,EAAA5yB,KAAAP,KAAA,aAGAyd,EAAAtF,GAAAnY,KAAAozB,QACA3V,EAAAtF,EAAA,GAAAnY,KAAAqzB,SAGA5I,QAAA,EAEA0B,OAAA,EAEAvU,UAAA,GAwBA3D,GAAA49B,IAAAxjB,EAAArV,cAAA64B,EAKA,IAAAY,GAAAl6B,EAAAk6B,UAAApkB,EAAAha,QACAqE,SAAA,WAEA,GAAA7W,GAAA7B,KAAA+rB,KACAoG,EAAAtwB,EAAAgT,KAGA7U,MAAA0yC,MAAAb,EAAApmB,gBAAA7W,EAAAd,OAAAqe,EAAAlsB,MAAA,OACAjG,KAAA2yC,MAAAd,EAAApmB,gBAAA7W,EAAAd,OAAAqe,EAAAlsB,MAAA,OACAjG,KAAA4yC,MAAAf,EAAApmB,gBAAA7W,EAAAd,OAAAqe,EAAAlsB,MAAA,QAGAwnB,aAAA,SAAAhQ,EAAAtF,GACAnY,KAAA0yC,MAAAjlB,aAAAhQ,EAAAtF,GACAnY,KAAA2yC,MAAAhlB,aAAAlQ,EAAAtF,GACAnY,KAAA4yC,MAAAnlB,aAAAhQ,EAAAtF,IAGAwV,aAAA,SAAAlQ,EAAAtF,GACAnY,KAAA4yC,MAAAjlB,aAAAlQ,EAAAtF,GACAnY,KAAA2yC,MAAAllB,aAAAhQ,EAAAtF,GACAnY,KAAA0yC,MAAA/kB,aAAAlQ,EAAAtF,IAGAsS,QAAA,EAEA0B,OAAA,EAEAvU,UAAA,GAWA3D,GAAAw+B,UAAApkB,EAAArV,cAAAy5B,MAIA5+B,EAAA4+B,a3Cq4MM,SAAS5yC,EAAQD,EAASM,I4CpoO/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA2HD,MAzHA,YAiDA,QAAAg/B,KAQA,OANAC,GAAA9yC,KAAA+yC,GACAtuC,EAAAzE,KAAAgzC,GACAv2B,EAAAzc,KAAAizC,GAGAC,EAAA,EACAj2B,EAAA,EAAwBA,EAAA,EAAOA,IAAA,CAC/BxY,KAAA,OACAgY,KAAAq2B,EAAAruC,IAAA,GAGA,IAAA8L,GAAAuiC,EAAAruC,EACAquC,GAAAruC,GAAAquC,EAAAr2B,GACAq2B,EAAAr2B,GAAAlM,EAEA2iC,GAAAJ,KAAAruC,GAAAquC,EAAAr2B,IAAA,WAAAQ,EAOA,MAHAjd,MAAAgzC,GAAAvuC,EACAzE,KAAAizC,GAAAx2B,EAEAy2B,EAvEA,GAAAj/B,GAAAJ,EACAK,EAAAD,EAAAE,IACAyY,EAAA1Y,EAAA0Y,aACArU,EAAAtE,EAAAoF,KAKA85B,EAAA56B,EAAA46B,IAAAvmB,EAAAvY,QACAqE,SAAA,WAQA,OANA7W,GAAA7B,KAAA+rB,KACAoG,EAAAtwB,EAAAgT,MACAu+B,EAAAvxC,EAAAiT,SAGAg+B,EAAA9yC,KAAA+yC,MACAtuC,EAAA,EAA4BA,EAAA,IAASA,IACrCquC,EAAAruC,IAIA,QAAAA,GAAA,EAAAgY,EAAA,EAAmChY,EAAA,IAASA,IAAA,CAC5C,GAAA4uC,GAAA5uC,EAAA2uC,EACAE,EAAAnhB,EAAAkhB,IAAA,QAAAA,EAAA,OAEA52B,MAAAq2B,EAAAruC,GAAA6uC,GAAA,GAGA,IAAA/iC,GAAAuiC,EAAAruC,EACAquC,GAAAruC,GAAAquC,EAAAr2B,GACAq2B,EAAAr2B,GAAAlM,EAIAvQ,KAAAgzC,GAAAhzC,KAAAizC,GAAA,GAGA76B,gBAAA,SAAAqF,EAAAtF,GACAsF,EAAAtF,IAAA06B,EAAAtyC,KAAAP,OAGAyqB,QAAA,EAEA0B,OAAA,GAsCAlY,GAAAk/B,IAAAvmB,EAAA5T,cAAAm6B,EAKA,IAAAI,GAAAh7B,EAAAg7B,QAAAJ,EAAA9+B,QAMAoE,IAAA06B,EAAA16B,IAAApE,QACAm/B,KAAA,MAGA96B,SAAA,WACAy6B,EAAAz6B,SAAAnY,KAAAP,KAGA,QAAAyE,GAAAzE,KAAAyY,IAAA+6B,KAAwC/uC,EAAA,EAAOA,IAC/CouC,EAAAtyC,KAAAP,QAaAiU,GAAAs/B,QAAA3mB,EAAA5T,cAAAu6B,MAIA1/B,EAAAs/B,O5C4oOM,SAAStzC,EAAQD,EAASM,I6CpxO/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAgLD,MA9KA,YAkHA,QAAA4/B,KAMA,OAJAC,GAAA1zC,KAAA2zC,GACA1/B,EAAAjU,KAAA4zC,GAGAnvC,EAAA,EAAwBA,EAAA,EAAOA,IAC/BovC,EAAApvC,GAAAwP,EAAAxP,EAIAwP,GAAA,GAAAA,EAAA,cAAAjU,KAAA8zC,GAAA,EACA7/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,cAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,cAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA7zC,KAAA8zC,GAAA7/B,EAAA,OAAA4/B,EAAA,UAGA,QAAApvC,GAAA,EAAwBA,EAAA,EAAOA,IAAA,CAC/B,GAAAsvC,GAAAL,EAAAjvC,GAAAwP,EAAAxP,GAGAuvC,EAAA,MAAAD,EACAE,EAAAF,IAAA,GAGA1wB,IAAA2wB,MAAA,IAAAA,EAAAC,IAAA,IAAAA,IACA3wB,IAAA,WAAAywB,KAAA,WAAAA,KAAA,EAGAG,GAAAzvC,GAAA4e,EAAAC,EAIAowB,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KA7JA,GAAAjgC,GAAAJ,EACAK,EAAAD,EAAAE,IACAyY,EAAA1Y,EAAA0Y,aACArU,EAAAtE,EAAAoF,KAGAy5B,KACAe,KACAK,KAKAC,EAAA57B,EAAA47B,OAAAvnB,EAAAvY,QACAqE,SAAA,WAMA,OAJA6G,GAAAvf,KAAA+rB,KAAAlX,MACAmY,EAAAhtB,KAAAyY,IAAAuU,GAGAvoB,EAAA,EAA4BA,EAAA,EAAOA,IACnC8a,EAAA9a,GAAA,UAAA8a,EAAA9a,IAAA,EAAA8a,EAAA9a,KAAA,IACA,YAAA8a,EAAA9a,IAAA,GAAA8a,EAAA9a,KAAA,EAIA,IAAAivC,GAAA1zC,KAAA2zC,IACAp0B,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,SAIAtL,EAAAjU,KAAA4zC,IACAr0B,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GAIAvf,MAAA8zC,GAAA,CAGA,QAAArvC,GAAA,EAA4BA,EAAA,EAAOA,IACnCgvC,EAAAlzC,KAAAP,KAIA,QAAAyE,GAAA,EAA4BA,EAAA,EAAOA,IACnCwP,EAAAxP,IAAAivC,EAAAjvC,EAAA,IAIA,IAAAuoB,EAAA,CAEA,GAAAonB,GAAApnB,EAAAnY,MACAw/B,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAG,EAAA,UAAAF,GAAA,EAAAA,IAAA,gBAAAA,GAAA,GAAAA,IAAA,GACAG,EAAA,UAAAF,GAAA,EAAAA,IAAA,gBAAAA,GAAA,GAAAA,IAAA,GACAG,EAAAF,IAAA,cAAAC,EACAE,EAAAF,GAAA,SAAAD,CAGAtgC,GAAA,IAAAsgC,EACAtgC,EAAA,IAAAwgC,EACAxgC,EAAA,IAAAugC,EACAvgC,EAAA,IAAAygC,EACAzgC,EAAA,IAAAsgC,EACAtgC,EAAA,IAAAwgC,EACAxgC,EAAA,IAAAugC,EACAvgC,EAAA,IAAAygC,CAGA,QAAAjwC,GAAA,EAAgCA,EAAA,EAAOA,IACvCgvC,EAAAlzC,KAAAP,QAKAoY,gBAAA,SAAAqF,EAAAtF,GAEA,GAAAu7B,GAAA1zC,KAAA2zC,EAGAF,GAAAlzC,KAAAP,MAGA8yC,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,MAEA,QAAAjvC,GAAA,EAA4BA,EAAA,EAAOA,IAEnCquC,EAAAruC,GAAA,UAAAquC,EAAAruC,IAAA,EAAAquC,EAAAruC,KAAA,IACA,YAAAquC,EAAAruC,IAAA,GAAAquC,EAAAruC,KAAA,GAGAgZ,EAAAtF,EAAA1T,IAAAquC,EAAAruC,IAIAmT,UAAA,EAEAuU,OAAA,GA2DAlY,GAAAkgC,OAAAvnB,EAAA5T,cAAAm7B,MAIAtgC,EAAAsgC,U7C4xOM,SAASt0C,EAAQD,EAASM,I8Cz9O/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GA8KD,MA5KA,YAgHA,QAAA4/B,KAMA,OAJAC,GAAA1zC,KAAA2zC,GACA1/B,EAAAjU,KAAA4zC,GAGAnvC,EAAA,EAAwBA,EAAA,EAAOA,IAC/BovC,EAAApvC,GAAAwP,EAAAxP,EAIAwP,GAAA,GAAAA,EAAA,cAAAjU,KAAA8zC,GAAA,EACA7/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,cAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,cAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA5/B,EAAA,GAAAA,EAAA,eAAAA,EAAA,OAAA4/B,EAAA,cACA7zC,KAAA8zC,GAAA7/B,EAAA,OAAA4/B,EAAA,UAGA,QAAApvC,GAAA,EAAwBA,EAAA,EAAOA,IAAA,CAC/B,GAAAsvC,GAAAL,EAAAjvC,GAAAwP,EAAAxP,GAGAuvC,EAAA,MAAAD,EACAE,EAAAF,IAAA,GAGA1wB,IAAA2wB,MAAA,IAAAA,EAAAC,IAAA,IAAAA,IACA3wB,IAAA,WAAAywB,KAAA,WAAAA,KAAA,EAGAG,GAAAzvC,GAAA4e,EAAAC,EAIAowB,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,OAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,WACAR,EAAA,GAAAQ,EAAA,IAAAA,EAAA,MAAAA,EAAA,SAAAA,EAAA,KA3JA,GAAAjgC,GAAAJ,EACAK,EAAAD,EAAAE,IACAyY,EAAA1Y,EAAA0Y,aACArU,EAAAtE,EAAAoF,KAGAy5B,KACAe,KACAK,KASAS,EAAAp8B,EAAAo8B,aAAA/nB,EAAAvY,QACAqE,SAAA,WAEA,GAAA6G,GAAAvf,KAAA+rB,KAAAlX,MACAmY,EAAAhtB,KAAAyY,IAAAuU,GAGA0mB,EAAA1zC,KAAA2zC,IACAp0B,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,QACAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,SAIAtL,EAAAjU,KAAA4zC,IACAr0B,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,mBAAAA,EAAA,SAAAA,EAAA,GAIAvf,MAAA8zC,GAAA,CAGA,QAAArvC,GAAA,EAA4BA,EAAA,EAAOA,IACnCgvC,EAAAlzC,KAAAP,KAIA,QAAAyE,GAAA,EAA4BA,EAAA,EAAOA,IACnCwP,EAAAxP,IAAAivC,EAAAjvC,EAAA,IAIA,IAAAuoB,EAAA,CAEA,GAAAonB,GAAApnB,EAAAnY,MACAw/B,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAGAG,EAAA,UAAAF,GAAA,EAAAA,IAAA,gBAAAA,GAAA,GAAAA,IAAA,GACAG,EAAA,UAAAF,GAAA,EAAAA,IAAA,gBAAAA,GAAA,GAAAA,IAAA,GACAG,EAAAF,IAAA,cAAAC,EACAE,EAAAF,GAAA,SAAAD,CAGAtgC,GAAA,IAAAsgC,EACAtgC,EAAA,IAAAwgC,EACAxgC,EAAA,IAAAugC,EACAvgC,EAAA,IAAAygC,EACAzgC,EAAA,IAAAsgC,EACAtgC,EAAA,IAAAwgC,EACAxgC,EAAA,IAAAugC,EACAvgC,EAAA,IAAAygC,CAGA,QAAAjwC,GAAA,EAAgCA,EAAA,EAAOA,IACvCgvC,EAAAlzC,KAAAP,QAKAoY,gBAAA,SAAAqF,EAAAtF,GAEA,GAAAu7B,GAAA1zC,KAAA2zC,EAGAF,GAAAlzC,KAAAP,MAGA8yC,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,OACAZ,EAAA,GAAAY,EAAA,GAAAA,EAAA,QAAAA,EAAA,MAEA,QAAAjvC,GAAA,EAA4BA,EAAA,EAAOA,IAEnCquC,EAAAruC,GAAA,UAAAquC,EAAAruC,IAAA,EAAAquC,EAAAruC,KAAA,IACA,YAAAquC,EAAAruC,IAAA,GAAAquC,EAAAruC,KAAA,GAGAgZ,EAAAtF,EAAA1T,IAAAquC,EAAAruC,IAIAmT,UAAA,EAEAuU,OAAA,GA2DAlY,GAAA0gC,aAAA/nB,EAAA5T,cAAA27B,MAIA9gC,EAAA8gC,gB9Ci+OM,SAAS90C,EAAQD,EAASM,I+C5pP/B,SAAAR,EAAAC,EAAAiU,GAGD/T,EAAAD,UAAAD,EAAAO,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAUCF,KAAA,SAAA6T,GAED,MAAAA,GAAA4R,c/CoqPM,SAAS5lB,EAAQD,EAASM,GAE/B,YgDjqPM,SAAS00C,KACd,OAEEC,uBACAC,YAAaxzC,OACbyzC,0BACEC,kBAAkB,EAClBC,sBAAsB,GAExBpjC,IAAKvQ,OACL4zC,UAAW5zC,OACX6zC,UAAW7zC,OACXwH,QAASxH,OACT8zC,SAAU9zC,OACV+zC,yBAA0B/zC,QAUvB,QAASmK,GAA0BnB,EAAmBpD,GAC3D,GAAMsD,GAA6BF,CACnCE,GAA2BuqC,yBAAyBC,kBAAmB,EACvExqC,EAA2BuqC,yBAAyBE,sBAAuB,CAC3E,IAAM1qC,GAAiBrD,CAIvB,OAHAqD,GAAewqC,yBAAyBC,kBAAmB,EAC3DzqC,EAAewqC,yBAAyBE,sBAAuB,EAC/DjzC,EAAAM,iBAAOqH,MAAM,+BACNa,EASF,QAASG,GAA+BL,EAAmBpD,GAChE,GAAMouC,GAAWpuC,CACjBouC,GAASP,yBAAyBC,iBAAmBM,EAAS7tC,WAAW9C,OAAS,CAClF,IAAM4wC,GAAuBjrC,CAE7B,OADAirC,GAAqBR,yBAAyBC,iBAAmBM,EAASP,yBAAyBC,iBAC5FO,EAQF,QAASC,GAAgClrC,GAC9C,GAAMirC,GAAuBjrC,CAC7B,OAAOirC,GAAqBJ,UAAUM,iBAAkB,GAAQF,EAAqBF,4BAA8BE,EAAqBJ,UAAUO,chD2mPnJ30C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQ+1C,uBAAyBr0C,OACjC1B,EgDvqPeg1C,+BhDwqPfh1C,EgDhpPe6L,4BhDipPf7L,EgDhoPe+K,iChDioPf/K,EgDpnPe41C,iCA1EhB,IAAAxzC,GAAA9B,EAAA,EAmFay1C,2BAA2BxqC,KAAM,oBhDosPxC,SAAStL,EAAQD,EAASM,GAE/B,YAgBA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GiDvxPjF,QAAS2K,GAA4BrE,GAC1C,GAAMqD,GAAiBrD,CAEvB,OADAqD,GAAewqC,yBAAyBE,qBAAuB1qC,EAAewqC,yBAAyBC,iBAChGzqC,EjDowPRxJ,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQgJ,0BAA4BtH,OACpC1B,EiD3wPe2L,6BApBhB,IAAAU,GAAA/L,EAAA,GjDmyPKiJ,EAAwBxI,EAAuBsL,GiDlyPpD2pC,EAAA11C,EAAA,GjDsyPgByB,GAAwBi0C,GiDhyP3BhtC,6BACXitC,mBACE1sC,EAAArI,QAAoB6N,mBAAmBC,aACvCzF,EAAArI,QAAoB6N,mBAAmBG,QAEzCgnC,iBAAkB3sC,EAAArI,QAAoB6N,mBAAmBC,ejDuzPrD,SAAS/O,EAAQD,EAASM,GAE/B,YA6BA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASe,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASm0C,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvxC,GAAI,EAAG0xC,EAAOF,MAAMD,EAAIrxC,QAASF,EAAIuxC,EAAIrxC,OAAQF,IAAO0xC,EAAK1xC,GAAKuxC,EAAIvxC,EAAM,OAAO0xC,GAAe,MAAOF,OAAMG,KAAKJ,GkD3zPpL,QAASK,GAAYvtC,GAE1B,OACEyd,MAAOpd,EAAArI,QAAoBsN,WAAWC,aACtCioC,cAAeh1C,OACfi1C,qBAAsBj1C,OACtBmG,cACAstC,0BACEC,kBAAkB,EAClBC,sBAAsB,GAExBuB,eAAgB1tC,GAAU,EAAA2tC,EAAAC,mBAAkB5tC,MAC5C6tC,kBAAmBr1C,OACnB4J,UAAW5J,OACXs1C,cAAc,GAAIC,OAAOC,UACzBC,SAAS,EACTC,SAAS,EACTC,UAAU,GASP,QAASC,GAAWhwC,GACzB,QAAOA,EAAMyvC,mBAAqBzvC,EAAMO,WAAW9C,SAAWuC,EAAMyvC,kBAAkBQ,OAAO,SAAAC,GAAA,MAA0B,WAAhBA,EAAOjsC,OAAmBxG,OAS5H,QAAS0yC,GAAUnwC,EAAOc,GAE/B,GAAMuC,GAAiBrD,CAEvB,OADAqD,GAAe9C,WAAWmJ,KAAK5I,GACxBuC,EASF,QAAS+sC,GAAsBpwC,GAA2E,GAApEqwC,GAAoEnzC,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAAzD8C,EAAM6tC,yBAAyBE,qBAAuB,CAC5G,OAAO/tC,GAAMO,WAAWxB,MAAMsxC,GAUzB,QAASC,GAAkBtwC,EAAOwJ,EAAOL,GAC9C,GAAM9F,GAAiBrD,CAKvB,OAJAlF,GAAAO,YAAOoH,MAAM,oBAAqB+G,GAElCnG,EAAe+rC,cAAgB/sC,EAAgB6G,sBAAsBC,GACrE9F,EAAe+rC,cAAgB/sC,EAAgBkH,SAASlG,EAAe+rC,cAAe5lC,GAC/EnG,EASF,QAASktC,GAAsBvwC,EAAOwJ,GAC3C,GAAMnG,GAAiBrD,CAGvB,OAFAlF,GAAAO,YAAOoH,MAAM,wBAAyB+G,GACtCnG,EAAe+rC,cAAgB/sC,EAAgBkH,SAASlG,EAAe+rC,cAAe5lC,GAC/EnG,EASF,QAASmtC,GAAiBxwC,EAAOwJ,GACtC,GAAMnG,GAAiBrD,CACvBlF,GAAAO,YAAOoH,MAAM,mBAAoB+G,EACjC,IAAM4lC,GAAgB/sC,EAAgBkH,SAASlG,EAAe+rC,cAAe5lC,EAK7E,OAHA2mC,GAAU9sC,EAAgB+rC,SAEnB/rC,GAAe+rC,cACf/rC,EAOF,QAASotC,GAAqBzwC,GACnC,GAAI0wC,IAAgBC,KAAMC,OAAOC,UAAWC,KAAMF,OAAOG,UAAWC,KAAMJ,OAAOC,UAAWI,KAAML,OAAOG,UAczG,OAXI/wC,GAAMsvC,gBAAkBtvC,EAAMsvC,eAAe7xC,OAAS,IACxDizC,GAAc,EAAAnB,EAAA2B,kBAAiBlxC,EAAMsvC,eAAgBoB,IAGnD1wC,EAAMyvC,mBAAqBzvC,EAAMyvC,kBAAkBhyC,OAAS,GAC9DizC,GAAc,EAAAnB,EAAA2B,kBAAiBlxC,EAAMyvC,kBAAmBiB,GAExDA,GAAc,EAAAnB,EAAA2B,kBAAiBd,EAAsBpwC,GAAQ0wC,IAE7DA,GAAc,EAAAnB,EAAA2B,kBAAiBlxC,EAAMO,WAAYmwC,GAE5CA,EAYF,QAASS,GAA2BnxC,EAAOoxC,EAAaC,EAAYC,EAAYC,GACrF,MAAOvxC,GAAMO,WAAWxB,MAAMqyC,EAAaC,EAAa,GAAGxwC,IAAI,SAACC,EAAQkJ,EAAOwnC,GAC7E,MAAIA,GAAc/zC,OAAS,EAClB4E,EAAgBtD,MAAM+B,EAAQwwC,EAAYC,EAAY,GAEjD,IAAVvnC,EACK3H,EAAgBtD,MAAM+B,EAAQwwC,GAEnCtnC,IAAWwnC,EAAc/zC,OAAS,EAC7B4E,EAAgBtD,MAAM+B,EAAQ,EAAGywC,EAAY,GAE/CzwC,IASJ,QAAS2wC,GAAWzxC,GACzB,GAAM0xC,GAAc73C,OAAO2H,UAAWxB,EAQtC,OANA0xC,GAAYpC,kBAAZxhC,OAAA+gC,EAAiC7uC,EAAMsvC,iBACvCoC,EAAYtC,cAAgBpvC,EAAMovC,cAAgBv1C,OAAO2H,UAAWxB,EAAMovC,eAAiBh1C,OAC3Fs3C,EAAYnxC,cAAZuN,OAAA+gC,EAA6B7uC,EAAMO,aACnCmxC,EAAY7D,yBAA2Bh0C,OAAO2H,UAAWxB,EAAM6tC,0BAC/D6D,EAAY1tC,UAAYhE,EAAMgE,UAAYnK,OAAO2H,UAAWxB,EAAMgE,WAAa5J,OAC/Es3C,EAAYjC,kBAAoBzvC,EAAMyvC,qBAAN3hC,OAAA+gC,EAA8B7uC,EAAMyvC,oBAAqBr1C,OAClFs3C,EAQF,QAASC,KAAuB,OAAAC,GAAA10C,UAAAO,OAARo0C,EAAQ9C,MAAA6C,GAAA/sB,EAAA,EAAAA,EAAA+sB,EAAA/sB,IAARgtB,EAAQhtB,GAAA3nB,UAAA2nB,EACrC,OAAOgtB,GAAO7wC,OAAO,SAACC,EAAGC,GACvB,GAAMktC,GAAWntC,CAQjB,OAPAmtC,GAAS/uB,MAAQne,EAAEme,MACnB+uB,EAASqB,kBAAoBvuC,EAAEuuC,kBAC/BrB,EAASP,yBAAyBE,qBAAuB7sC,EAAE2sC,yBAAyBE,qBACpFK,EAASpqC,UAAY9C,EAAE8C,UACvBoqC,EAASyB,QAAU3uC,EAAE2uC,QACrBzB,EAAS0B,QAAU5uC,EAAE4uC,QACrB1B,EAAS2B,SAAW7uC,EAAE6uC,SACf3B,IlD2mPVv0C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EkD/xPey2C,clDgyPfz2C,EkDtwPes3C,alDuwPft3C,EkD7vPey3C,YlD8vPfz3C,EkDjvPe03C,wBlDkvPf13C,EkDvuPe43C,oBlDwuPf53C,EkDztPe63C,wBlD0tPf73C,EkD7sPe83C,mBlD8sPf93C,EkD/rPe+3C,uBlDgsPf/3C,EkDrqPey4C,6BlDsqPfz4C,EkDlpPe+4C,alDmpPf/4C,EkDloPei5C,aAlNhB,IAAA72C,GAAA9B,EAAA,GACAgM,EAAAhM,EAAA,GAAYqJ,ElDy1PW5H,EAAwBuK,GkDx1P/CD,EAAA/L,EAAA,GlD41PKiJ,EAAwBxI,EAAuBsL,GkD31PpDwqC,EAAAv2C,EAAA,KlD0kQM,SAASL,EAAQD,EAASM,GAE/B,YAcA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASm1C,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvxC,GAAI,EAAG0xC,EAAOF,MAAMD,EAAIrxC,QAASF,EAAIuxC,EAAIrxC,OAAQF,IAAO0xC,EAAK1xC,GAAKuxC,EAAIvxC,EAAM,OAAO0xC,GAAe,MAAOF,OAAMG,KAAKJ,GmD5lQ3L,QAASgD,GAAYC,EAASC,GAC5B,OACErB,KAAMlqC,KAAKuK,IAAI+gC,EAAQpB,KAAMqB,EAAQrB,MACrCG,KAAMrqC,KAAKkC,IAAIopC,EAAQjB,KAAMkB,EAAQlB,MACrCE,KAAMvqC,KAAKuK,IAAI+gC,EAAQf,KAAMgB,EAAQhB,MACrCC,KAAMxqC,KAAKkC,IAAIopC,EAAQd,KAAMe,EAAQf,OAIzC,QAASgB,GAAcC,GACrB,OACEvB,KAAMlqC,KAAKuK,IAAIkhC,EAAKZ,WAAWvwC,EAAGmxC,EAAKX,UAAUxwC,GACjD+vC,KAAMrqC,KAAKkC,IAAIupC,EAAKZ,WAAWvwC,EAAGmxC,EAAKX,UAAUxwC,GACjDiwC,KAAMvqC,KAAKuK,IAAIkhC,EAAKZ,WAAWxpC,EAAGoqC,EAAKX,UAAUzpC,GACjDmpC,KAAMxqC,KAAKkC,IAAIupC,EAAKZ,WAAWxpC,EAAGoqC,EAAKX,UAAUzpC,IAIrD,QAASqqC,GAAiBC,GACxB,GAAMC,GAAY,IAEdC,EAAK7rC,KAAK8rC,IAAIH,EAAQI,aACtBC,EAAKhsC,KAAK2P,IAAIg8B,EAAQI,aACtBE,EAAKJ,EACLK,EAAKF,CACTH,IAAMF,EAAQQ,UACdF,GAAMN,EAAQS,UACdJ,GAAML,EAAQQ,UACdD,GAAMP,EAAQS,SAOd,KAAK,GALC98B,GAAItP,KAAKwC,IAAImpC,EAAQU,YAAcT,EAEnCtxC,KACA+G,KAEGvK,EAAI,EAAGA,GAAKwY,EAAGxY,IAAK,CAC3B,GAAMw1C,GAAQX,EAAQY,WAAez1C,EAAIwY,EAAKq8B,EAAQU,WAChDG,EAAQxsC,KAAKysC,MAAMzsC,KAAK2P,IAAI28B,GAASX,EAAQS,UAAWpsC,KAAK8rC,IAAIQ,GAASX,EAAQQ,WAElFO,EAAW1sC,KAAK8rC,IAAIU,GACpBG,EAAW3sC,KAAK2P,IAAI68B,EAE1BlyC,GAAE2I,KAAK0oC,EAAQiB,OAAOtyC,GAAMuxC,EAAKa,EAAaR,EAAKS,IACnDtrC,EAAE4B,KAAK0oC,EAAQiB,OAAOvrC,GAAM4qC,EAAKU,EAAaX,EAAKU,IAGrD,OACExC,KAAMlqC,KAAKuK,IAAL/T,MAAAwJ,KAAY1F,GAClB+vC,KAAMrqC,KAAKkC,IAAL1L,MAAAwJ,KAAY1F,GAClBiwC,KAAMvqC,KAAKuK,IAAL/T,MAAAwJ,KAAYqB,GAClBmpC,KAAMxqC,KAAKkC,IAAL1L,MAAAwJ,KAAYqB,IAItB,QAASwrC,GAAkBC,GACzB,OACE5C,KAAM4C,EAAS7wC,KAAK8wC,aAAazyC,EACjC+vC,KAAMyC,EAAS7wC,KAAK8wC,aAAazyC,EAAIwyC,EAAS7wC,KAAKoG,MACnDkoC,KAAMuC,EAAS7wC,KAAK8wC,aAAa1rC,EACjCmpC,KAAMsC,EAAS7wC,KAAK8wC,aAAa1rC,EAAIyrC,EAAS7wC,KAAK+wC,QAIvD,QAASC,GAAcC,GACrB,OACEhD,KAAMgD,EAAKC,YAAY7yC,EACvB+vC,KAAM6C,EAAKC,YAAY7yC,EAAI4yC,EAAKC,YAAY9qC,MAC5CkoC,KAAM2C,EAAKC,YAAY9rC,EACvBmpC,KAAM0C,EAAKC,YAAY9rC,EAAI6rC,EAAKC,YAAYH,QAIhD,QAASI,GAAgB/yC,GACvB,OACE6vC,KAAMlqC,KAAKuK,IAAL/T,MAAAwJ,KAAAooC,EAAY/tC,EAAOC,IACzB+vC,KAAMrqC,KAAKkC,IAAL1L,MAAAwJ,KAAAooC,EAAY/tC,EAAOC,IACzBiwC,KAAMvqC,KAAKuK,IAAL/T,MAAAwJ,KAAAooC,EAAY/tC,EAAOgH,IACzBmpC,KAAMxqC,KAAKkC,IAAL1L,MAAAwJ,KAAAooC,EAAY/tC,EAAOgH,KAUtB,QAASopC,GAAiB4C,GAAsH,GAA7GC,GAA6G72C,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,IAAlGyzC,KAAMC,OAAOC,UAAWC,KAAMF,OAAOG,UAAWC,KAAMJ,OAAOC,UAAWI,KAAML,OAAOG,WACpIiD,EAAYD,CAqBhB,OApBAC,GAAYF,EACP7D,OAAO,SAAAC,GAAA,MAA0B,WAAhBA,EAAOjsC,OACxBpD,IAAIgzC,GACJ7yC,OAAO8wC,EAAakC,GACzBA,EAAYF,EACP7D,OAAO,SAAAC,GAAA,MAA0B,SAAhBA,EAAOjsC,OACxBpD,IAAI6yC,GACJ1yC,OAAO8wC,EAAakC,GACzBA,EAAYF,EACP7D,OAAO,SAAAC,GAAA,MAA0B,SAAhBA,EAAOjsC,OACxBpD,IAAIoxC,GACJjxC,OAAO8wC,EAAakC,GACzBA,EAAYF,EACP7D,OAAO,SAAAC,GAAA,MAA0B,YAAhBA,EAAOjsC,OACxBpD,IAAIsxC,GACJnxC,OAAO8wC,EAAakC,GACzBA,EAAYF,EACP7D,OAAO,SAAAC,GAAA,MAA0B,aAAhBA,EAAOjsC,OACxBpD,IAAIyyC,GACJtyC,OAAO8wC,EAAakC,GAI3B,QAASC,GAAuBryC,GAC9B,GAAMsyC,GAAer6C,OAAO2H,WAAayC,KAAM,SAAWrC,EAAQY,kBAAkB2xC,eAAeC,OAC7FC,GACJpwC,KAAM,OACNlK,MAAOF,OAAO2H,UAAWI,EAAQY,kBAAkB2xC,eAAeR,MAKpE,OAHAU,GAAYt6C,MAAMu6C,QAAUJ,EAAaK,IAAOL,EAAaM,KAAON,EAAaO,MAAQJ,EAAYt6C,MAAMm4C,YACpGmC,GAAYt6C,MAAMm4C,KACzBmC,EAAYT,YAAcc,EAAAC,WAAWN,EAAYt6C,MAAMm2C,QAAQ0E,eAAeV,EAAaM,IAAK,EAAGH,EAAYt6C,MAAMu6C,UAC7GJ,EAAcG,GAQjB,QAAS7E,GAAkB5tC,GAChC,OAAQA,EAAQY,kBAAkByB,MAChC,IAAKhC,GAAArI,QAAoBuL,gBAAgBS,MACvC,MAAOquC,GAAuBryC,EAChC,SACE,UnDw8PL/H,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EmD1/Pew4C,mBnD2/Pfx4C,EmDj9Pe82C,mBApIhB,IAAAkF,GAAA17C,EAAA,IACA+L,EAAA/L,EAAA,GnD0lQKiJ,EAAwBxI,EAAuBsL,IA+I9C,SAASpM,EAAQD,EAASM,GAE/B,YoDprQD,SAAS67C,GAAYlB,EAAM/nC,GAEzB,GAAMkpC,GAAkBv2C,SAClBw2C,EAAMD,EAAgBE,cAAc,MAI1C,OAHAD,GAAIE,QAAQtB,KAAOA,EACnBoB,EAAInpC,IAAMA,EACVmpC,EAAIG,MAAMC,QAAU,OACbJ,EAOF,QAASK,GAAoBC,GAClCx7C,OAAO0Q,KAAKoqC,GAAYnqC,QAAQ,SAAC7P,GAC/B06C,EAAQC,YAAYT,EAAYl6C,EAAZ,sBAAuCg6C,EAAWh6C,GAAK46C,QAI/E,QAASC,GAAUC,EAASrB,GAC1B,IAAK,GAAI72C,GAAI,EAAGA,EAAI62C,EAAMK,MAAOl3C,IAAK,CACpC,GAAMm4C,IAAO30C,EAAG,EAAG+G,EAAGssC,EAAMG,IAAOh3C,EAAI62C,EAAMI,KACvCmB,GAAO50C,EAAG00C,EAAQG,OAAO9sC,MAAOhB,EAAGssC,EAAMG,IAAOh3C,EAAI62C,EAAMI,MAChE,EAAAqB,EAAAC,UAASL,EAASC,EAAIC,IAI1B,QAASI,GAASN,EAAS9B,GAEzB8B,EAAQO,UAAUz3C,SAAS03C,cAAT,iBAAwCtC,EAAK55C,MAAMm2C,OAAnD,KAA+DyD,EAAKC,YAAY7yC,EAAG4yC,EAAKC,YAAY9rC,EAAG6rC,EAAKC,YAAY9qC,MAAO6qC,EAAKC,YAAYH,QAQ7J,QAASyC,GAAgBT,EAASvF,GAEvC,OADAp1C,EAAAQ,eAAOmH,MAAP,QAAqBytC,EAAOjsC,KAA5B,WACQisC,EAAOjsC,MACb,IAAKkyC,GAAaxC,KAChBoC,EAASN,EAASvF,EAClB,MACF,KAAKiG,GAAa/B,MAChBoB,EAAUC,EAASvF,EACnB,MACF,SACEp1C,EAAAQ,eAAO86C,MAASlG,EAAOjsC,KAAvB,qBpDsoQLpK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQy9C,aAAez9C,EAAQi8C,WAAav6C,OAC5C1B,EoD5qQe08C,sBpD6qQf18C,EoDrpQew9C,iBA9FhB,IAAAp7C,GAAA9B,EAAA,GACA68C,EAAA78C,EAAA,IAKa27C,gBACX9nC,GACE0oC,IAAK,q+BACLX,eAAgB,SAACJ,EAAK6B,EAAS/B,GAAf,OACdb,OAAc,EAANe,EACR1rC,MAAc,EAAN0rC,EAAD,GACPzzC,EAAGs1C,EACHvuC,EAAGwsC,EAAUE,KAGjBznC,GACEwoC,IAAK,s6CACLX,eAAgB,SAACJ,EAAK6B,EAAS/B,GAAf,OACdb,OAAc,EAANe,EACR1rC,MAAc,EAAN0rC,EAAD,IACPzzC,EAAGs1C,EACHvuC,EAAGwsC,EAAWE,SAGlBxH,GACEuI,IAAK;AACLX,eAAgB,SAACJ,EAAK6B,EAAS/B,GAAf,OACdb,OAAQe,MACR1rC,MAAQ0rC,MAAD,KACPzzC,EAAGs1C,EACHvuC,EAAGwsC,EAAWE,UAQP2B,kBACXG,WAAY,aACZC,WAAY,aACZC,IAAK,MACLC,KAAM,OACN9C,KAAM,OACN+C,WAAY,aACZC,KAAM,OACNC,KAAM,OACNC,WAAY,aACZC,KAAM,OACN1C,MAAO,QACP2C,KAAM,OACNC,UAAW,YACXC,cAAe,kBpDqzQX,SAASt+C,EAAQD,EAASM,GAE/B,YqD/1QD,SAASk+C,GAAInE,GACX,GAAIoE,IAAkBpE,EAAQtsC,KAAK2wC,KAAiB,EAAV3wC,KAAK2wC,IAAW3wC,KAAK2wC,EAI/D,OAHID,IAAiB1wC,KAAK2wC,KACxBD,GAA2B,EAAV1wC,KAAK2wC,IAEjBD,EAGT,QAASE,GAAe5B,EAAS6B,EAAa1E,EAAWC,EAAWL,EAAaQ,EAAYF,GAC3F,GAAMT,GAAY,IAEdC,EAAK7rC,KAAK8rC,IAAIC,GACdC,EAAKhsC,KAAK2P,IAAIo8B,GACdE,EAAKJ,EACLK,EAAKF,CACTH,IAAMM,EACNF,GAAMG,EACNJ,GAAMG,EACND,GAAME,CAEN,IAAM98B,GAAItP,KAAKqR,MAAMrR,KAAKwC,IAAI6pC,GAAcT,GAEtCkF,IAEN9B,GAAQ+B,MACR,KACE/B,EAAQgC,WAER,KAAK,GAAIl6C,GAAI,EAAGA,GAAKwY,EAAGxY,IAAK,CAC3B,GAAMw1C,GAAQC,EAAez1C,EAAIwY,EAAK+8B,EAChCG,EAAQxsC,KAAKysC,MAAMzsC,KAAK2P,IAAI28B,GAASF,EAAWpsC,KAAK8rC,IAAIQ,GAASH,GAElEO,EAAW1sC,KAAK8rC,IAAIU,GACpBG,EAAW3sC,KAAK2P,IAAI68B,GAGpBlyC,EAAKu2C,EAAYv2C,EAAKuxC,EAAKa,EAAcR,EAAKS,EAC9CtrC,EAAKwvC,EAAYxvC,EAAK4qC,EAAKU,EAAcX,EAAKU,CAC1C,KAAN51C,EACFk4C,EAAQiC,OAAO32C,EAAG+G,GAElB2tC,EAAQkC,OAAO52C,EAAG+G,GAGV,IAANvK,GAAWA,IAAMwY,GACnBwhC,EAAiB7tC,MAAO3I,IAAG+G,MAI/B2tC,EAAQ30C,SAxBV,QA0BE20C,EAAQmC,UAGV,MAAOL,GAGT,QAASM,GAAcpC,EAASqC,EAAW/E,EAAOt1C,GAChD,GAAMw1C,GAAQiE,EAAInE,EAAStsC,KAAK2wC,IAAM,EAAI,IACpCW,EAAOb,EAAInE,EAAStsC,KAAK2wC,IAAM,EAAI,IAEnCY,EAAmBvC,CACzBuC,GAAiBR,MACjB,KACEQ,EAAiBC,UAAYD,EAAiBE,YAE9CF,EAAiBN,OAAOI,EAAU/2C,EAAG+2C,EAAUhwC,GAC/CkwC,EAAiBP,YACjBO,EAAiBL,OAAOG,EAAU/2C,EAAKtD,EAASgJ,KAAK8rC,IAAIU,GAAS6E,EAAUhwC,EAAKrK,EAASgJ,KAAK2P,IAAI68B,IACnG+E,EAAiBL,OAAOG,EAAU/2C,EAAKtD,EAASgJ,KAAK8rC,IAAIwF,GAAQD,EAAUhwC,EAAKrK,EAASgJ,KAAK2P,IAAI2hC,IAClGC,EAAiBL,OAAOG,EAAU/2C,EAAG+2C,EAAUhwC,GAC/CkwC,EAAiBG,OARnB,QAUEH,EAAiBJ,WAIrB,QAASQ,GAAiB3C,EAAS4C,GACjC,GAAMC,GAASjB,EACX5B,EACA4C,EAAahF,OACbgF,EAAazF,UACbyF,EAAaxF,UACbwF,EAAa7F,YACb6F,EAAarF,WACbqF,EAAavF,WAEbuF,GAAaE,iBAAoD,eAAjCF,EAAaE,iBAC/CV,EAAcpC,EAAS6C,EAAO,GAAID,EAAaG,kBAAmB,IAEhEH,EAAaI,eAAgD,eAA/BJ,EAAaI,eAC7CZ,EAAcpC,EAAS6C,EAAO,GAAID,EAAaK,gBAAiB,IAU7D,QAAS5C,GAASL,EAASC,EAAIC,GACpCF,EAAQ+B,MACR,KACE/B,EAAQgC,YACRhC,EAAQiC,OAAOhC,EAAG30C,EAAG20C,EAAG5tC,GACxB2tC,EAAQkC,OAAOhC,EAAG50C,EAAG40C,EAAG7tC,GACxB2tC,EAAQ30C,SAJV,QAME20C,EAAQmC,WAIZ,QAASe,GAAclD,EAASmD,GAC9B9C,EAASL,EAASmD,EAAUtH,WAAYsH,EAAUrH,WAChB,eAA9BqH,EAAUL,iBACZV,EAAcpC,EAASmD,EAAUtH,WAAYsH,EAAUJ,kBAAmB,IAE5C,eAA5BI,EAAUH,eACZZ,EAAcpC,EAASmD,EAAUrH,UAAWqH,EAAUF,gBAAiB,IASpE,QAASG,GAAgBpD,EAASvF,GACvCp1C,EAAAQ,eAAOmH,MAAP,QAAqBytC,EAAOjsC,KAA5B,UACA,IAAM+zC,GAAmBvC,CACzBuC,GAAiBR,MACjB,KAIE,GAHAQ,EAAiBc,UAAY5I,EAAOpnC,MACpCkvC,EAAiBE,YAAchI,EAAOpmC,MAElComC,EAAO6I,YACT,OAAQ7I,EAAO6I,aACb,IAAKC,GAAaC,MAChBJ,EAAgBb,EAAkB9H,EAAOgJ,WAAWhJ,EAAOiJ,wBAC3D,MACF,KAAKH,GAAaI,MAChBlJ,EAAOmJ,MAAM7uC,QAAQ,SAAA0nC,GAAA,MAAQ2G,GAAgBb,EAAkB9F,IAC/D,MACF,KAAK8G,GAAa9G,KAChB4D,EAASkC,EAAkB9H,EAAOxtC,KAAKgzC,GAAIxF,EAAOxtC,KAAKizC,GACvD,MACF,SACE76C,EAAAQ,eAAO86C,MAASlG,EAAO6I,YAAvB,wBAIJ,QAAQ7I,EAAOjsC,MACb,IAAK+0C,GAAa5G,QAChBgG,EAAiBJ,EAAkB9H,EACnC,MACF,KAAK8I,GAAa9G,KAChByG,EAAcX,EAAkB9H,EAChC,MACF,KAAK8I,GAAaM,gBAChBpJ,EAAOqJ,WAAW/uC,QAAQ,SAAAgvC,GAAA,MAAaX,GAAgBb,EAAkBwB,IACzE,MACF,SACE1+C,EAAAQ,eAAO86C,MAASlG,EAAOjsC,KAAvB,qBA/BR,QAoCE+zC,EAAiBJ,WrDyrQpB/9C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQsgD,aAAe5+C,OACvB1B,EqDhwQeo9C,WrDiwQfp9C,EqDtuQemgD,iBA7IhB,IAAA/9C,GAAA9B,EAAA,GAKaggD,kBACXI,MAAO,QACPH,MAAO,QACPK,gBAAiB,kBACjBlH,QAAS,UACTF,KAAM,SrDmiRF,SAASv5C,EAAQD,EAASM,GAE/B,YsDxiRM,SAASoL,GAAuBpE,GAErC,MADAlF,GAAAM,iBAAOqH,MAAM,+BAAgCzC,GACtCA,EtDwiRRnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EsD7iRe0L,wBAPhB,IAAAtJ,GAAA9B,EAAA,ItDokRM,SAASL,EAAQD,EAASM,GAE/B,YAeA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GuDl9QjF,QAASkH,GAAuBgB,GACrC,OAAO,EAAA63C,EAAA7/C,YAAW8/C,EAA4Bt/C,SAAZwH,KAA6BA,GvDo8QhE/H,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EuDx8QekI,wBAnIhB,IAAA+4C,GAAA3gD,EAAA,IvD+kRKygD,EAAehgD,EAAuBkgD,GuD9kR3C50C,EAAA/L,EAAA,GvDklRKiJ,EAAwBxI,EAAuBsL,GuDjiR9C20C,GAEJE,qBAAsB,GACtBC,iBACEC,SAAU,SACVC,QAAS,aAEXv3C,mBAIEw3C,qBAAsB/3C,EAAArI,QAAoB6N,mBAAmBE,OAC7DsyC,8BAA+B,IAE/BC,wCAAyC,IACzCj2C,KAAMhC,EAAArI,QAAoBuL,gBAAgBC,KAC1CC,SAAUpD,EAAArI,QAAoB0L,SAAS2B,UACvCzB,WAAY,KACZ5C,QACEgB,OAAQ,QACRC,KAAM,0CACNlB,eAAgB,uCAChBI,QAAS,uCACTyrC,cAAe,EACfP,WACEkM,iBAAkB,GAClBC,mBAAoB,KAEpB7L,eAAe,IAGnB8L,iBAAkB,EAClBC,wBAAyB,EACzBC,eACEC,eACAC,mBAAmB,EACnBC,iBACAC,+BAAgC,GAElCp4C,eACEq4C,SAAU,QACVC,cAAe54C,EAAArI,QAAoBkM,UAAUC,QAC7C+0C,aAAc74C,EAAArI,QAAoB0M,aAAalB,KAC/C21C,gBACEC,sBAAuB,IAG3BC,gBACEC,2BAA4B,EAC5BC,kBAAkB,GAEpBhH,gBACEiH,UAAW,IACXZ,aAAc,WAAY,aAC1BE,iBACAtG,OACEG,IAAK,IACLE,MAAO,EACPD,IAAK,IAEPb,MACEzD,OAAQ,IACRmL,OAAQ,EACRnJ,KAAM,IAGVoJ,mBACE/4C,eACEw4C,kBACAH,SAAU,QACVC,cAAe54C,EAAArI,QAAoBkM,UAAUC,WvDmmRpDrN,GAAQkB,QuDplRM8/C,GvDwlRT,SAAS/gD,EAAQD,EAASM;;;;;;AwDxtRhC,YAMA,SAAAwI,GAAA+5C,GACAA,OACA,IAAAC,GAAAt+C,UAAAO,OAAAF,EAAA,CACA,QAAAi+C,EACA,MAAAD,EAEA,QAAAh+C,EAAAi+C,GAAA,CACA,GAAAC,GAAAv+C,UAAAK,EACAm+C,GAAAH,KACAA,EAAAE,GAEAE,EAAAF,IACAtuC,EAAAouC,EAAAE,GAGA,MAAAF,GAOA,QAAApuC,GAAAouC,EAAA7hD,GACAkiD,EAAAL,EAAA7hD,EAEA,QAAAiB,KAAAjB,GACA,GAAAmiD,EAAAniD,EAAAiB,GAAA,CACA,GAAA8gD,GAAA/hD,EAAAiB,EACAghD,GAAAF,IACA,cAAAK,EAAAP,EAAA5gD,KAAA,aAAAmhD,EAAAL,KACAF,EAAA5gD,GAAA8gD,GAEAF,EAAA5gD,GAAA6G,EAAA+5C,EAAA5gD,OAA8C8gD,IAE9CF,EAAA5gD,GAAA8gD,EAIA,MAAAF,GAOA,QAAAI,GAAAjiD,GACA,iBAAAoiD,EAAApiD,IAAA,aAAAoiD,EAAApiD,GAOA,QAAAmiD,GAAAniD,EAAAiB,GACA,MAAAd,QAAAe,UAAAC,eAAAxB,KAAAK,EAAAiB,GA1DA,GAAA+gD,GAAA1iD,EAAA,IACA4iD,EAAA5iD,EAAA,IACA8iD,EAAA9iD,EAAA,GA+DAL,GAAAD,QAAA8I,GxDsuRM,SAAS7I,EAAQD;;;;;;AyDzyRvB,YAGAC,GAAAD,QAAA,SAAAqB,GACA,aAAAA,GAAA,kBAAAA,IAAA,gBAAAA,KzDwzRM,SAASpB,EAAQD;;;;;;A0D5zRvB,YAEAC,GAAAD,QAAA,SAAAqjD,EAAAC,GACA,UAAAD,GAAA,mBAAAA,GACA,SAAAn8C,WAAA,2CAGA,uBAAAo8C,IAAA,mBAAA1vC,QACA,MAAAyvC,EAGA,sBAAAliD,QAAAoiD,sBACA,MAAAF,EAOA,KAJA,GAAAG,GAAAriD,OAAAe,UAAAuhD,qBACAZ,EAAA1hD,OAAAkiD,GACAP,EAAAt+C,UAAAO,OAAAF,EAAA,IAEAA,EAAAi+C,GAIA,OAHAY,GAAAviD,OAAAqD,UAAAK,IACA8+C,EAAAxiD,OAAAoiD,sBAAAG,GAEA7mC,EAAA,EAAmBA,EAAA8mC,EAAA5+C,OAAkB8X,IAAA,CACrC,GAAA5a,GAAA0hD,EAAA9mC,EAEA2mC,GAAA7iD,KAAA+iD,EAAAzhD,KACA4gD,EAAA5gD,GAAAyhD,EAAAzhD,IAIA,MAAA4gD,K1D20RM,SAAS5iD,EAAQD,EAASM,I2Dj3RhC,SAAAsjD,GAAA,GAAAC,GAAAvjD,EAAA,IACAkT,EAAArS,OAAAe,UAAAsR,QASAvT,GAAAD,QAAA,SAAA+iD,GAEA,sBAAAA,GACA,iBAEA,WAAAA,EACA,YAEA,IAAAA,KAAA,GAAAA,KAAA,GAAAA,YAAAe,SACA,eAEA,oBAAAf,gBAAAjsC,QACA,cAEA,oBAAAisC,gBAAA7K,QACA,cAIA,sBAAA6K,gBAAA1+C,UACA,gBAIA,uBAAAgyC,OAAAC,SAAAD,MAAAC,QAAAyM,GACA,aAIA,IAAAA,YAAAgB,QACA,cAEA,IAAAhB,YAAA9L,MACA,YAIA,IAAA1rC,GAAAiI,EAAA7S,KAAAoiD,EAEA,2BAAAx3C,EACA,SAEA,kBAAAA,EACA,OAEA,uBAAAA,EACA,YAEA,mBAAAA,EACA,QAIA,mBAAAq4C,IAAAC,EAAAd,GACA,SAIA,iBAAAx3C,EACA,MAEA,qBAAAA,EACA,UAEA,iBAAAA,EACA,MAEA,qBAAAA,EACA,UAEA,oBAAAA,EACA,SAIA,uBAAAA,EACA,YAEA,wBAAAA,EACA,aAEA,+BAAAA,EACA,oBAEA,wBAAAA,EACA,aAEA,yBAAAA,EACA,cAEA,wBAAAA,EACA,aAEA,yBAAAA,EACA,cAEA,0BAAAA,EACA,eAEA,0BAAAA,EACA,eAIA,Y3Ds3R8B5K,KAAKX,EAASM,EAAoB,IAAIsjD,SAI9D,SAAS3jD,EAAQD,EAASM,I4D5+RhC,SAAA0jD;;;;;;AAQA,YA2CA,SAAAC,KACA,IACA,GAAA7N,GAAA,GAAA17B,YAAA,EAEA,OADA07B,GAAA8N,WAAqBA,UAAAxpC,WAAAxY,UAAAiiD,IAAA,WAAmD,YACxE,KAAA/N,EAAA+N,OACA,kBAAA/N,GAAAgO,UACA,IAAAhO,EAAAgO,SAAA,KAAA/oC,WACG,MAAA/W,GACH,UAIA,QAAA+/C,KACA,MAAAT,GAAAU,oBACA,WACA,WAGA,QAAAC,GAAAC,EAAAz/C,GACA,GAAAs/C,IAAAt/C,EACA,SAAA0/C,YAAA,6BAcA,OAZAb,GAAAU,qBAEAE,EAAA,GAAA9pC,YAAA3V,GACAy/C,EAAAN,UAAAN,EAAA1hD,YAGA,OAAAsiD,IACAA,EAAA,GAAAZ,GAAA7+C,IAEAy/C,EAAAz/C,UAGAy/C,EAaA,QAAAZ,GAAAc,EAAAC,EAAA5/C,GACA,KAAA6+C,EAAAU,qBAAAlkD,eAAAwjD,IACA,UAAAA,GAAAc,EAAAC,EAAA5/C,EAIA,oBAAA2/C,GAAA,CACA,mBAAAC,GACA,SAAAjyC,OACA,oEAGA,OAAAkyC,GAAAxkD,KAAAskD,GAEA,MAAAlO,GAAAp2C,KAAAskD,EAAAC,EAAA5/C,GAWA,QAAAyxC,GAAAgO,EAAAnjD,EAAAsjD,EAAA5/C,GACA,mBAAA1D,GACA,SAAA6F,WAAA,wCAGA,0BAAAoT,cAAAjZ,YAAAiZ,aACAuqC,EAAAL,EAAAnjD,EAAAsjD,EAAA5/C,GAGA,gBAAA1D,GACAyjD,EAAAN,EAAAnjD,EAAAsjD,GAGAI,EAAAP,EAAAnjD,GA4BA,QAAA2jD,GAAAC,GACA,mBAAAA,GACA,SAAA/9C,WAAA,mCACG,IAAA+9C,EAAA,EACH,SAAAR,YAAA,wCAIA,QAAAS,GAAAV,EAAAS,EAAAxF,EAAA0F,GAEA,MADAH,GAAAC,GACAA,GAAA,EACAV,EAAAC,EAAAS,GAEAvjD,SAAA+9C,EAIA,gBAAA0F,GACAZ,EAAAC,EAAAS,GAAAxF,OAAA0F,GACAZ,EAAAC,EAAAS,GAAAxF,QAEA8E,EAAAC,EAAAS,GAWA,QAAAL,GAAAJ,EAAAS,GAGA,GAFAD,EAAAC,GACAT,EAAAD,EAAAC,EAAAS,EAAA,MAAAG,EAAAH,KACArB,EAAAU,oBACA,OAAAz/C,GAAA,EAAmBA,EAAAogD,IAAUpgD,EAC7B2/C,EAAA3/C,GAAA,CAGA,OAAA2/C,GAgBA,QAAAM,GAAAN,EAAAa,EAAAF,GAKA,GAJA,gBAAAA,IAAA,KAAAA,IACAA,EAAA,SAGAvB,EAAA0B,WAAAH,GACA,SAAAj+C,WAAA,6CAGA,IAAAnC,GAAA,EAAAsW,EAAAgqC,EAAAF,EACAX,GAAAD,EAAAC,EAAAz/C,EAEA,IAAAwgD,GAAAf,EAAAgB,MAAAH,EAAAF,EASA,OAPAI,KAAAxgD,IAIAy/C,IAAAn+C,MAAA,EAAAk/C,IAGAf,EAGA,QAAAiB,GAAAjB,EAAAkB,GACA,GAAA3gD,GAAA2gD,EAAA3gD,OAAA,MAAAqgD,EAAAM,EAAA3gD,OACAy/C,GAAAD,EAAAC,EAAAz/C,EACA,QAAAF,GAAA,EAAiBA,EAAAE,EAAYF,GAAA,EAC7B2/C,EAAA3/C,GAAA,IAAA6gD,EAAA7gD,EAEA,OAAA2/C,GAGA,QAAAK,GAAAL,EAAAkB,EAAAtqC,EAAArW,GAGA,GAFA2gD,EAAArqC,WAEAD,EAAA,GAAAsqC,EAAArqC,WAAAD,EACA,SAAAqpC,YAAA,4BAGA,IAAAiB,EAAArqC,WAAAD,GAAArW,GAAA,GACA,SAAA0/C,YAAA,4BAmBA,OAfAiB,GADAhkD,SAAA0Z,GAAA1Z,SAAAqD,EACA,GAAA2V,YAAAgrC,GACGhkD,SAAAqD,EACH,GAAA2V,YAAAgrC,EAAAtqC,GAEA,GAAAV,YAAAgrC,EAAAtqC,EAAArW,GAGA6+C,EAAAU,qBAEAE,EAAAkB,EACAlB,EAAAN,UAAAN,EAAA1hD,WAGAsiD,EAAAiB,EAAAjB,EAAAkB,GAEAlB,EAGA,QAAAO,GAAAP,EAAAxjD,GACA,GAAA4iD,EAAAC,SAAA7iD,GAAA,CACA,GAAA8hD,GAAA,EAAAsC,EAAApkD,EAAA+D,OAGA,OAFAy/C,GAAAD,EAAAC,EAAA1B,GAEA,IAAA0B,EAAAz/C,OACAy/C,GAGAxjD,EAAA2kD,KAAAnB,EAAA,IAAA1B,GACA0B,GAGA,GAAAxjD,EAAA,CACA,sBAAAsZ,cACAtZ,EAAAma,iBAAAb,cAAA,UAAAtZ,GACA,sBAAAA,GAAA+D,QAAA6gD,EAAA5kD,EAAA+D,QACAw/C,EAAAC,EAAA,GAEAiB,EAAAjB,EAAAxjD,EAGA,eAAAA,EAAAuK,MAAA+qC,EAAAt1C,EAAAgJ,MACA,MAAAy7C,GAAAjB,EAAAxjD,EAAAgJ,MAIA,SAAA9C,WAAA,sFAGA,QAAAk+C,GAAArgD,GAGA,GAAAA,GAAAs/C,IACA,SAAAI,YAAA,0DACAJ,IAAA7wC,SAAA,aAEA,UAAAzO,EAGA,QAAA8gD,GAAA9gD,GAIA,OAHAA,OACAA,EAAA,GAEA6+C,EAAAsB,OAAAngD,GA+EA,QAAAsW,GAAAgqC,EAAAF,GACA,GAAAvB,EAAAC,SAAAwB,GACA,MAAAA,GAAAtgD,MAEA,uBAAAuV,cAAA,kBAAAA,aAAAwrC,SACAxrC,YAAAwrC,OAAAT,gBAAA/qC,cACA,MAAA+qC,GAAAhqC,UAEA,iBAAAgqC,KACAA,EAAA,GAAAA,EAGA,IAAAvC,GAAAuC,EAAAtgD,MACA,QAAA+9C,EAAA,QAIA,KADA,GAAAiD,IAAA,IAEA,OAAAZ,GACA,YACA,aACA,aACA,MAAArC,EACA,YACA,YACA,IAAAphD,QACA,MAAAskD,GAAAX,GAAAtgD,MACA,YACA,YACA,cACA,eACA,SAAA+9C,CACA,WACA,MAAAA,KAAA,CACA,cACA,MAAAmD,GAAAZ,GAAAtgD,MACA,SACA,GAAAghD,EAAA,MAAAC,GAAAX,GAAAtgD,MACAogD,IAAA,GAAAA,GAAA35C,cACAu6C,GAAA,GAMA,QAAAG,GAAAf,EAAAl0C,EAAAC,GACA,GAAA60C,IAAA,CAcA,KALArkD,SAAAuP,KAAA,KACAA,EAAA,GAIAA,EAAA7Q,KAAA2E,OACA,QAOA,KAJArD,SAAAwP,KAAA9Q,KAAA2E,UACAmM,EAAA9Q,KAAA2E,QAGAmM,GAAA,EACA,QAOA,IAHAA,KAAA,EACAD,KAAA,EAEAC,GAAAD,EACA,QAKA,KAFAk0C,MAAA,UAGA,OAAAA,GACA,UACA,MAAAgB,GAAA/lD,KAAA6Q,EAAAC,EAEA,YACA,YACA,MAAAk1C,GAAAhmD,KAAA6Q,EAAAC,EAEA,aACA,MAAAm1C,GAAAjmD,KAAA6Q,EAAAC,EAEA,cACA,aACA,MAAAo1C,GAAAlmD,KAAA6Q,EAAAC,EAEA,cACA,MAAAq1C,GAAAnmD,KAAA6Q,EAAAC,EAEA,YACA,YACA,cACA,eACA,MAAAs1C,GAAApmD,KAAA6Q,EAAAC,EAEA,SACA,GAAA60C,EAAA,SAAA7+C,WAAA,qBAAAi+C,EACAA,MAAA,IAAA35C,cACAu6C,GAAA,GASA,QAAAU,GAAAj+C,EAAA6U,EAAAzc,GACA,GAAAiE,GAAA2D,EAAA6U,EACA7U,GAAA6U,GAAA7U,EAAA5H,GACA4H,EAAA5H,GAAAiE,EAmIA,QAAA6hD,GAAAvrC,EAAA4nC,EAAA3nC,EAAA+pC,EAAAwB,GAEA,OAAAxrC,EAAApW,OAAA,QAmBA,IAhBA,gBAAAqW,IACA+pC,EAAA/pC,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAzL,MAAAyL,KAEAA,EAAAurC,EAAA,EAAAxrC,EAAApW,OAAA,GAIAqW,EAAA,IAAAA,EAAAD,EAAApW,OAAAqW,GACAA,GAAAD,EAAApW,OAAA,CACA,GAAA4hD,EAAA,QACAvrC,GAAAD,EAAApW,OAAA,MACG,IAAAqW,EAAA,GACH,IAAAurC,EACA,QADAvrC,GAAA,EAUA,GALA,gBAAA2nC,KACAA,EAAAa,EAAApN,KAAAuM,EAAAoC,IAIAvB,EAAAC,SAAAd,GAEA,WAAAA,EAAAh+C,QACA,EAEA6hD,EAAAzrC,EAAA4nC,EAAA3nC,EAAA+pC,EAAAwB,EACG,oBAAA5D,GAEH,MADAA,IAAA,IACAa,EAAAU,qBACA,kBAAA5pC,YAAAxY,UAAAiE,QACAwgD,EACAjsC,WAAAxY,UAAAiE,QAAAxF,KAAAwa,EAAA4nC,EAAA3nC,GAEAV,WAAAxY,UAAA2kD,YAAAlmD,KAAAwa,EAAA4nC,EAAA3nC,GAGAwrC,EAAAzrC,GAAA4nC,GAAA3nC,EAAA+pC,EAAAwB,EAGA,UAAAz/C,WAAA,wCAGA,QAAA0/C,GAAAxQ,EAAA2M,EAAA3nC,EAAA+pC,EAAAwB,GAmBA,QAAAG,GAAAC,EAAAliD,GACA,WAAAmiD,EACAD,EAAAliD,GAEAkiD,EAAAE,aAAApiD,EAAAmiD,GAtBA,GAAAA,GAAA,EACAE,EAAA9Q,EAAArxC,OACAoiD,EAAApE,EAAAh+C,MAEA,IAAArD,SAAAyjD,IACAA,EAAAruC,OAAAquC,GAAA35C,cACA,SAAA25C,GAAA,UAAAA,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA/O,EAAArxC,OAAA,GAAAg+C,EAAAh+C,OAAA,EACA,QAEAiiD,GAAA,EACAE,GAAA,EACAC,GAAA,EACA/rC,GAAA,EAYA,GAAAvW,EACA,IAAA8hD,EAAA,CACA,GAAAS,IAAA,CACA,KAAAviD,EAAAuW,EAAwBvW,EAAAqiD,EAAeriD,IACvC,GAAAiiD,EAAA1Q,EAAAvxC,KAAAiiD,EAAA/D,EAAAqE,KAAA,IAAAviD,EAAAuiD,IAEA,GADAA,KAAA,IAAAA,EAAAviD,GACAA,EAAAuiD,EAAA,IAAAD,EAAA,MAAAC,GAAAJ,MAEAI,MAAA,IAAAviD,KAAAuiD,GACAA,GAAA,MAKA,KADAhsC,EAAA+rC,EAAAD,IAAA9rC,EAAA8rC,EAAAC,GACAtiD,EAAAuW,EAAwBvW,GAAA,EAAQA,IAAA,CAEhC,OADAwiD,IAAA,EACAxqC,EAAA,EAAqBA,EAAAsqC,EAAetqC,IACpC,GAAAiqC,EAAA1Q,EAAAvxC,EAAAgY,KAAAiqC,EAAA/D,EAAAlmC,GAAA,CACAwqC,GAAA,CACA,OAGA,GAAAA,EAAA,MAAAxiD,GAIA,SAeA,QAAAyiD,GAAAP,EAAA1B,EAAA9sC,EAAAxT,GACAwT,EAAA2/B,OAAA3/B,IAAA,CACA,IAAAgvC,GAAAR,EAAAhiD,OAAAwT,CACAxT,IAGAA,EAAAmzC,OAAAnzC,GACAA,EAAAwiD,IACAxiD,EAAAwiD,IAJAxiD,EAAAwiD,CASA,IAAAC,GAAAnC,EAAAtgD,MACA,IAAAyiD,EAAA,eAAAtgD,WAAA,qBAEAnC,GAAAyiD,EAAA,IACAziD,EAAAyiD,EAAA,EAEA,QAAA3iD,GAAA,EAAiBA,EAAAE,IAAYF,EAAA,CAC7B,GAAA4iD,GAAA/wC,SAAA2uC,EAAA1uC,OAAA,EAAA9R,EAAA,MACA,IAAA8K,MAAA83C,GAAA,MAAA5iD,EACAkiD,GAAAxuC,EAAA1T,GAAA4iD,EAEA,MAAA5iD,GAGA,QAAA6iD,GAAAX,EAAA1B,EAAA9sC,EAAAxT,GACA,MAAA4iD,GAAA3B,EAAAX,EAAA0B,EAAAhiD,OAAAwT,GAAAwuC,EAAAxuC,EAAAxT,GAGA,QAAA6iD,GAAAb,EAAA1B,EAAA9sC,EAAAxT,GACA,MAAA4iD,GAAAE,EAAAxC,GAAA0B,EAAAxuC,EAAAxT,GAGA,QAAA+iD,GAAAf,EAAA1B,EAAA9sC,EAAAxT,GACA,MAAA6iD,GAAAb,EAAA1B,EAAA9sC,EAAAxT,GAGA,QAAAgjD,GAAAhB,EAAA1B,EAAA9sC,EAAAxT,GACA,MAAA4iD,GAAA1B,EAAAZ,GAAA0B,EAAAxuC,EAAAxT,GAGA,QAAAijD,GAAAjB,EAAA1B,EAAA9sC,EAAAxT,GACA,MAAA4iD,GAAAM,EAAA5C,EAAA0B,EAAAhiD,OAAAwT,GAAAwuC,EAAAxuC,EAAAxT,GAkFA,QAAAwhD,GAAAQ,EAAA91C,EAAAC,GACA,WAAAD,GAAAC,IAAA61C,EAAAhiD,OACAmjD,EAAAC,cAAApB,GAEAmB,EAAAC,cAAApB,EAAA1gD,MAAA4K,EAAAC,IAIA,QAAAk1C,GAAAW,EAAA91C,EAAAC,GACAA,EAAAnD,KAAAuK,IAAAyuC,EAAAhiD,OAAAmM,EAIA,KAHA,GAAAk3C,MAEAvjD,EAAAoM,EACApM,EAAAqM,GAAA,CACA,GAAAm3C,GAAAtB,EAAAliD,GACA+W,EAAA,KACA0sC,EAAAD,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,CAEA,IAAAxjD,EAAAyjD,GAAAp3C,EAAA,CACA,GAAAq3C,GAAAC,EAAAC,EAAAC,CAEA,QAAAJ,GACA,OACAD,EAAA,MACAzsC,EAAAysC,EAEA,MACA,QACAE,EAAAxB,EAAAliD,EAAA,GACA,WAAA0jD,KACAG,GAAA,GAAAL,IAAA,KAAAE,EACAG,EAAA,MACA9sC,EAAA8sC,GAGA,MACA,QACAH,EAAAxB,EAAAliD,EAAA,GACA2jD,EAAAzB,EAAAliD,EAAA,GACA,WAAA0jD,IAAA,WAAAC,KACAE,GAAA,GAAAL,IAAA,OAAAE,IAAA,KAAAC,EACAE,EAAA,OAAAA,EAAA,OAAAA,EAAA,SACA9sC,EAAA8sC,GAGA,MACA,QACAH,EAAAxB,EAAAliD,EAAA,GACA2jD,EAAAzB,EAAAliD,EAAA,GACA4jD,EAAA1B,EAAAliD,EAAA,GACA,WAAA0jD,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAL,IAAA,OAAAE,IAAA,OAAAC,IAAA,KAAAC,EACAC,EAAA,OAAAA,EAAA,UACA9sC,EAAA8sC,KAMA,OAAA9sC,GAGAA,EAAA,MACA0sC,EAAA,GACK1sC,EAAA,QAELA,GAAA,MACAwsC,EAAAp3C,KAAA4K,IAAA,eACAA,EAAA,WAAAA,GAGAwsC,EAAAp3C,KAAA4K,GACA/W,GAAAyjD,EAGA,MAAAK,GAAAP,GAQA,QAAAO,GAAAC,GACA,GAAA9F,GAAA8F,EAAA7jD,MACA,IAAA+9C,GAAA+F,GACA,MAAA/xC,QAAAC,aAAAxS,MAAAuS,OAAA8xC,EAMA,KAFA,GAAAR,GAAA,GACAvjD,EAAA,EACAA,EAAAi+C,GACAsF,GAAAtxC,OAAAC,aAAAxS,MACAuS,OACA8xC,EAAAviD,MAAAxB,KAAAgkD,IAGA,OAAAT,GAGA,QAAA/B,GAAAU,EAAA91C,EAAAC,GACA,GAAAZ,GAAA,EACAY,GAAAnD,KAAAuK,IAAAyuC,EAAAhiD,OAAAmM,EAEA,QAAArM,GAAAoM,EAAqBpM,EAAAqM,IAASrM,EAC9ByL,GAAAwG,OAAAC,aAAA,IAAAgwC,EAAAliD,GAEA,OAAAyL,GAGA,QAAAg2C,GAAAS,EAAA91C,EAAAC,GACA,GAAAZ,GAAA,EACAY,GAAAnD,KAAAuK,IAAAyuC,EAAAhiD,OAAAmM,EAEA,QAAArM,GAAAoM,EAAqBpM,EAAAqM,IAASrM,EAC9ByL,GAAAwG,OAAAC,aAAAgwC,EAAAliD,GAEA,OAAAyL,GAGA,QAAA61C,GAAAY,EAAA91C,EAAAC,GACA,GAAA4xC,GAAAiE,EAAAhiD,SAEAkM,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAA4xC,KAAA5xC,EAAA4xC,EAGA,QADAgG,GAAA,GACAjkD,EAAAoM,EAAqBpM,EAAAqM,IAASrM,EAC9BikD,GAAAC,EAAAhC,EAAAliD,GAEA,OAAAikD,GAGA,QAAAtC,GAAAO,EAAA91C,EAAAC,GAGA,OAFA83C,GAAAjC,EAAA1gD,MAAA4K,EAAAC,GACAk3C,EAAA,GACAvjD,EAAA,EAAiBA,EAAAmkD,EAAAjkD,OAAkBF,GAAA,EACnCujD,GAAAtxC,OAAAC,aAAAiyC,EAAAnkD,GAAA,IAAAmkD,EAAAnkD,EAAA,GAEA,OAAAujD,GA0CA,QAAAa,GAAA1wC,EAAA2wC,EAAAnkD,GACA,GAAAwT,EAAA,OAAAA,EAAA,WAAAksC,YAAA,qBACA,IAAAlsC,EAAA2wC,EAAAnkD,EAAA,SAAA0/C,YAAA,yCA+JA,QAAA0E,GAAApC,EAAA1lD,EAAAkX,EAAA2wC,EAAAj5C,EAAAqI,GACA,IAAAsrC,EAAAC,SAAAkD,GAAA,SAAA7/C,WAAA,8CACA,IAAA7F,EAAA4O,GAAA5O,EAAAiX,EAAA,SAAAmsC,YAAA,oCACA,IAAAlsC,EAAA2wC,EAAAnC,EAAAhiD,OAAA,SAAA0/C,YAAA,sBAkDA,QAAA2E,GAAArC,EAAA1lD,EAAAkX,EAAA8wC,GACAhoD,EAAA,IAAAA,EAAA,MAAAA,EAAA,EACA,QAAAwD,GAAA,EAAAgY,EAAA9O,KAAAuK,IAAAyuC,EAAAhiD,OAAAwT,EAAA,GAAuD1T,EAAAgY,IAAOhY,EAC9DkiD,EAAAxuC,EAAA1T,IAAAxD,EAAA,QAAAgoD,EAAAxkD,EAAA,EAAAA,MACA,GAAAwkD,EAAAxkD,EAAA,EAAAA,GA8BA,QAAAykD,GAAAvC,EAAA1lD,EAAAkX,EAAA8wC,GACAhoD,EAAA,IAAAA,EAAA,WAAAA,EAAA,EACA,QAAAwD,GAAA,EAAAgY,EAAA9O,KAAAuK,IAAAyuC,EAAAhiD,OAAAwT,EAAA,GAAuD1T,EAAAgY,IAAOhY,EAC9DkiD,EAAAxuC,EAAA1T,GAAAxD,IAAA,GAAAgoD,EAAAxkD,EAAA,EAAAA,GAAA,IAmJA,QAAA0kD,GAAAxC,EAAA1lD,EAAAkX,EAAA2wC,EAAAj5C,EAAAqI,GACA,GAAAC,EAAA2wC,EAAAnC,EAAAhiD,OAAA,SAAA0/C,YAAA,qBACA,IAAAlsC,EAAA,WAAAksC,YAAA,sBAGA,QAAA+E,GAAAzC,EAAA1lD,EAAAkX,EAAA8wC,EAAAI,GAKA,MAJAA,IACAF,EAAAxC,EAAA1lD,EAAAkX,EAAA,gDAEAmxC,EAAAlE,MAAAuB,EAAA1lD,EAAAkX,EAAA8wC,EAAA,MACA9wC,EAAA,EAWA,QAAAoxC,GAAA5C,EAAA1lD,EAAAkX,EAAA8wC,EAAAI,GAKA,MAJAA,IACAF,EAAAxC,EAAA1lD,EAAAkX,EAAA,kDAEAmxC,EAAAlE,MAAAuB,EAAA1lD,EAAAkX,EAAA8wC,EAAA,MACA9wC,EAAA,EAgIA,QAAAqxC,GAAAh4C,GAIA,GAFAA,EAAAi4C,EAAAj4C,GAAAk4C,QAAAC,GAAA,IAEAn4C,EAAA7M,OAAA,UAEA,MAAA6M,EAAA7M,OAAA,OACA6M,GAAA,GAEA,OAAAA,GAGA,QAAAi4C,GAAAj4C,GACA,MAAAA,GAAAo4C,KAAAp4C,EAAAo4C,OACAp4C,EAAAk4C,QAAA,iBAGA,QAAAf,GAAA1rC,GACA,MAAAA,GAAA,OAAAA,EAAA7J,SAAA,IACA6J,EAAA7J,SAAA,IAGA,QAAAwyC,GAAAX,EAAA4E,GACAA,KAAAC,GAMA,QALAtuC,GACA7W,EAAAsgD,EAAAtgD,OACAolD,EAAA,KACAnB,KAEAnkD,EAAA,EAAiBA,EAAAE,IAAYF,EAAA,CAI7B,GAHA+W,EAAAypC,EAAAnuC,WAAArS,GAGA+W,EAAA,OAAAA,EAAA,OAEA,IAAAuuC,EAAA,CAEA,GAAAvuC,EAAA,QAEAquC,GAAA,OAAAjB,EAAAh4C,KAAA,YACA,UACS,GAAAnM,EAAA,IAAAE,EAAA,EAETklD,GAAA,OAAAjB,EAAAh4C,KAAA,YACA,UAIAm5C,EAAAvuC,CAEA,UAIA,GAAAA,EAAA,QACAquC,GAAA,OAAAjB,EAAAh4C,KAAA,aACAm5C,EAAAvuC,CACA,UAIAA,GAAAuuC,EAAA,UAAAvuC,EAAA,iBACKuuC,KAELF,GAAA,OAAAjB,EAAAh4C,KAAA,YAMA,IAHAm5C,EAAA,KAGAvuC,EAAA,KACA,IAAAquC,GAAA,UACAjB,GAAAh4C,KAAA4K,OACK,IAAAA,EAAA,MACL,IAAAquC,GAAA,UACAjB,GAAAh4C,KACA4K,GAAA,MACA,GAAAA,EAAA,SAEK,IAAAA,EAAA,OACL,IAAAquC,GAAA,UACAjB,GAAAh4C,KACA4K,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,SAAAlJ,OAAA,qBARA,KAAAu3C,GAAA,UACAjB,GAAAh4C,KACA4K,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,MAAAotC,GAGA,QAAAnB,GAAAj2C,GAEA,OADAw4C,MACAvlD,EAAA,EAAiBA,EAAA+M,EAAA7M,SAAgBF,EAEjCulD,EAAAp5C,KAAA,IAAAY,EAAAsF,WAAArS,GAEA,OAAAulD,GAGA,QAAAnC,GAAAr2C,EAAAq4C,GAGA,OAFAppD,GAAAwpD,EAAAC,EACAF,KACAvlD,EAAA,EAAiBA,EAAA+M,EAAA7M,WACjBklD,GAAA,QADiCplD,EAGjChE,EAAA+Q,EAAAsF,WAAArS,GACAwlD,EAAAxpD,GAAA,EACAypD,EAAAzpD,EAAA,IACAupD,EAAAp5C,KAAAs5C,GACAF,EAAAp5C,KAAAq5C,EAGA,OAAAD,GAGA,QAAAnE,GAAAr0C,GACA,MAAAs2C,GAAAqC,YAAAX,EAAAh4C,IAGA,QAAA+1C,GAAAz0C,EAAAs3C,EAAAjyC,EAAAxT,GACA,OAAAF,GAAA,EAAiBA,EAAAE,KACjBF,EAAA0T,GAAAiyC,EAAAzlD,QAAAF,GAAAqO,EAAAnO,UAD6BF,EAE7B2lD,EAAA3lD,EAAA0T,GAAArF,EAAArO,EAEA,OAAAA,GAGA,QAAA+gD,GAAA7C,GACA,MAAAA,OAjvDA,GAAAmF,GAAA5nD,EAAA,IACAopD,EAAAppD,EAAA,IACAg2C,EAAAh2C,EAAA,GAEAN,GAAA4jD,SACA5jD,EAAA6lD,aACA7lD,EAAAyqD,kBAAA,GA0BA7G,EAAAU,oBAAA5iD,SAAAsiD,EAAAM,oBACAN,EAAAM,oBACAL,IAKAjkD,EAAAqkD,eAkEAT,EAAA8G,SAAA,KAGA9G,EAAA+G,SAAA,SAAAvU,GAEA,MADAA,GAAA8N,UAAAN,EAAA1hD,UACAk0C,GA2BAwN,EAAApN,KAAA,SAAAn1C,EAAAsjD,EAAA5/C,GACA,MAAAyxC,GAAA,KAAAn1C,EAAAsjD,EAAA5/C,IAGA6+C,EAAAU,sBACAV,EAAA1hD,UAAAgiD,UAAAxpC,WAAAxY,UACA0hD,EAAAM,UAAAxpC,WACA,mBAAA9G,gBAAAg3C,SACAhH,EAAAhwC,OAAAg3C,WAAAhH,GAEAziD,OAAAC,eAAAwiD,EAAAhwC,OAAAg3C,SACAvpD,MAAA,KACAwpD,cAAA,KAiCAjH,EAAAsB,MAAA,SAAAD,EAAAxF,EAAA0F,GACA,MAAAD,GAAA,KAAAD,EAAAxF,EAAA0F,IAiBAvB,EAAAgB,YAAA,SAAAK,GACA,MAAAL,GAAA,KAAAK,IAKArB,EAAAkH,gBAAA,SAAA7F,GACA,MAAAL,GAAA,KAAAK,IAiHArB,EAAAC,SAAA,SAAAr7C,GACA,cAAAA,MAAAuiD,YAGAnH,EAAAoH,QAAA,SAAAziD,EAAAC,GACA,IAAAo7C,EAAAC,SAAAt7C,KAAAq7C,EAAAC,SAAAr7C,GACA,SAAAtB,WAAA,4BAGA,IAAAqB,IAAAC,EAAA,QAKA,QAHAH,GAAAE,EAAAxD,OACAqK,EAAA5G,EAAAzD,OAEAF,EAAA,EAAAi+C,EAAA/0C,KAAAuK,IAAAjQ,EAAA+G,GAAuCvK,EAAAi+C,IAASj+C,EAChD,GAAA0D,EAAA1D,KAAA2D,EAAA3D,GAAA,CACAwD,EAAAE,EAAA1D,GACAuK,EAAA5G,EAAA3D,EACA,OAIA,MAAAwD,GAAA+G,GAAA,EACAA,EAAA/G,EAAA,EACA,GAGAu7C,EAAA0B,WAAA,SAAAH,GACA,OAAAruC,OAAAquC,GAAA35C,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,QACA,SACA,WAIAo4C,EAAAxuC,OAAA,SAAA61C,EAAAlmD,GACA,IAAAuxC,EAAA2U,GACA,SAAA/jD,WAAA,8CAGA,QAAA+jD,EAAAlmD,OACA,MAAA6+C,GAAAsB,MAAA,EAGA,IAAArgD,EACA,IAAAnD,SAAAqD,EAEA,IADAA,EAAA,EACAF,EAAA,EAAeA,EAAAomD,EAAAlmD,SAAiBF,EAChCE,GAAAkmD,EAAApmD,GAAAE,MAIA,IAAAoW,GAAAyoC,EAAAgB,YAAA7/C,GACAmmD,EAAA,CACA,KAAArmD,EAAA,EAAaA,EAAAomD,EAAAlmD,SAAiBF,EAAA,CAC9B,GAAAkiD,GAAAkE,EAAApmD,EACA,KAAA++C,EAAAC,SAAAkD,GACA,SAAA7/C,WAAA,8CAEA6/C,GAAApB,KAAAxqC,EAAA+vC,GACAA,GAAAnE,EAAAhiD,OAEA,MAAAoW,IA8CAyoC,EAAAvoC,aA0EAuoC,EAAA1hD,UAAA6oD,WAAA,EAQAnH,EAAA1hD,UAAAipD,OAAA,WACA,GAAArI,GAAA1iD,KAAA2E,MACA,IAAA+9C,EAAA,MACA,SAAA2B,YAAA,4CAEA,QAAA5/C,GAAA,EAAiBA,EAAAi+C,EAASj+C,GAAA,EAC1B4hD,EAAArmD,KAAAyE,IAAA,EAEA,OAAAzE,OAGAwjD,EAAA1hD,UAAAkpD,OAAA,WACA,GAAAtI,GAAA1iD,KAAA2E,MACA,IAAA+9C,EAAA,MACA,SAAA2B,YAAA,4CAEA,QAAA5/C,GAAA,EAAiBA,EAAAi+C,EAASj+C,GAAA,EAC1B4hD,EAAArmD,KAAAyE,IAAA,GACA4hD,EAAArmD,KAAAyE,EAAA,EAAAA,EAAA,EAEA,OAAAzE,OAGAwjD,EAAA1hD,UAAAmpD,OAAA,WACA,GAAAvI,GAAA1iD,KAAA2E,MACA,IAAA+9C,EAAA,MACA,SAAA2B,YAAA,4CAEA,QAAA5/C,GAAA,EAAiBA,EAAAi+C,EAASj+C,GAAA,EAC1B4hD,EAAArmD,KAAAyE,IAAA,GACA4hD,EAAArmD,KAAAyE,EAAA,EAAAA,EAAA,GACA4hD,EAAArmD,KAAAyE,EAAA,EAAAA,EAAA,GACA4hD,EAAArmD,KAAAyE,EAAA,EAAAA,EAAA,EAEA,OAAAzE,OAGAwjD,EAAA1hD,UAAAsR,SAAA,WACA,GAAAzO,GAAA,EAAA3E,KAAA2E,MACA,YAAAA,EAAA,GACA,IAAAP,UAAAO,OAAAqhD,EAAAhmD,KAAA,EAAA2E,GACAmhD,EAAA3hD,MAAAnE,KAAAoE,YAGAo/C,EAAA1hD,UAAAopD,OAAA,SAAA9iD,GACA,IAAAo7C,EAAAC,SAAAr7C,GAAA,SAAAtB,WAAA,4BACA,OAAA9G,QAAAoI,GACA,IAAAo7C,EAAAoH,QAAA5qD,KAAAoI,IAGAo7C,EAAA1hD,UAAAqpD,QAAA,WACA,GAAA35C,GAAA,GACA3B,EAAAjQ,EAAAyqD,iBAKA,OAJArqD,MAAA2E,OAAA,IACA6M,EAAAxR,KAAAoT,SAAA,QAAAvD,GAAAu7C,MAAA,SAAkDz5C,KAAA,KAClD3R,KAAA2E,OAAAkL,IAAA2B,GAAA,UAEA,WAAAA,EAAA,KAGAgyC,EAAA1hD,UAAA8oD,QAAA,SAAAnI,EAAA5xC,EAAAC,EAAAu6C,EAAAC,GACA,IAAA9H,EAAAC,SAAAhB,GACA,SAAA37C,WAAA,4BAgBA,IAbAxF,SAAAuP,IACAA,EAAA,GAEAvP,SAAAwP,IACAA,EAAA2xC,IAAA99C,OAAA,GAEArD,SAAA+pD,IACAA,EAAA,GAEA/pD,SAAAgqD,IACAA,EAAAtrD,KAAA2E,QAGAkM,EAAA,GAAAC,EAAA2xC,EAAA99C,QAAA0mD,EAAA,GAAAC,EAAAtrD,KAAA2E,OACA,SAAA0/C,YAAA,qBAGA,IAAAgH,GAAAC,GAAAz6C,GAAAC,EACA,QAEA,IAAAu6C,GAAAC,EACA,QAEA,IAAAz6C,GAAAC,EACA,QAQA,IALAD,KAAA,EACAC,KAAA,EACAu6C,KAAA,EACAC,KAAA,EAEAtrD,OAAAyiD,EAAA,QASA,QAPAx6C,GAAAqjD,EAAAD,EACAr8C,EAAA8B,EAAAD,EACA6xC,EAAA/0C,KAAAuK,IAAAjQ,EAAA+G,GAEAu8C,EAAAvrD,KAAAiG,MAAAolD,EAAAC,GACAE,EAAA/I,EAAAx8C,MAAA4K,EAAAC,GAEArM,EAAA,EAAiBA,EAAAi+C,IAASj+C,EAC1B,GAAA8mD,EAAA9mD,KAAA+mD,EAAA/mD,GAAA,CACAwD,EAAAsjD,EAAA9mD,GACAuK,EAAAw8C,EAAA/mD,EACA,OAIA,MAAAwD,GAAA+G,GAAA,EACAA,EAAA/G,EAAA,EACA,GA6HAu7C,EAAA1hD,UAAA2pD,SAAA,SAAA9I,EAAA3nC,EAAA+pC,GACA,MAAA/kD,MAAA+F,QAAA48C,EAAA3nC,EAAA+pC,MAAA,GAGAvB,EAAA1hD,UAAAiE,QAAA,SAAA48C,EAAA3nC,EAAA+pC,GACA,MAAAuB,GAAAtmD,KAAA2iD,EAAA3nC,EAAA+pC,GAAA,IAGAvB,EAAA1hD,UAAA2kD,YAAA,SAAA9D,EAAA3nC,EAAA+pC,GACA,MAAAuB,GAAAtmD,KAAA2iD,EAAA3nC,EAAA+pC,GAAA,IAkDAvB,EAAA1hD,UAAAsjD,MAAA,SAAAH,EAAA9sC,EAAAxT,EAAAogD,GAEA,GAAAzjD,SAAA6W,EACA4sC,EAAA,OACApgD,EAAA3E,KAAA2E,OACAwT,EAAA,MAEG,IAAA7W,SAAAqD,GAAA,gBAAAwT,GACH4sC,EAAA5sC,EACAxT,EAAA3E,KAAA2E,OACAwT,EAAA,MAEG,KAAAuzC,SAAAvzC,GAWH,SAAA7F,OACA,0EAXA6F,IAAA,EACAuzC,SAAA/mD,IACAA,GAAA,EACArD,SAAAyjD,MAAA,UAEAA,EAAApgD,EACAA,EAAArD,QASA,GAAA6lD,GAAAnnD,KAAA2E,OAAAwT,CAGA,KAFA7W,SAAAqD,KAAAwiD,KAAAxiD,EAAAwiD,GAEAlC,EAAAtgD,OAAA,IAAAA,EAAA,GAAAwT,EAAA,IAAAA,EAAAnY,KAAA2E,OACA,SAAA0/C,YAAA,yCAGAU,OAAA,OAGA,KADA,GAAAY,IAAA,IAEA,OAAAZ,GACA,UACA,MAAAmC,GAAAlnD,KAAAilD,EAAA9sC,EAAAxT,EAEA,YACA,YACA,MAAA2iD,GAAAtnD,KAAAilD,EAAA9sC,EAAAxT,EAEA,aACA,MAAA6iD,GAAAxnD,KAAAilD,EAAA9sC,EAAAxT,EAEA,cACA,aACA,MAAA+iD,GAAA1nD,KAAAilD,EAAA9sC,EAAAxT,EAEA,cAEA,MAAAgjD,GAAA3nD,KAAAilD,EAAA9sC,EAAAxT,EAEA,YACA,YACA,cACA,eACA,MAAAijD,GAAA5nD,KAAAilD,EAAA9sC,EAAAxT,EAEA,SACA,GAAAghD,EAAA,SAAA7+C,WAAA,qBAAAi+C,EACAA,IAAA,GAAAA,GAAA35C,cACAu6C,GAAA,IAKAnC,EAAA1hD,UAAA0H,OAAA,WACA,OACA2B,KAAA,SACAvB,KAAAqsC,MAAAn0C,UAAAmE,MAAA1F,KAAAP,KAAA2rD,MAAA3rD,KAAA,IAwFA,IAAAyoD,IAAA,IA8DAjF,GAAA1hD,UAAAmE,MAAA,SAAA4K,EAAAC,GACA,GAAA4xC,GAAA1iD,KAAA2E,MACAkM,OACAC,EAAAxP,SAAAwP,EAAA4xC,IAAA5xC,EAEAD,EAAA,GACAA,GAAA6xC,EACA7xC,EAAA,IAAAA,EAAA,IACGA,EAAA6xC,IACH7xC,EAAA6xC,GAGA5xC,EAAA,GACAA,GAAA4xC,EACA5xC,EAAA,IAAAA,EAAA,IACGA,EAAA4xC,IACH5xC,EAAA4xC,GAGA5xC,EAAAD,IAAAC,EAAAD,EAEA,IAAA+6C,EACA,IAAApI,EAAAU,oBACA0H,EAAA5rD,KAAAgkD,SAAAnzC,EAAAC,GACA86C,EAAA9H,UAAAN,EAAA1hD,cACG,CACH,GAAA+pD,GAAA/6C,EAAAD,CACA+6C,GAAA,GAAApI,GAAAqI,EAAAvqD,OACA,QAAAmD,GAAA,EAAmBA,EAAAonD,IAAcpnD,EACjCmnD,EAAAnnD,GAAAzE,KAAAyE,EAAAoM,GAIA,MAAA+6C,IAWApI,EAAA1hD,UAAAgqD,WAAA,SAAA3zC,EAAA8C,EAAAouC,GACAlxC,GAAA,EACA8C,GAAA,EACAouC,GAAAR,EAAA1wC,EAAA8C,EAAAjb,KAAA2E,OAKA,KAHA,GAAAg+C,GAAA3iD,KAAAmY,GACA4zC,EAAA,EACAtnD,EAAA,IACAA,EAAAwW,IAAA8wC,GAAA,MACApJ,GAAA3iD,KAAAmY,EAAA1T,GAAAsnD,CAGA,OAAApJ,IAGAa,EAAA1hD,UAAAkqD,WAAA,SAAA7zC,EAAA8C,EAAAouC,GACAlxC,GAAA,EACA8C,GAAA,EACAouC,GACAR,EAAA1wC,EAAA8C,EAAAjb,KAAA2E,OAKA,KAFA,GAAAg+C,GAAA3iD,KAAAmY,IAAA8C,GACA8wC,EAAA,EACA9wC,EAAA,IAAA8wC,GAAA,MACApJ,GAAA3iD,KAAAmY,IAAA8C,GAAA8wC,CAGA,OAAApJ,IAGAa,EAAA1hD,UAAAmqD,UAAA,SAAA9zC,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA3E,KAAAmY,IAGAqrC,EAAA1hD,UAAAoqD,aAAA,SAAA/zC,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA3E,KAAAmY,GAAAnY,KAAAmY,EAAA,OAGAqrC,EAAA1hD,UAAA+kD,aAAA,SAAA1uC,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA3E,KAAAmY,IAAA,EAAAnY,KAAAmY,EAAA,IAGAqrC,EAAA1hD,UAAAqqD,aAAA,SAAAh0C,EAAAkxC,GAGA,MAFAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,SAEA3E,KAAAmY,GACAnY,KAAAmY,EAAA,MACAnY,KAAAmY,EAAA,QACA,SAAAnY,KAAAmY,EAAA,IAGAqrC,EAAA1hD,UAAAsqD,aAAA,SAAAj0C,EAAAkxC,GAGA,MAFAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QAEA,SAAA3E,KAAAmY,IACAnY,KAAAmY,EAAA,OACAnY,KAAAmY,EAAA,MACAnY,KAAAmY,EAAA,KAGAqrC,EAAA1hD,UAAAuqD,UAAA,SAAAl0C,EAAA8C,EAAAouC,GACAlxC,GAAA,EACA8C,GAAA,EACAouC,GAAAR,EAAA1wC,EAAA8C,EAAAjb,KAAA2E,OAKA,KAHA,GAAAg+C,GAAA3iD,KAAAmY,GACA4zC,EAAA,EACAtnD,EAAA,IACAA,EAAAwW,IAAA8wC,GAAA,MACApJ,GAAA3iD,KAAAmY,EAAA1T,GAAAsnD,CAMA,OAJAA,IAAA,IAEApJ,GAAAoJ,IAAApJ,GAAAh1C,KAAA2B,IAAA,IAAA2L,IAEA0nC,GAGAa,EAAA1hD,UAAAwqD,UAAA,SAAAn0C,EAAA8C,EAAAouC,GACAlxC,GAAA,EACA8C,GAAA,EACAouC,GAAAR,EAAA1wC,EAAA8C,EAAAjb,KAAA2E,OAKA,KAHA,GAAAF,GAAAwW,EACA8wC,EAAA,EACApJ,EAAA3iD,KAAAmY,IAAA1T,GACAA,EAAA,IAAAsnD,GAAA,MACApJ,GAAA3iD,KAAAmY,IAAA1T,GAAAsnD,CAMA,OAJAA,IAAA,IAEApJ,GAAAoJ,IAAApJ,GAAAh1C,KAAA2B,IAAA,IAAA2L,IAEA0nC,GAGAa,EAAA1hD,UAAAyqD,SAAA,SAAAp0C,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA,IAAA3E,KAAAmY,IACA,IAAAnY,KAAAmY,GAAA,MADAnY,KAAAmY,IAIAqrC,EAAA1hD,UAAA0qD,YAAA,SAAAr0C,EAAAkxC,GACAA,GAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,OACA,IAAAg+C,GAAA3iD,KAAAmY,GAAAnY,KAAAmY,EAAA,KACA,cAAAwqC,EAAA,WAAAA,KAGAa,EAAA1hD,UAAA2qD,YAAA,SAAAt0C,EAAAkxC,GACAA,GAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,OACA,IAAAg+C,GAAA3iD,KAAAmY,EAAA,GAAAnY,KAAAmY,IAAA,CACA,cAAAwqC,EAAA,WAAAA,KAGAa,EAAA1hD,UAAA4qD,YAAA,SAAAv0C,EAAAkxC,GAGA,MAFAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QAEA3E,KAAAmY,GACAnY,KAAAmY,EAAA,MACAnY,KAAAmY,EAAA,OACAnY,KAAAmY,EAAA,QAGAqrC,EAAA1hD,UAAA6qD,YAAA,SAAAx0C,EAAAkxC,GAGA,MAFAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QAEA3E,KAAAmY,IAAA,GACAnY,KAAAmY,EAAA,OACAnY,KAAAmY,EAAA,MACAnY,KAAAmY,EAAA,IAGAqrC,EAAA1hD,UAAA8qD,YAAA,SAAAz0C,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA2kD,EAAA5C,KAAA1mD,KAAAmY,GAAA,SAGAqrC,EAAA1hD,UAAA+qD,YAAA,SAAA10C,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA2kD,EAAA5C,KAAA1mD,KAAAmY,GAAA,SAGAqrC,EAAA1hD,UAAAgrD,aAAA,SAAA30C,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA2kD,EAAA5C,KAAA1mD,KAAAmY,GAAA,SAGAqrC,EAAA1hD,UAAAirD,aAAA,SAAA50C,EAAAkxC,GAEA,MADAA,IAAAR,EAAA1wC,EAAA,EAAAnY,KAAA2E,QACA2kD,EAAA5C,KAAA1mD,KAAAmY,GAAA,SASAqrC,EAAA1hD,UAAAkrD,YAAA,SAAA/rD,EAAAkX,EAAA8C,EAAAouC,GAIA,GAHApoD,KACAkX,GAAA,EACA8C,GAAA,GACAouC,EAAA,CACA,GAAA4D,GAAAt/C,KAAA2B,IAAA,IAAA2L,GAAA,CACA8tC,GAAA/oD,KAAAiB,EAAAkX,EAAA8C,EAAAgyC,EAAA,GAGA,GAAAlB,GAAA,EACAtnD,EAAA,CAEA,KADAzE,KAAAmY,GAAA,IAAAlX,IACAwD,EAAAwW,IAAA8wC,GAAA,MACA/rD,KAAAmY,EAAA1T,GAAAxD,EAAA8qD,EAAA,GAGA,OAAA5zC,GAAA8C,GAGAuoC,EAAA1hD,UAAAorD,YAAA,SAAAjsD,EAAAkX,EAAA8C,EAAAouC,GAIA,GAHApoD,KACAkX,GAAA,EACA8C,GAAA,GACAouC,EAAA,CACA,GAAA4D,GAAAt/C,KAAA2B,IAAA,IAAA2L,GAAA,CACA8tC,GAAA/oD,KAAAiB,EAAAkX,EAAA8C,EAAAgyC,EAAA,GAGA,GAAAxoD,GAAAwW,EAAA,EACA8wC,EAAA,CAEA,KADA/rD,KAAAmY,EAAA1T,GAAA,IAAAxD,IACAwD,GAAA,IAAAsnD,GAAA,MACA/rD,KAAAmY,EAAA1T,GAAAxD,EAAA8qD,EAAA,GAGA,OAAA5zC,GAAA8C,GAGAuoC,EAAA1hD,UAAAqrD,WAAA,SAAAlsD,EAAAkX,EAAAkxC,GAMA,MALApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,SACAqrC,EAAAU,sBAAAjjD,EAAA0M,KAAAqR,MAAA/d,IACAjB,KAAAmY,GAAA,IAAAlX,EACAkX,EAAA,GAWAqrC,EAAA1hD,UAAAsrD,cAAA,SAAAnsD,EAAAkX,EAAAkxC,GAUA,MATApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,WACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAA,IAAAlX,EACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GAEA+nD,EAAAhpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAAurD,cAAA,SAAApsD,EAAAkX,EAAAkxC,GAUA,MATApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,WACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAAlX,IAAA,EACAjB,KAAAmY,EAAA,OAAAlX,GAEA+nD,EAAAhpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAUAqrC,EAAA1hD,UAAAwrD,cAAA,SAAArsD,EAAAkX,EAAAkxC,GAYA,MAXApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,gBACAqrC,EAAAU,qBACAlkD,KAAAmY,EAAA,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,EACAjB,KAAAmY,GAAA,IAAAlX,GAEAioD,EAAAlpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAAyrD,cAAA,SAAAtsD,EAAAkX,EAAAkxC,GAYA,MAXApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,gBACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,EACAjB,KAAAmY,EAAA,OAAAlX,GAEAioD,EAAAlpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAA0rD,WAAA,SAAAvsD,EAAAkX,EAAA8C,EAAAouC,GAGA,GAFApoD,KACAkX,GAAA,GACAkxC,EAAA,CACA,GAAAoE,GAAA9/C,KAAA2B,IAAA,IAAA2L,EAAA,EAEA8tC,GAAA/oD,KAAAiB,EAAAkX,EAAA8C,EAAAwyC,EAAA,GAAAA,GAGA,GAAAhpD,GAAA,EACAsnD,EAAA,EACA2B,EAAA,CAEA,KADA1tD,KAAAmY,GAAA,IAAAlX,IACAwD,EAAAwW,IAAA8wC,GAAA,MACA9qD,EAAA,OAAAysD,GAAA,IAAA1tD,KAAAmY,EAAA1T,EAAA,KACAipD,EAAA,GAEA1tD,KAAAmY,EAAA1T,IAAAxD,EAAA8qD,GAAA,GAAA2B,EAAA,GAGA,OAAAv1C,GAAA8C,GAGAuoC,EAAA1hD,UAAA6rD,WAAA,SAAA1sD,EAAAkX,EAAA8C,EAAAouC,GAGA,GAFApoD,KACAkX,GAAA,GACAkxC,EAAA,CACA,GAAAoE,GAAA9/C,KAAA2B,IAAA,IAAA2L,EAAA,EAEA8tC,GAAA/oD,KAAAiB,EAAAkX,EAAA8C,EAAAwyC,EAAA,GAAAA,GAGA,GAAAhpD,GAAAwW,EAAA,EACA8wC,EAAA,EACA2B,EAAA,CAEA,KADA1tD,KAAAmY,EAAA1T,GAAA,IAAAxD,IACAwD,GAAA,IAAAsnD,GAAA,MACA9qD,EAAA,OAAAysD,GAAA,IAAA1tD,KAAAmY,EAAA1T,EAAA,KACAipD,EAAA,GAEA1tD,KAAAmY,EAAA1T,IAAAxD,EAAA8qD,GAAA,GAAA2B,EAAA,GAGA,OAAAv1C,GAAA8C,GAGAuoC,EAAA1hD,UAAA8rD,UAAA,SAAA3sD,EAAAkX,EAAAkxC,GAOA,MANApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,YACAqrC,EAAAU,sBAAAjjD,EAAA0M,KAAAqR,MAAA/d,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAjB,KAAAmY,GAAA,IAAAlX,EACAkX,EAAA,GAGAqrC,EAAA1hD,UAAA+rD,aAAA,SAAA5sD,EAAAkX,EAAAkxC,GAUA,MATApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,gBACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAA,IAAAlX,EACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GAEA+nD,EAAAhpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAAgsD,aAAA,SAAA7sD,EAAAkX,EAAAkxC,GAUA,MATApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,gBACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAAlX,IAAA,EACAjB,KAAAmY,EAAA,OAAAlX,GAEA+nD,EAAAhpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAAisD,aAAA,SAAA9sD,EAAAkX,EAAAkxC,GAYA,MAXApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,0BACAqrC,EAAAU,qBACAlkD,KAAAmY,GAAA,IAAAlX,EACAjB,KAAAmY,EAAA,GAAAlX,IAAA,EACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,IAEAioD,EAAAlpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAGAqrC,EAAA1hD,UAAAksD,aAAA,SAAA/sD,EAAAkX,EAAAkxC,GAaA,MAZApoD,MACAkX,GAAA,EACAkxC,GAAAN,EAAA/oD,KAAAiB,EAAAkX,EAAA,0BACAlX,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAuiD,EAAAU,qBACAlkD,KAAAmY,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,GACAjB,KAAAmY,EAAA,GAAAlX,IAAA,EACAjB,KAAAmY,EAAA,OAAAlX,GAEAioD,EAAAlpD,KAAAiB,EAAAkX,GAAA,GAEAA,EAAA,GAgBAqrC,EAAA1hD,UAAAmsD,aAAA,SAAAhtD,EAAAkX,EAAAkxC,GACA,MAAAD,GAAAppD,KAAAiB,EAAAkX,GAAA,EAAAkxC,IAGA7F,EAAA1hD,UAAAosD,aAAA,SAAAjtD,EAAAkX,EAAAkxC,GACA,MAAAD,GAAAppD,KAAAiB,EAAAkX,GAAA,EAAAkxC,IAWA7F,EAAA1hD,UAAAqsD,cAAA,SAAAltD,EAAAkX,EAAAkxC,GACA,MAAAE,GAAAvpD,KAAAiB,EAAAkX,GAAA,EAAAkxC,IAGA7F,EAAA1hD,UAAAssD,cAAA,SAAAntD,EAAAkX,EAAAkxC,GACA,MAAAE,GAAAvpD,KAAAiB,EAAAkX,GAAA,EAAAkxC,IAIA7F,EAAA1hD,UAAAyjD,KAAA,SAAA9C,EAAA4L,EAAAx9C,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAA9Q,KAAA2E,QACA0pD,GAAA5L,EAAA99C,SAAA0pD,EAAA5L,EAAA99C,QACA0pD,MAAA,GACAv9C,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,QACA,QAAA4xC,EAAA99C,QAAA,IAAA3E,KAAA2E,OAAA,QAGA,IAAA0pD,EAAA,EACA,SAAAhK,YAAA,4BAEA,IAAAxzC,EAAA,GAAAA,GAAA7Q,KAAA2E,OAAA,SAAA0/C,YAAA,4BACA,IAAAvzC,EAAA,WAAAuzC,YAAA,0BAGAvzC,GAAA9Q,KAAA2E,SAAAmM,EAAA9Q,KAAA2E,QACA89C,EAAA99C,OAAA0pD,EAAAv9C,EAAAD,IACAC,EAAA2xC,EAAA99C,OAAA0pD,EAAAx9C,EAGA,IACApM,GADAi+C,EAAA5xC,EAAAD,CAGA,IAAA7Q,OAAAyiD,GAAA5xC,EAAAw9C,KAAAv9C,EAEA,IAAArM,EAAAi+C,EAAA,EAAqBj+C,GAAA,IAAQA,EAC7Bg+C,EAAAh+C,EAAA4pD,GAAAruD,KAAAyE,EAAAoM,OAEG,IAAA6xC,EAAA,MAAAc,EAAAU,oBAEH,IAAAz/C,EAAA,EAAeA,EAAAi+C,IAASj+C,EACxBg+C,EAAAh+C,EAAA4pD,GAAAruD,KAAAyE,EAAAoM,OAGAyJ,YAAAxY,UAAAwsD,IAAA/tD,KACAkiD,EACAziD,KAAAgkD,SAAAnzC,IAAA6xC,GACA2L,EAIA,OAAA3L,IAOAc,EAAA1hD,UAAAu9C,KAAA,SAAAsD,EAAA9xC,EAAAC,EAAAi0C,GAEA,mBAAApC,GAAA,CASA,GARA,gBAAA9xC,IACAk0C,EAAAl0C,EACAA,EAAA,EACAC,EAAA9Q,KAAA2E,QACK,gBAAAmM,KACLi0C,EAAAj0C,EACAA,EAAA9Q,KAAA2E,QAEA,IAAAg+C,EAAAh+C,OAAA,CACA,GAAA4pD,GAAA5L,EAAA7rC,WAAA,EACAy3C,GAAA,MACA5L,EAAA4L,GAGA,GAAAjtD,SAAAyjD,GAAA,gBAAAA,GACA,SAAAj+C,WAAA,4BAEA,oBAAAi+C,KAAAvB,EAAA0B,WAAAH,GACA,SAAAj+C,WAAA,qBAAAi+C,OAEG,gBAAApC,KACHA,GAAA,IAIA,IAAA9xC,EAAA,GAAA7Q,KAAA2E,OAAAkM,GAAA7Q,KAAA2E,OAAAmM,EACA,SAAAuzC,YAAA,qBAGA,IAAAvzC,GAAAD,EACA,MAAA7Q,KAGA6Q,MAAA,EACAC,EAAAxP,SAAAwP,EAAA9Q,KAAA2E,OAAAmM,IAAA,EAEA6xC,MAAA,EAEA,IAAAl+C,EACA,oBAAAk+C,GACA,IAAAl+C,EAAAoM,EAAmBpM,EAAAqM,IAASrM,EAC5BzE,KAAAyE,GAAAk+C,MAEG,CACH,GAAAiG,GAAApF,EAAAC,SAAAd,GACAA,EACAiD,EAAA,GAAApC,GAAAb,EAAAoC,GAAA3xC,YACAsvC,EAAAkG,EAAAjkD,MACA,KAAAF,EAAA,EAAeA,EAAAqM,EAAAD,IAAiBpM,EAChCzE,KAAAyE,EAAAoM,GAAA+3C,EAAAnkD,EAAAi+C,GAIA,MAAA1iD,MAMA,IAAA2pD,IAAA,uB5D+nS8BppD,KAAKX,EAAU,WAAa,MAAOI,WAI3D,SAASH,EAAQD,G6DhvVvB,YAmBA,SAAA4uD,GAAAC,GACA,GAAA/L,GAAA+L,EAAA9pD,MACA,IAAA+9C,EAAA,IACA,SAAApwC,OAAA,iDAQA,aAAAm8C,EAAA/L,EAAA,WAAA+L,EAAA/L,EAAA,OAGA,QAAAznC,GAAAwzC,GAEA,SAAAA,EAAA9pD,OAAA,EAAA6pD,EAAAC,GAGA,QAAAtE,GAAAsE,GACA,GAAAhqD,GAAAgY,EAAAjM,EAAAk+C,EAAAC,EAAA3Y,EACA0M,EAAA+L,EAAA9pD,MACAgqD,GAAAH,EAAAC,GAEAzY,EAAA,GAAA4Y,GAAA,EAAAlM,EAAA,EAAAiM,GAGAn+C,EAAAm+C,EAAA,EAAAjM,EAAA,EAAAA,CAEA,IAAAmM,GAAA,CAEA,KAAApqD,EAAA,EAAAgY,EAAA,EAAoBhY,EAAA+L,EAAO/L,GAAA,EAAAgY,GAAA,EAC3BiyC,EAAAI,EAAAL,EAAA33C,WAAArS,KAAA,GAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,QAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,OAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,IACAuxC,EAAA6Y,KAAAH,GAAA,OACA1Y,EAAA6Y,KAAAH,GAAA,MACA1Y,EAAA6Y,KAAA,IAAAH,CAYA,OATA,KAAAC,GACAD,EAAAI,EAAAL,EAAA33C,WAAArS,KAAA,EAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,OACAuxC,EAAA6Y,KAAA,IAAAH,GACG,IAAAC,IACHD,EAAAI,EAAAL,EAAA33C,WAAArS,KAAA,GAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,OAAAqqD,EAAAL,EAAA33C,WAAArS,EAAA,OACAuxC,EAAA6Y,KAAAH,GAAA,MACA1Y,EAAA6Y,KAAA,IAAAH,GAGA1Y,EAGA,QAAA+Y,GAAAC,GACA,MAAAC,GAAAD,GAAA,OAAAC,EAAAD,GAAA,OAAAC,EAAAD,GAAA,MAAAC,EAAA,GAAAD,GAGA,QAAAE,GAAAC,EAAAt+C,EAAAC,GAGA,OAFA49C,GACAU,KACA3qD,EAAAoM,EAAqBpM,EAAAqM,EAASrM,GAAA,EAC9BiqD,GAAAS,EAAA1qD,IAAA,KAAA0qD,EAAA1qD,EAAA,OAAA0qD,EAAA1qD,EAAA,GACA2qD,EAAAx+C,KAAAm+C,EAAAL,GAEA,OAAAU,GAAAz9C,KAAA,IAGA,QAAAo2C,GAAAoH,GASA,OARAT,GACAhM,EAAAyM,EAAAxqD,OACA0qD,EAAA3M,EAAA,EACA0M,EAAA,GACAE,KACAC,EAAA,MAGA9qD,EAAA,EAAA+qD,EAAA9M,EAAA2M,EAA0C5qD,EAAA+qD,EAAU/qD,GAAA8qD,EACpDD,EAAA1+C,KAAAs+C,EAAAC,EAAA1qD,IAAA8qD,EAAAC,IAAA/qD,EAAA8qD,GAmBA,OAfA,KAAAF,GACAX,EAAAS,EAAAzM,EAAA,GACA0M,GAAAH,EAAAP,GAAA,GACAU,GAAAH,EAAAP,GAAA,MACAU,GAAA,MACG,IAAAC,IACHX,GAAAS,EAAAzM,EAAA,OAAAyM,EAAAzM,EAAA,GACA0M,GAAAH,EAAAP,GAAA,IACAU,GAAAH,EAAAP,GAAA,MACAU,GAAAH,EAAAP,GAAA,MACAU,GAAA,KAGAE,EAAA1+C,KAAAw+C,GAEAE,EAAA39C,KAAA,IA9GA/R,EAAAqb,aACArb,EAAAuqD,cACAvqD,EAAAmoD,eAOA,QALAkH,MACAH,KACAF,EAAA,mBAAAt0C,uBAAA27B,MAEAsY,EAAA,mEACA9pD,EAAA,EAAAi+C,EAAA6L,EAAA5pD,OAAkCF,EAAAi+C,IAASj+C,EAC3CwqD,EAAAxqD,GAAA8pD,EAAA9pD,GACAqqD,EAAAP,EAAAz3C,WAAArS,KAGAqqD,GAAA,IAAAh4C,WAAA,OACAg4C,EAAA,IAAAh4C,WAAA,Q7Du1VM,SAASjX,EAAQD,G8Dx2VvBA,EAAA8mD,KAAA,SAAA3rC,EAAA5C,EAAAs3C,EAAAC,EAAAh6C,GACA,GAAAxR,GAAA1D,EACAmvD,EAAA,EAAAj6C,EAAAg6C,EAAA,EACAE,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACArrD,EAAAgrD,EAAA/5C,EAAA,IACAqH,EAAA0yC,GAAA,IACAzyC,EAAAjC,EAAA5C,EAAA1T,EAOA,KALAA,GAAAsY,EAEA7Y,EAAA8Y,GAAA,IAAA8yC,GAAA,EACA9yC,KAAA8yC,EACAA,GAAAH,EACQG,EAAA,EAAW5rD,EAAA,IAAAA,EAAA6W,EAAA5C,EAAA1T,MAAAsY,EAAA+yC,GAAA,GAKnB,IAHAtvD,EAAA0D,GAAA,IAAA4rD,GAAA,EACA5rD,KAAA4rD,EACAA,GAAAJ,EACQI,EAAA,EAAWtvD,EAAA,IAAAA,EAAAua,EAAA5C,EAAA1T,MAAAsY,EAAA+yC,GAAA,GAEnB,OAAA5rD,EACAA,EAAA,EAAA2rD,MACG,IAAA3rD,IAAA0rD,EACH,MAAApvD,GAAAuvD,KAAA/yC,GAAA,MAAA8sC,IAEAtpD,IAAAmN,KAAA2B,IAAA,EAAAogD,GACAxrD,GAAA2rD,EAEA,OAAA7yC,GAAA,KAAAxc,EAAAmN,KAAA2B,IAAA,EAAApL,EAAAwrD,IAGA9vD,EAAAwlD,MAAA,SAAArqC,EAAA9Z,EAAAkX,EAAAs3C,EAAAC,EAAAh6C,GACA,GAAAxR,GAAA1D,EAAAC,EACAkvD,EAAA,EAAAj6C,EAAAg6C,EAAA,EACAE,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAI,EAAA,KAAAN,EAAA/hD,KAAA2B,IAAA,OAAA3B,KAAA2B,IAAA,SACA7K,EAAAgrD,EAAA,EAAA/5C,EAAA,EACAqH,EAAA0yC,EAAA,KACAzyC,EAAA/b,EAAA,OAAAA,GAAA,EAAAA,EAAA,KAmCA,KAjCAA,EAAA0M,KAAAwC,IAAAlP,GAEAsO,MAAAtO,QAAA6oD,KACAtpD,EAAA+O,MAAAtO,GAAA,IACAiD,EAAA0rD,IAEA1rD,EAAAyJ,KAAAqR,MAAArR,KAAA/K,IAAA3B,GAAA0M,KAAAsiD,KACAhvD,GAAAR,EAAAkN,KAAA2B,IAAA,GAAApL,IAAA,IACAA,IACAzD,GAAA,GAGAQ,GADAiD,EAAA2rD,GAAA,EACAG,EAAAvvD,EAEAuvD,EAAAriD,KAAA2B,IAAA,IAAAugD,GAEA5uD,EAAAR,GAAA,IACAyD,IACAzD,GAAA,GAGAyD,EAAA2rD,GAAAD,GACApvD,EAAA,EACA0D,EAAA0rD,GACK1rD,EAAA2rD,GAAA,GACLrvD,GAAAS,EAAAR,EAAA,GAAAkN,KAAA2B,IAAA,EAAAogD,GACAxrD,GAAA2rD,IAEArvD,EAAAS,EAAA0M,KAAA2B,IAAA,EAAAugD,EAAA,GAAAliD,KAAA2B,IAAA,EAAAogD,GACAxrD,EAAA,IAIQwrD,GAAA,EAAW30C,EAAA5C,EAAA1T,GAAA,IAAAjE,EAAAiE,GAAAsY,EAAAvc,GAAA,IAAAkvD,GAAA,GAInB,IAFAxrD,KAAAwrD,EAAAlvD,EACAmvD,GAAAD,EACQC,EAAA,EAAU50C,EAAA5C,EAAA1T,GAAA,IAAAP,EAAAO,GAAAsY,EAAA7Y,GAAA,IAAAyrD,GAAA,GAElB50C,EAAA5C,EAAA1T,EAAAsY,IAAA,IAAAC,I9Dg3VM,SAASnd,EAAQD,G+Dl8VvB,GAAAwT,MAAiBA,QAEjBvT,GAAAD,QAAAq2C,MAAAC,SAAA,SAAAF,GACA,wBAAA5iC,EAAA7S,KAAAy1C,K/D08VM,SAASn2C,EAAQD,GgEh8VvB,QAAA6jD,GAAA7iD,GACA,QAAAA,EAAA8S,aAAA,kBAAA9S,GAAA8S,YAAA+vC,UAAA7iD,EAAA8S,YAAA+vC,SAAA7iD,GAIA,QAAAsvD,GAAAtvD,GACA,wBAAAA,GAAAgsD,aAAA,kBAAAhsD,GAAAqF,OAAAw9C,EAAA7iD,EAAAqF,MAAA;;;;;;AAVApG,EAAAD,QAAA,SAAAgB,GACA,aAAAA,IAAA6iD,EAAA7iD,IAAAsvD,EAAAtvD,QAAA+pD,ahE89VM,SAAS9qD,EAAQD,EAASM,GAE/B,YAmDA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASe,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASuuD,GAAgB17C,EAAU27C,GAAe,KAAM37C,YAAoB27C,IAAgB,KAAM,IAAItpD,WAAU,qCiE7gWjH,QAASupD,GAAiBC,EAAYxnD,EAAS5B,EAAOoD,GACpD,GAAMimD,GAAkB,WACtB,QAAIjmD,EAAkByqC,0BACbzqC,EAAkByqC,yBAAyBC,kBAAoB9tC,EAAMO,WAAW9C,OAAS,EAKpG,OAAI4rD,MACFvuD,EAAAS,eAAOkH,MAAM,mBACN2mD,EAAW9kD,MAAM1C,EAAS5B,EAAOoD,IAEnCoB,QAAQC,QAAQzE,GASzB,QAASspD,GAA4BC,EAAUC,GAC7C,MAAOD,GAASH,YACZG,EAAS3nD,QAAQY,kBAAkBw3C,uBAAyB/3C,EAAArI,QAAoB6N,mBAAmB+hD,IACnGD,EAASH,WAAW7nD,UAAUotC,kBAAkB4V,SAAStiD,EAAArI,QAAoB6N,mBAAmB+hD,IAStG,QAASC,GAAWrT,EAAOsT,GAKzB,MAJA5uD,GAAAS,eAAOkH,MAAM,uBAAwB2zC,GAGrCsT,EAAWC,cAAc,GAAIC,aAAY,SAAWC,OAAQzT,KACrDA,EAUT,QAAS0T,GAAiBC,EAAW/pD,EAAOq1C,GAE1C,MADA0U,GAAUv/C,QAAQ,SAAA0jC,GAAA,MAAYA,GAAS70C,KAAKg8C,EAASr1C,KAC9CA,EAST,QAASgqD,GAAqBT,EAAUvpD,GAGtC,MAFAlF,GAAAS,eAAO0uD,KAAK,yBAA0BjqD,GACtCupD,EAASzP,SAASoQ,UAAUX,EAASY,gBAAiBnqD,EAAOupD,EAASxP,SAC/D+P,EAAiBP,EAASQ,UAAW/pD,EAAOupD,EAASG,YAS9D,QAASU,GAAsCb,EAAUvpD,GACvD,GAAMqqD,GAAcd,CACpB,OAAO,IAAI/kD,SAAQ,SAACC,GAElBtG,OAAOmsD,aAAaf,EAASgB,aAC7BF,EAAYE,YAAcpsD,OAAOqsD,WAAW,WAC1C/lD,EAAQulD,EAAqBK,EAAarqD,KACzCqqD,EAAYzoD,QAAQY,kBAAkB03C,2CAW7C,QAASuQ,GAAkBlB,EAAUmB,GAEnC,GAAMC,GAAsC,SAAC3qD,GAC3C,MAAIspD,GAA4BC,EAAUtnD,EAAArI,QAAoB6N,mBAAmBE,SAAW4hD,EAAS3nD,QAAQY,kBAAkB03C,wCAA0C,EAChKkQ,EAAsCb,EAAUvpD,GAElDgqD,EAAqBT,EAAUvpD,IAGlC4qD,EAAsB,SAACC,GAC3B/vD,EAAAS,eAAOkH,MAAM,uBAAwBooD,EACrC,IAAMzc,GAAWyc,CAIjB,IAHAzc,EAAS/uB,MAAQpd,EAAArI,QAAoBsN,WAAWG,8BAG3C+mC,EAASsB,eAAiB6Z,EAASvpD,MAAM0vC,cACzCtB,EAAS7tC,WAAW9C,SAAW8rD,EAASvpD,MAAMO,WAAW9C,QACzD2wC,EAASP,yBAAyBC,kBAAoByb,EAASvpD,MAAM6tC,yBAAyBE,qBAAuB,CACxHK,EAAS/uB,MAAQpd,EAAArI,QAAoBsN,WAAWM,gBAChD,IAAM6iD,GAAcd,CAEpB,OADAc,GAAYrqD,MAAQ8qD,EAASnZ,YAAY0Y,EAAYrqD,MAAOouC,GACrDuc,EAAoCN,EAAYrqD,OAEzD,MAAOouC,GAIT,OAAO+a,GAAiBI,EAASH,WAAYG,EAAS3nD,QAAS8oD,EAAkBnB,EAASnmD,mBACrFU,KAAK,SAAAinD,GAAA,MACIxB,GAASH,WAAWjmD,UAAUomD,EAAS3nD,QAASmpD,EAAcxB,EAASnmD,mBAClEU,KAAK8mD,GACLI,MAAM,SAAC5U,GACN,GAAMhI,GAAW2c,CAEjB3c,GAAS/uB,MAAQpd,EAAArI,QAAoBsN,WAAWK,kBAGhDyiD,EAAqBT,EAAUnb,GAC/BtzC,EAAAS,eAAO66C,MAAM,uCACbt7C,EAAAS,eAAO0uD,KAAK7T,EAAM6U,OAClBxB,EAAWrT,EAAOmT,EAASG,gBAG1CsB,MAAM,SAACE,GACNpwD,EAAAS,eAAO0uD,KAAK,oCAAqCiB,EAAeD,OAChExB,EAAWyB,EAAgB3B,EAASG,cAU5C,QAASyB,GAAyB5B,EAAUmB,GAC1C,GAAML,GAAcd,CACpB,OAAO,IAAI/kD,SAAQ,SAACC,GAElBtG,OAAOmsD,aAAaD,EAAYe,WAChCf,EAAYe,UAAYjtD,OAAOqsD,WAAW,WACxC/lD,EAAQgmD,EAAkBJ,EAAaK,KACtCL,EAAYzoD,QAAQY,kBAAkBy3C,iCAY7C,QAASoR,GAAgC9B,EAAUvpD,GACjD,MAAO,IAAIwE,SAAQ,SAACC,GAClBulD,EAAqBT,EAAUvpD,GAE7ByE,EADEqmD,EAAS1a,sBAAsBpwC,GAAOvC,OAAS,GAAK6rD,EAA4BC,EAAUtnD,EAAArI,QAAoB6N,mBAAmBC,cAC3HyjD,EAAyB5B,EAAUvpD,GAEnCA,KAUd,QAASsrD,GAAY/B,GACnB,GAAMnb,GAAWmb,EAASvpD,KAe1B,OAdAouC,GAAS/uB,MAAQpd,EAAArI,QAAoBsN,WAAWE,uBAEhDmkD,EAAgBC,UAAUjC,EAASkC,gBAAiBrd,GAC/CtqC,KAAK,SAAC4nD,GAEDpC,EAA4BC,EAAUtnD,EAAArI,QAAoB6N,mBAAmBE,QAC/E8iD,EAAkBlB,EAAUmC,GACnBpC,EAA4BC,EAAUtnD,EAAArI,QAAoB6N,mBAAmBC,cACtFyjD,EAAyB5B,EAAUmC,GAGnC5wD,EAAAS,eAAO66C,MAAM,6CAGdhI,EAQT,QAASud,GAAapC,GACpB,MAAOA,GAASzP,SAAS8R,OAAOrC,EAASY,gBAAiBZ,EAASvpD,MAAOupD,EAASxP,SAQrF,QAAS8R,GAAatC,GACpB,GAAMc,GAAcd,CACpB,OAAO,IAAI/kD,SAAQ,SAACC,GAElBtG,OAAOmsD,aAAaD,EAAYyB,OAChCzB,EAAYyB,MAAQ3tD,OAAOqsD,WAAW,WACpC/lD,EAAQknD,EAAatB,KACpB,MjE6vVNxwD,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQwB,SAAWE,MAEnB,IAAI2xD,GAAe,WAAc,QAASC,GAAiBzQ,EAAQ0Q,GAAS,IAAK,GAAI1uD,GAAI,EAAGA,EAAI0uD,EAAMxuD,OAAQF,IAAK,CAAE,GAAI2uD,GAAaD,EAAM1uD,EAAI2uD,GAAWrnD,WAAaqnD,EAAWrnD,aAAc,EAAOqnD,EAAW3I,cAAe,EAAU,SAAW2I,KAAYA,EAAWC,UAAW,GAAMtyD,OAAOC,eAAeyhD,EAAQ2Q,EAAWvxD,IAAKuxD,IAAiB,MAAO,UAAUhD,EAAakD,EAAYC,GAAiJ,MAA9HD,IAAYJ,EAAiB9C,EAAYtuD,UAAWwxD,GAAiBC,GAAaL,EAAiB9C,EAAamD,GAAqBnD,MiEj/VjiBpuD,EAAA9B,EAAA,GACAszD,EAAAtzD,EAAA,IAAYuzD,EjEs/Ve9xD,EAAwB6xD,GiEr/VnDhrD,EAAAtI,EAAA,IAAY2H,EjEy/ValG,EAAwB6G,GiEx/VjDkrD,EAAAxzD,EAAA,IAAYyzD,EjE4/VYhyD,EAAwB+xD,GiE3/VhD9d,EAAA11C,EAAA,IAAY8xD,EjE+/VIrwD,EAAwBi0C,GiE9/VxCge,EAAA1zD,EAAA,IAAY2zD,EjEkgWWlyD,EAAwBiyD,GiEjgW/CE,EAAA5zD,EAAA,IAAYuyD,EjEqgWW9wD,EAAwBmyD,GiEpgW/C5xD,EAAAhC,EAAA,GAAY6zD,EjEwgWMpyD,EAAwBO,GiEvgW1C8xD,EAAA9zD,EAAA,IAAY+zD,EjE2gWStyD,EAAwBqyD,GiE1gW7CtpD,EAAAxK,EAAA,IAAYg0D,EjE8gWavyD,EAAwB+I,GiE7gWjDuB,EAAA/L,EAAA,GjEihWKiJ,EAAwBxI,EAAuBsL,EA4OpCrM,GiEhhWHwB,SjEghWsB,WiExgWjC,QAAAA,GAAYm7C,EAASzzC,EAASqrD,EAAaC,GAAWjE,EAAAnwD,KAAAoB,GAKpDpB,KAAK4wD,WAAarU,EAClBv8C,KAAK4wD,WAAWyD,UAAUC,IAAI,gBAK9Bt0D,KAAKu0D,eAAiBd,EAAoBe,yBAAyBJ,GACnEp0D,KAAK8I,QAAUA,EACf9I,KAAKm0D,YAAcA,EAInBn0D,KAAK4wD,WAAW,2BAA6B5wD,KjEi4W9C,MArWAizD,GAAa7xD,IACXS,IAAK,UAOLZ,MAAO,SiE11VFyP,GACN1O,EAAAS,eAAOkH,MAAM,WAAY+G,GACzB1Q,KAAKkH,MAAQ8qD,EAASxa,kBAAkBx3C,KAAKkH,MAAOwJ,EAAO1Q,KAAKm0D,YAAY/U,aAC5Ep/C,KAAKghD,SAASyT,kBAAkBz0D,KAAKqxD,gBAAiBrxD,KAAKkH,MAAOlH,KAAKihD,YjEo2VtEp/C,IAAK,UACLZ,MAAO,SiE71VFyP,GACN1O,EAAAS,eAAOkH,MAAM,WAAY+G,GACzB1Q,KAAKkH,MAAQ8qD,EAASva,sBAAsBz3C,KAAKkH,MAAOwJ,GACxD1Q,KAAKghD,SAASyT,kBAAkBz0D,KAAKqxD,gBAAiBrxD,KAAKkH,MAAOlH,KAAKihD,YjEu2VtEp/C,IAAK,QACLZ,MAAO,SiEh2VJyP,GACJ1O,EAAAS,eAAOkH,MAAM,SAAU+G,GACvB1Q,KAAKkH,MAAQ8qD,EAASta,iBAAiB13C,KAAKkH,MAAOwJ,GACnD1Q,KAAKghD,SAASoQ,UAAUpxD,KAAKqxD,gBAAiBrxD,KAAKkH,MAAOlH,KAAKihD,SAC/DuR,EAAYxyD,SjEw2VX6B,IAAK,OACLZ,MAAO,WiEn2VH,GAAAyzD,GAAA10D,IACLgC,GAAAS,eAAOkH,MAAM,qBAAsB3J,KAAKkH,OACxCurD,EAAgBkC,KAAK30D,KAAK2yD,iBACrB3nD,KAAK,SAAA9D,GAAA,MAASqrD,KAAsCrrD,KACpD8D,KAAK,SAAC9D,GAEL,MADAwtD,GAAKxtD,MAAQ8qD,EAASrZ,WAAWzxC,GAC1BwtD,EAAKxtD,WjE82VjBrF,IAAK,OACLZ,MAAO,WiEx2VH,GAAA2zD,GAAA50D,IACLgC,GAAAS,eAAOkH,MAAM,qBAAsB3J,KAAKkH,OACxCurD,EAAgBoC,KAAK70D,KAAK2yD,iBACrB3nD,KAAK,SAAA9D,GAAA,MAASqrD,KAAsCrrD,KACpD8D,KAAK,SAAC9D,GAEL,MADA0tD,GAAK1tD,MAAQ8qD,EAASrZ,WAAWzxC,GAC1B0tD,EAAK1tD,WjEm3VjBrF,IAAK,QACLZ,MAAO,WiE72VF,GAAA6zD,GAAA90D,IACNgC,GAAAS,eAAOkH,MAAM,sBAAuB3J,KAAKkH,OACzClH,KAAKswD,WAAW9kD,MAAMxL,KAAK8I,QAAS9I,KAAKkH,MAAOlH,KAAKsK,mBAChDU,KAAK,SAAA9D,GAAA,MAASurD,GAAgBsC,MAAMD,EAAKnC,gBAAiBzrD,EAAO4tD,EAAKhsD,WACtEkC,KAAK,SAAA9D,GAAA,MAASqrD,KAAsCrrD,KACpD8D,KAAK,SAAC9D,GAEL,MADA4tD,GAAK5tD,MAAQ8qD,EAASrZ,WAAWzxC,GAC1B4tD,EAAK5tD,WjEy3VjBrF,IAAK,oBACLZ,MAAO,WiEl3VJjB,KAAKswD,YAAcnnD,EAAArI,QAAoB6N,mBAAmBG,SAAU9O,MAAKswD,WAAW7nD,UAAUotC,mBAChG8b,EAAkB3xD,KAAMA,KAAKkH,UjE43V9BrF,IAAK,SACLZ,MAAO,WiEr3VRe,EAAAS,eAAOkH,MAAM,qBACbopD,EAAa/yD,SjEy3VZ6B,IAAK,UACLysD,IAAK,SiE/oWIxlD,GAEV9I,KAAKg1D,aAAentD,EAAkBC,uBAAuBgB,GAC7D9I,KAAKi1D,SAAWj1D,KAAKo0D,UAAUc,uBAAuBl1D,KAAKo0D,UAAWp0D,KAAKg1D,cAM3Eh1D,KAAKkH,MAAQ8qD,EAAS3b,YAAYr2C,KAAKg1D,cAMvCh1D,KAAK2yD,gBAAkBkB,EAAgBsB,sBAAsBn1D,KAAKg1D,cAElEvC,EAAgBC,UAAU1yD,KAAK2yD,gBAAiB3yD,KAAKkH,OAChD8D,KAAK,SAAA9D,GAAA,MAASlF,GAAAS,eAAOkH,MAAM,6BAA8BzC,KAE9DgqD,EAAqBlxD,KAAMA,KAAKkH,QjEwpW/B8E,IAAK,WiEhpWN,MAAOhM,MAAKg1D,gBjE0pWXnzD,IAAK,cACLysD,IAAK,SiEppWQ6F,GAEdn0D,KAAKo1D,iBAAmBzB,EAAiB0B,qBAAqBlB,IjE4pW7DnoD,IAAK,WiEppWN,MAAOhM,MAAKo1D,oBjE8pWXvzD,IAAK,YACLmK,IAAK,WiEvpWN,MAAOhM,MAAKu0D,kBjEiqWX1yD,IAAK,WACLysD,IAAK,SiE3pWK2G,GAAU,GAAAK,GAAAt1D,IACjBi1D,KACEj1D,KAAKu1D,gBACPx0D,OAAO0Q,KAAKzR,KAAKu1D,gBAAgB7jD,QAAQ,SAAAvG,GAAA,MAAQmqD,GAAK1E,WAAW4E,oBAAoBrqD,EAAMmqD,EAAKC,eAAepqD,IAAO,KAGxHnL,KAAKy1D,cAAgBR,EACrBj1D,KAAKswD,WAAatwD,KAAKy1D,cAAcnF,WACrCtwD,KAAKghD,SAAWhhD,KAAKy1D,cAAczU,SAKnChhD,KAAKu1D,eAAiBv1D,KAAK01D,QAAQC,aAAa31D,KAAMA,KAAK4wD,cjEyqW5D5kD,IAAK,WiEhqWN,MAAOhM,MAAKy1D,iBjE2qWX5zD,IAAK,aACLysD,IAAK,SiEpqWOgC,GACTA,IACEtwD,KAAK41D,iBACP51D,KAAK41D,gBAAgBhqD,MAAM5L,KAAK8I,QAAS9I,KAAKkH,MAAOlH,KAAKsK,mBACrDU,KAAK,iBAAMhJ,GAAAS,eAAO0uD,KAAK,uBAG9BnxD,KAAK41D,gBAAkBtF,EACnBtwD,KAAK41D,kBAKP51D,KAAKsK,kBAAoB4pD,EAAkBtf,+BAC3C50C,KAAK41D,gBAAgB/pD,KAAK7L,KAAK8I,QAAS9I,KAAKkH,MAAOlH,KAAKsK,mBACpDU,KAAK,iBAAMhJ,GAAAS,eAAO0uD,KAAK,+BjEgrW/BnlD,IAAK,WiEtqWN,MAAOhM,MAAK41D,mBjEirWX/zD,IAAK,WACLysD,IAAK,SiE1qWKtN,GACX,GAAIA,EAAU,CACZ,GAAIhhD,KAAK61D,cACP,KAAO71D,KAAK4wD,WAAWkF,iBACrB91D,KAAK4wD,WAAWmF,YAAY/1D,KAAK4wD,WAAWoF,WAIhDh2D,MAAK61D,cAAgB7U,EACjBhhD,KAAK61D,gBAKP71D,KAAKqxD,gBAAkBrxD,KAAK61D,cAAcI,mBAAmBj2D,KAAK4wD,ejEorWrE5kD,IAAK,WiE1qWN,MAAOhM,MAAK61D,iBjEorWXh0D,IAAK,UACLmK,IAAK,WiE7qWN,MAAOhM,MAAKi1D,SAAWj1D,KAAKi1D,SAASS,QAAUp0D,UjEurW9CO,IAAK,UACLmK,IAAK,WiEhrWN,MAAOhM,MAAKi1D,SAAWj1D,KAAKi1D,SAAShU,QAAU3/C,UjE0rW9CO,IAAK,YACLmK,IAAK,WiEnrWN,MAAOhM,MAAKi1D,SAAWj1D,KAAKi1D,SAAShE,UAAY3vD,UjE6rWhDO,IAAK,MACLmK,IAAK,WiEtrWN,MAAOioD,GAAciC,SAASl2D,KAAKkH,MAAOlH,KAAKihD,YjEgsW9Cp/C,IAAK,QACLmK,IAAK,WiEzrWN,MAAO+nD,GAAW9sD,aAAajH,KAAKkH,WjE8rW9B9F,MAKJ,SAASvB,EAAQD,EAASM,GAE/B,YAoDA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASe,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EkE5oX5P,QAAS4yD,GAAyBJ,GACvC,MAAIA,IAEAsB,QAAStB,EAAUsB,SAAWS,EAAiBT,QAC/CU,aAAchC,EAAUgC,cAAgBD,EAAiBC,aACzDC,YAAajC,EAAUiC,aAAeF,EAAiBE,YACvDC,eAAgBlC,EAAUkC,gBAAkBH,EAAiBG,eAC7DrF,UAAWmD,EAAUnD,WAAakF,EAAiBlF,UACnDiE,uBAAwBd,EAAUc,wBAA0BiB,EAAiBjB,wBAG1EiB,ElE6kXRp1D,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQu2D,iBAAmB70D,OAC3B1B,EkE5lXe40D,0BAlEhB,IAAA+B,GAAAr2D,EAAA,IAAYs2D,ElEkqXe70D,EAAwB40D,GkEjqXnDE,EAAAv2D,EAAA,IAAYw2D,ElEqqXU/0D,EAAwB80D,GkEpqX9CE,EAAAz2D,EAAA,IAAY02D,ElEwqXkBj1D,EAAwBg1D,GkEvqXtDpuD,EAAArI,EAAA,GAAYyH,ElE2qXmBhG,EAAwB4G,GkE1qXvDsuD,EAAA32D,EAAA,IAAY42D,ElE8qXmBn1D,EAAwBk1D,GkE7qXvDE,EAAA72D,EAAA,IAAY82D,ElEirXuBr1D,EAAwBo1D,GkEhrX3DE,EAAA/2D,EAAA,IAAYg3D,ElEorXoBv1D,EAAwBs1D,GkEnrXxDE,EAAAj3D,EAAA,IAAYk3D,ElEurXoBz1D,EAAwBw1D,GkEtrXxDE,EAAAn3D,EAAA,IAAYo3D,ElE0rXiB31D,EAAwB01D,GkEzrXrDE,EAAAr3D,EAAA,IAAYs3D,ElE6rXiB71D,EAAwB41D,GkE5rXrDE,EAAAv3D,EAAA,IlEgsXKw3D,EAAkB/2D,EAAuB82D,GkErqXjCtB,sBACXT,QAASc,EACTH,aAAcO,GACdR,cAAeM,GACfJ,gBAAiB3uD,EAAyBmvD,EAAyBE,EAA6BE,EAA0BE,EAA0BI,EAAuBF,GAC3KrG,WAAWyG,EAAA52D,SACXo0D,uBAAwB,SAACd,EAAWtrD,GAClC,GAAMmsD,KAaN,OAZAA,GAASS,QAAUtB,EAAUsB,QACzB5sD,IACFmsD,EAAShU,QAAUmT,EAAUiC,YAAYsB,KAAK,SAAAC,GAAA,MACCA,GAAKnvD,UAAU0C,OAASrC,EAAQi4C,gBAAgBC,UAChD4W,EAAKnvD,UAAU1D,OAAS+D,EAAQi4C,gBAAgBE,UAC/FgU,EAASjU,SAAWoT,EAAUgC,aAAauB,KAAK,SAAAC,GAAA,MAAQA,GAAKnvD,UAAU0C,OAASrC,EAAQi4C,gBAAgBC,WACxGiU,EAAS3E,WAAa8D,EAAUkC,eAAeqB,KAAK,SAAAC,GAAA,MACCA,GAAKnvD,UAAU0C,OAASrC,EAAQY,kBAAkByB,MAClDysD,EAAKnvD,UAAU8D,WAAazD,EAAQY,kBAAkB6C,UACtDqrD,EAAKnvD,UAAUiE,aAAe5D,EAAQY,kBAAkBgD,cAE/GuoD,EAAShE,UAAYmD,EAAUnD,UACxBgE,KlE8tXL,SAASp1D,EAAQD,EAASM,GAE/B,YmEzwXD,SAAS23D,GAAgBC,GACvBA,EAAMC,iBACND,EAAMD,kBAIR,QAASG,GAAWC,EAAUC,GAC5B,GAAIA,GAAuD,IAA5BA,EAA+B,CAC5D,GAAIC,SAMJ,OAJEA,GADED,EAA0B,GACXE,EAAoB,IAEpBA,EAAoBF,GAEhCvqD,KAAKkZ,MAAMoxC,EAAWE,GAAkBA,EAEjD,MAAOF,GAGT,QAASI,GAAaP,EAAOlH,EAAY9nD,GACvC,GAAIwvD,GAAWR,CACXQ,GAASC,iBACXD,EAAWA,EAASC,eAAe,GAErC,IAAMC,GAAO5H,EAAW6H,uBACxB,QACExwD,EAAG+vD,EAAWM,EAASI,QAAUF,EAAKG,KAAO/H,EAAWgI,WAAY9vD,EAAQY,kBAAkB63C,kBAC9FvyC,EAAGgpD,EAAWM,EAASO,QAAUL,EAAK/c,IAAMmV,EAAWkI,UAAWhwD,EAAQY,kBAAkB63C,kBAC5FhxC,EAAGynD,EAAWM,EAASS,UAAWjwD,EAAQY,kBAAkB83C,0BAkBzD,QAASmU,GAAalF,EAAUlU,GAGrC,QAASyc,GAAcC,GAGrB,MAFAj3D,GAAAU,cAAOiH,MAASsvD,EAAI9tD,KAApB,SAAkC8tD,EAAIC,WACtCrB,EAAgBoB,IACT,EAGT,QAASE,GAAeF,GAYtB,MAXAj3D,GAAAU,cAAOiH,MAASsvD,EAAI9tD,KAApB,SAAkC8tD,EAAIC,WAClCl5D,KAAKo5D,iBACPp3D,EAAAU,cAAOiH,MAAM,8DACT3J,KAAKo5D,kBAAoBH,EAAIC,WAC/Bl3D,EAAAU,cAAO46C,MAAM,wDAGft9C,KAAKo5D,gBAAkBH,EAAIC,UAC3BrB,EAAgBoB,GAChBxI,EAAS4I,QAAQhB,EAAaY,EAAK1c,EAASkU,EAAS3nD,YAEhD,EAGT,QAASwwD,GAAeL,GAStB,MARAj3D,GAAAU,cAAOiH,MAASsvD,EAAI9tD,KAApB,SAAkC8tD,EAAIC,WAElCl5D,KAAKo5D,iBAAmBp5D,KAAKo5D,kBAAoBH,EAAIC,WACvDrB,EAAgBoB,GAChBxI,EAAS8I,QAAQlB,EAAaY,EAAK1c,EAASkU,EAAS3nD,WAErD9G,EAAAU,cAAOiH,MAAP,0CAAuDsvD,EAAIC,UAA3D,mBAAuFl5D,KAAKo5D,kBAEvF,EAGT,QAASI,GAAaP,GAUpB,MATAj3D,GAAAU,cAAOiH,MAASsvD,EAAI9tD,KAApB,SAAkC8tD,EAAIC,WAElCl5D,KAAKo5D,iBAAmBp5D,KAAKo5D,kBAAoBH,EAAIC,WACvDl5D,KAAKo5D,gBAAkB93D,OACvBu2D,EAAgBoB,GAChBxI,EAASgJ,MAAMpB,EAAaY,EAAK1c,EAASkU,EAAS3nD,WAEnD9G,EAAAU,cAAOiH,MAAP,wCAAqDsvD,EAAIC,UAAzD,mBAAqFl5D,KAAKo5D,kBAErF,EA7CTp3D,EAAAU,cAAOiH,MAAM,mBAgDb,IAAM+vD,KAiBN,QAfC,cAAe,eAAehoD,QAAQ,SAACvG,GACtCuuD,EAAOvuD,GAAQ6tD,KAEhB,eAAetnD,QAAQ,SAACvG,GACvBuuD,EAAOvuD,GAAQguD,KAEhB,eAAeznD,QAAQ,SAACvG,GACvBuuD,EAAOvuD,GAAQmuD,KAEhB,YAAa,aAAc,eAAgB,iBAAiB5nD,QAAQ,SAACvG,GACpEuuD,EAAOvuD,GAAQquD,IAGjBz4D,OAAO0Q,KAAKioD,GAAQhoD,QAAQ,SAAAvG,GAAA,MAAQoxC,GAAQod,iBAAiBxuD,EAAMuuD,EAAOvuD,IAAO,KAE1EuuD,EnE2pXR34D,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EmEhuXe+1D,cA9DhB,IAAA3zD,GAAA9B,EAAA,GAqBMk4D,GAAuB,EAAG,GAAI,IAAK,IAAM,IAAO,IAAQ,IAAS,IAAU,IAAW,MnEq5XtF,SAASv4D,EAAQD,EAASM,GAE/B,YAyBA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASm0C,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvxC,GAAI,EAAG0xC,EAAOF,MAAMD,EAAIrxC,QAASF,EAAIuxC,EAAIrxC,OAAQF,IAAO0xC,EAAK1xC,GAAKuxC,EAAIvxC,EAAM,OAAO0xC,GAAe,MAAOF,OAAMG,KAAKJ,GoEx6XpL,QAASvtC,KACd,OACE0C,KAAM,UAIV,QAASyuD,GAAc9c,GACrB,GAAIA,EAAQ,CACV,GAAMH,GAAUG,EAAO+c,WAAW,MAG5BC,EAAmBz0D,OAAOy0D,kBAAoB,EAC9CC,EAAoBpd,EAAQqd,8BAC9Brd,EAAQsd,2BACRtd,EAAQud,0BACRvd,EAAQwd,yBACRxd,EAAQyd,wBAA0B,CACtC,OAAON,GAAmBC,EAE5B,MAAO,GAGT,QAASM,GAAiB9d,GAGxB,GAAM+d,GAAa70D,SAASy2C,cAAc,UACpCqe,EAAcX,EAAcU,EAElC,OAAOC,GAGT,QAASC,GAAaje,EAASpxC,GAE7B,GAAM6wC,GAAkBv2C,SAClBq3C,EAASd,EAAgBE,cAAc,SAO7C,OANAl6C,GAAAQ,eAAOmH,MAAM4yC,EAAQke,aACrB3d,EAAOuX,UAAUC,IAAInpD,GACrB2xC,EAAOuX,UAAUC,IAAI,aACrBxX,EAAOV,MAAMpsC,MAAQusC,EAAQke,YAAc,KAC3C3d,EAAOV,MAAMzB,OAAS4B,EAAQme,aAAe,KAC7Cne,EAAQC,YAAYM,GACbA,EAGT,QAAS6d,GAAa7d,EAAQ8d,GAC5B,GAAMhK,GAAa9T,EAAO+d,UAC1B74D,GAAAQ,eAAOmH,MAAP,uBAAoCmzC,EAAOz8C,GAA3C,OAAoDuwD,EAAWvwD,IAE/Dy8C,EAAO9sC,MAAQ4gD,EAAW6J,YAAcG,EACxC9d,EAAOnC,OAASiW,EAAW8J,aAAeE,EAC1C9d,EAAOV,MAAMpsC,MAAW4gD,EAAW6J,YAAnC,KACA3d,EAAOV,MAAMzB,OAAYiW,EAAW8J,aAApC,KAEA5d,EAAO+c,WAAW,MAAMiB,MAAMF,EAAYA,GAQrC,QAAS3E,GAAmB1Z,GACjCv6C,EAAAQ,eAAOmH,MAAP,8CAA2D4yC,EAAQl8C,GACnE,IAAMu6D,GAAaP,EAAiB9d,IACpC,EAAAX,EAAAU,qBAAoBC,EAEpB,IAAMwe,GAAkBP,EAAaje,EAAS,sBAC9Coe,GAAaI,EAAiBH,EAC9B,IAAMI,GAAkBR,EAAaje,EAAS,oBAG9C,OAFAoe,GAAaK,EAAiBJ,IAG5BA,aACAG,kBACAE,uBAAwBF,EAAgBlB,WAAW,MACnDmB,kBACAE,uBAAwBF,EAAgBnB,WAAW,OAWhD,QAAS/G,GAAOnW,EAASz1C,EAAO+5C,GAGrC,MAFA0Z,GAAahe,EAAQoe,gBAAiBpe,EAAQie,YAC9CD,EAAahe,EAAQqe,gBAAiBre,EAAQie,YACvC56D,KAAKoxD,UAAUzU,EAASz1C,EAAO+5C,GAGxC,QAASka,GAAWxe,EAASvF,EAAQ6J,GACnC,GAAM91C,GAAOisC,EAAO6I,YAAc7I,EAAO6I,YAAc7I,EAAOjsC,IAC9DnJ,GAAAQ,eAAOmH,MAAP,sBAAmCwB,EAAnC,WACa,WAATA,GACF,EAAAiwD,EAAAC,YAAW1e,EAASvF,EAAQ6J,GACnBqa,EAAAC,YAAYpwD,IACrB,EAAAmwD,EAAAE,gBAAe7e,EAASvF,GACf2F,EAAAmD,aAAa/0C,IACtB,EAAA4xC,EAAAgD,iBAAgBpD,EAASvF,GAChBwE,EAAAyB,aAAalyC,IACtB,EAAAywC,EAAAwB,iBAAgBT,EAASvF,GAEzBp1C,EAAAQ,eAAOi5D,KAAP,sBAAkCtwD,EAAlC,WAWG,QAASspD,GAAkB9X,EAASz1C,EAAO+5C,GAKhD,MAHAtE,GAAQue,uBAAuBQ,UAAU,EAAG,EAAG/e,EAAQqe,gBAAgBhrD,MAAO2sC,EAAQqe,gBAAgBrgB,QACtG34C,EAAAQ,eAAOmH,MAAM,0BAA2BzC,EAAMovC,gBAC9C,EAAA8kB,EAAAC,YAAW1e,EAAQue,uBAAwBh0D,EAAMovC,cAAe2K,GACzD/5C,EAUF,QAASkqD,GAAUzU,EAASz1C,EAAO+5C,GACxCtE,EAAQse,uBAAuBS,UAAU,EAAG,EAAG/e,EAAQoe,gBAAgB/qD,MAAO2sC,EAAQoe,gBAAgBpgB,OAEtG,IAAMK,eAAc9zC,EAAMsvC,gBAU1B,OARItvC,GAAMyvC,mBACRqE,EAAQpqC,KAARzM,MAAA62C,EAAAjF,EAAgB7uC,EAAMyvC,oBACtBqE,EAAQpqC,KAARzM,MAAA62C,EAAAjF,EAAgBic,EAAS1a,sBAAsBpwC,MAE/C8zC,EAAQpqC,KAARzM,MAAA62C,EAAAjF,EAAgB7uC,EAAMO,aAExBuzC,EAAQtpC,QAAQ,SAAA0lC,GAAA,MAAU+jB,GAAWxe,EAAQse,uBAAwB7jB,EAAQ6J,KAC7EtE,EAAQue,uBAAuBQ,UAAU,EAAG,EAAG/e,EAAQqe,gBAAgBhrD,MAAO2sC,EAAQqe,gBAAgBrgB,QAC/FzzC,EpE+vXRnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EoEl5Xe6I,UpEm5Xf7I,EoEt1Xeq2D,qBpEu1Xfr2D,EoE7zXekzD,SpE8zXflzD,EoEjyXe60D,oBpEkyXf70D,EoEnxXewxD,WAlKhB,IAAApvD,GAAA9B,EAAA,GACAk7D,EAAAl7D,EAAA,IACAo7D,EAAAp7D,EAAA,IACA68C,EAAA78C,EAAA,IACA07C,EAAA17C,EAAA,IAKA01C,EAAA11C,EAAA,IAAY8xD,EpE07XIrwD,EAAwBi0C,IA6KlC,SAAS/1C,EAAQD,GAEtB,YqE5mYM,SAASy7D,GAAW1e,EAAS30C,EAAQi5C,GACtCA,GACFA,EAAQoa,WAAW1e,EAAS30C,GrE4mY/BjH,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EqEjnYey7D,crEgoYV,SAASx7D,EAAQD,EAASM,GAE/B,YsE3nYD,SAASy7D,GAAchf,EAASif,EAAWC,EAAOjyD,GAChD,GAAMqG,GAAQrG,EAAKoG,MAAQ6rD,EAAMl3D,OAC3Bi4C,GACJ30C,EAAG2B,EAAK8wC,aAAazyC,EAAK2zD,EAAUhyD,KAAKkyD,eAAiB7rD,EAC1DjB,EAAGpF,EAAK8wC,aAAa1rC,EAAIpF,EAAK+wC,QAE1BkC,GACJ50C,EAAG2B,EAAK8wC,aAAazyC,EAAK2zD,EAAUhyD,KAAKmyD,cAAgB9rD,EACzDjB,EAAGpF,EAAK8wC,aAAa1rC,EAAIpF,EAAK+wC,SAEhC,EAAAoC,EAAAC,UAASL,EAASC,EAAIC,GAGxB,QAASmf,GAASrf,EAASkf,EAAOjyD,GAChC,GAAMs1C,GAAmBvC,CACzBuC,GAAiBR,MACjB,KACEQ,EAAiB+c,KAAOryD,EAAKsyD,WAAa,WAC1Chd,EAAiBid,UAAwC,WAA3BvyD,EAAKwyD,kBAAkC,SAAW,OAChFld,EAAiBmd,aAAe,SAChCnd,EAAiBC,UAAYD,EAAiBE,YAC9CF,EAAiBod,SAAST,EAAOjyD,EAAK8wC,aAAazyC,EAAI2B,EAAK8wC,aAAa1rC,EAAIpF,EAAK+wC,QALpF,QAOEuE,EAAiBJ,WAIrB,QAASyd,GAAa5f,EAASlC,GAC7BuhB,EAASrf,EAASlC,EAASohB,MAAOphB,EAAS7wC,MAC3C6wC,EAAS+hB,cAAc9qD,QAAQ,SAACkqD,GAC9BD,EAAchf,EAASif,EAAWnhB,EAASohB,MAAOphB,EAAS7wC,QASxD,QAAS4xD,GAAe7e,EAASvF,GACtCp1C,EAAAQ,eAAOmH,MAAP,QAAqBytC,EAAOjsC,KAA5B,UACA,IAAM+zC,GAAmBvC,CACzBuC,GAAiBR,MACjB,KAIE,GAHAQ,EAAiBc,UAAY5I,EAAOpnC,MACpCkvC,EAAiBE,YAAchI,EAAOpmC,MAElComC,EAAO6I,YACT,OAAQ7I,EAAO6I,aACb,IAAKsb,GAAY9gB,SACf8hB,EAAard,EAAkB9H,EAC/B,MACF,SACEp1C,EAAAQ,eAAO86C,MAASlG,EAAO6I,YAAvB,wBAIJ,QAAQ7I,EAAOjsC,MACb,IAAKowD,GAAY9gB,SACf8hB,EAAard,EAAkB9H,EAC/B,MACF,SACEp1C,EAAAQ,eAAO86C,MAASlG,EAAOjsC,KAAvB,qBAnBR,QAuBE+zC,EAAiBJ,WtE2jYpB/9C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQ27D,YAAcj6D,OACtB1B,EsE1lYe47D,gBApDhB,IAAAx5D,GAAA9B,EAAA,GACA68C,EAAA78C,EAAA,IAKaq7D,iBACXkB,eAAgB,iBAChBC,KAAM,OACNzX,OAAQ,SACRxK,SAAU,atE4tYN,SAAS56C,EAAQD,EAASM,GAE/B,YAcA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EuEjuY5P,QAAS6G,KACd,OACE0C,KAAM,SACNpG,KAAM,aAIV,QAAS43D,GAAUhgB,EAASpC,EAAQqiB,GAClCjgB,EAAQkgB,IAAItiB,EAAOtyC,EAAGsyC,EAAOvrC,EAAG4tD,EAAQ,EAAa,EAAVjvD,KAAK2wC,IAAQ,GAG1D,QAASwe,GAAWngB,EAASogB,EAAOjsD,EAAKd,GACvC,GAAMgtD,IAAc,EAAAC,EAAAC,oBAAmBH,GAAO,EAAAE,EAAAE,iBAAgBJ,EAAOjsD,GAAMd,GACrEotD,GAAc,EAAAH,EAAAC,oBAAmBpsD,GAAK,EAAAmsD,EAAAE,iBAAgBJ,EAAOjsD,GAAMd,EAEzE2sC,GAAQiC,OAAOoe,EAAY,GAAG/0D,EAAG+0D,EAAY,GAAGhuD,GAChD2tC,EAAQkC,OAAOue,EAAY,GAAGn1D,EAAGm1D,EAAY,GAAGpuD,GAChD2tC,EAAQkC,OAAOue,EAAY,GAAGn1D,EAAGm1D,EAAY,GAAGpuD,GAChD2tC,EAAQkC,OAAOme,EAAY,GAAG/0D,EAAG+0D,EAAY,GAAGhuD,GAGlD,QAASquD,GAAY1gB,EAASogB,EAAOjsD,EAAKd,GACxC,GAAMstD,GAAW,EACXrjB,GAAQ,EAAAgjB,EAAAE,iBAAgBJ,EAAOjsD,GAC/BysD,GAAa,EAAAN,EAAAC,oBAAmBpsD,EAAKmpC,EAAOjqC,EAClD2sC,GAAQiC,OAAO2e,EAAW,GAAGt1D,EAAGs1D,EAAW,GAAGvuD,EAC9C,KAAK,GAAIvK,GAAI,EAAGA,GAAK64D,EAAU74D,IAAK,CAClC,GAAM+4D,GAAWvjB,EAAUx1C,EAAIkJ,KAAK2wC,GAAMgf,CAC1C3gB,GAAQkC,OAAO/tC,EAAI7I,EAAM6I,EAAIpQ,EAAIsP,EAASrC,KAAK2P,IAAIkgD,GAAY1sD,EAAI9B,EAAK8B,EAAIpQ,EAAIsP,EAAQrC,KAAK8rC,IAAI+jB,KAIrG,QAASC,GAAgB9gB,EAASogB,EAAOjsD,EAAK4sD,EAAM1tD,GAClD,GAAMgtD,IAAc,EAAAC,EAAAC,oBAAmBH,GAAO,EAAAE,EAAAE,iBAAgBJ,EAAOW,GAAO1tD,GACtEotD,GAAc,EAAAH,EAAAC,oBAAmBpsD,GAAK,EAAAmsD,EAAAE,iBAAgBO,EAAM5sD,GAAMd,GAClE2tD,GAAc,EAAAV,EAAAC,oBAAmBQ,GAAM,EAAAT,EAAAE,iBAAgBJ,EAAOjsD,GAAMd,EAE1E2sC,GAAQiC,OAAOoe,EAAY,GAAG/0D,EAAG+0D,EAAY,GAAGhuD,GAChD2tC,EAAQihB,iBAAiBD,EAAY,GAAG11D,EAAG01D,EAAY,GAAG3uD,EAAGouD,EAAY,GAAGn1D,EAAGm1D,EAAY,GAAGpuD,GAC9F2tC,EAAQkC,OAAOue,EAAY,GAAGn1D,EAAGm1D,EAAY,GAAGpuD,GAChD2tC,EAAQihB,iBAAiBD,EAAY,GAAG11D,EAAG01D,EAAY,GAAG3uD,EAAGguD,EAAY,GAAG/0D,EAAG+0D,EAAY,GAAGhuD,GAQzF,QAASqsD,GAAW1e,EAAS30C,GAClC,GAAMk3C,GAAmBvC,EACnBh4C,EAASqD,EAAOC,EAAEtD,OAClBqL,EAAQhI,EAAOgI,MAAQ,EAAIhI,EAAOgI,MAAQkvC,EAAiBc,UAC3DhvC,EAAQhJ,EAAOgJ,MAAQhJ,EAAOgJ,MAAQkuC,EAAiBE,YACvD5G,EAAajvC,EAAgB0H,gBAAgBjJ,EAAQ,GACrD61D,EAAel5D,EAAS,CAE9Bu6C,GAAiBR,MACjB,KAEE,GADAQ,EAAiBP,YACbh6C,EAAS,EACXg4D,EAAUzd,EAAkB1G,EAAoB,GAARxoC,OACnC,CACL2sD,EAAUzd,EAAkB1G,EAAYxoC,EAAQwoC,EAAW93C,GAC3Do8D,EAAW5d,EAAkB1G,GAAY,EAAAykB,EAAAa,oBAAmBtlB,EAAYjvC,EAAgB0H,gBAAgBjJ,EAAQ,IAAKgI,EAMrH,KAAK,GAAIvL,GAAI,EAAGA,EAAIo5D,EAAcp5D,IAChCg5D,EAAgBve,GAAkB,EAAA+d,EAAAa,oBAAmBv0D,EAAgB0H,gBAAgBjJ,EAAQvD,GAAI8E,EAAgB0H,gBAAgBjJ,EAAQvD,EAAI,KAAK,EAAAw4D,EAAAa,oBAAmBv0D,EAAgB0H,gBAAgBjJ,EAAQvD,EAAI,GAAI8E,EAAgB0H,gBAAgBjJ,EAAQvD,EAAI,IAAK8E,EAAgB0H,gBAAgBjJ,EAAQvD,EAAI,GAAIuL,EAExT8sD,GAAW5d,GAAkB,EAAA+d,EAAAa,oBAAmBv0D,EAAgB0H,gBAAgBjJ,EAAQrD,EAAS,GAAI4E,EAAgB0H,gBAAgBjJ,EAAQrD,EAAS,IAAK4E,EAAgB0H,gBAAgBjJ,EAAQrD,EAAS,GAAIqL,GAChNqtD,EAAYne,EAAkB31C,EAAgB0H,gBAAgBjJ,EAAQrD,EAAS,GAAI4E,EAAgB0H,gBAAgBjJ,EAAQrD,EAAS,GAAIqL,GAE1IkvC,EAAiB6e,YACHz8D,SAAV0P,IACFkuC,EAAiBC,UAAYnuC,EAC7BkuC,EAAiBG,QArBrB,QAwBEH,EAAiBJ,WvEooYpB/9C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EuExtYe6I,UvEytYf7I,EuEzqYey7D,YArEhB,IAAAnvD,GAAAhM,EAAA,GAAYqJ,EvEkvYW5H,EAAwBuK,GuEjvY/C+wD,EAAA/8D,EAAA,KvEg2YM,SAASL,EAAQD,GAEtB,YwEx1YM,SAASs9D,GAAmBxsD,EAAOupC,EAAOjqC,GAC/C,GAAM4sD,GAASlsD,EAAMhQ,EAAIsP,CACzB,SACE/H,EAAIyI,EAAMzI,EAAK0F,KAAK2P,IAAI28B,GAAS2iB,EACjC5tD,EAAI0B,EAAM1B,EAAKrB,KAAK8rC,IAAIQ,GAAS2iB,IAEjC30D,EAAIyI,EAAMzI,EAAK0F,KAAK2P,IAAI28B,GAAS2iB,EACjC5tD,EAAI0B,EAAM1B,EAAKrB,KAAK8rC,IAAIQ,GAAS2iB,IAU9B,QAASkB,GAAmBE,EAAQC,GACzC,OACEh2D,GAAKg2D,EAAOh2D,EAAI+1D,EAAO/1D,GAAK,EAC5B+G,GAAKivD,EAAOjvD,EAAIgvD,EAAOhvD,GAAK,EAC5BtO,GAAKu9D,EAAOv9D,EAAIs9D,EAAOt9D,GAAK,GAUzB,QAASy8D,GAAgBJ,EAAOjsD,GACrC,MAAOnD,MAAKysC,MAAMtpC,EAAI9B,EAAI+tD,EAAM/tD,EAAG8B,EAAI7I,EAAI80D,EAAM90D,GxE0zYlDlH,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EwE71Yes9D,qBxE81Yft9D,EwE70Yek+D,qBxE80Yfl+D,EwEh0Yeu9D,mBxEi3YV,SAASt9D,EAAQD,EAASM,GAE/B,YAiDA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GyEv7YjF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAPC,EAAAC,0BAA6Cs1D,GAGtD,QAASt2D,GAAWkB,EAAS5B,EAAO6B,GAClC,GAAMC,IAEJM,WAAYpC,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,KAEpEjH,QAAO2H,OAAOM,EAAOF,EAAQY,kBAAkB+3C,eAE/Cz/C,EAAAM,iBAAOqH,MAAP,4BAAyCX,EAAMM,WAAW3E,OAE1D,IAAMiF,IACJb,aACAc,eAAgBf,EAAQY,kBAAkBI,OAAOD,eACjDs0D,UAAWp0D,KAAKC,UAAUhB,GAM5B,OAHIF,GAAQY,kBAAkBI,OAAOG,UACnCL,EAAKM,KAAOC,EAAaC,YAAYR,EAAKu0D,UAAWr1D,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAElIL,EAUF,QAASS,GAAUvB,EAAS5B,EAAOoD,GACxC,GAAMC,GAAiBrD,EACjBsD,EAA6BF,EAE7BV,EAAOhC,EAAWkB,EAAS5B,EAAOsD,EAA2B4zD,eAEnE,QADA,EAAA1zD,EAAAC,gCAA+BH,EAA4BD,GACpDK,EAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,2DAAuKnB,GACzKoB,KAEG,SAACC,GAMC,MALAjJ,GAAAM,iBAAOqH,MAAM,kCAAmCsB,GAChDT,EAA2B4zD,eAAiBnzD,EAASlC,WACrD/G,EAAAM,iBAAOqH,MAAM,uCAAwCsB,GACrDV,EAAeW,UAAYD,EAC3BV,EAAeW,UAAUC,KAAU+yD,EAAwB/yD,KAAKC,cAAhE,SACOb,IAEZS,KAXEqzD,EAAA/yD,wBAYFN,KAZErC,EAAA4C,6BAsBF,QAASC,GAAM1C,EAAS5B,EAAOoD,GAKpC,OAJA,EAAAI,EAAAe,2BAA0BnB,EAAmBpD,SAGtCoD,GAAkB8zD,eAClB1yD,QAAQC,QAAQzE,GzEq0YxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQs+D,wBAA0Bt+D,EAAQgM,MAAQhM,EAAQiM,KAAOvK,MAEjE,IAAIwK,GAAqB5L,EAAoB,EAE7Ca,QAAOC,eAAepB,EAAS,QAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,GyEh6YHD,QzEm6YR9K,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,GyEt6YGF,SzEy6YdhM,EyEz5Ye6I,UzE05Yf7I,EyE13YeyK,YzE23YfzK,EyE/1Ye4L,OArFhB,IAAAxJ,GAAA9B,EAAA,GACA+L,EAAA/L,EAAA,GzEy7YKiJ,EAAwBxI,EAAuBsL,GyEx7YpDC,EAAAhM,EAAA,GAAYqJ,EzE47YW5H,EAAwBuK,GyE37Y/CC,EAAAjM,EAAA,GAAY0K,EzE+7YYjJ,EAAwBwK,GyE97YhDC,EAAAlM,EAAA,IAAYiK,EzEk8YQxI,EAAwByK,GyEj8Y5C1B,EAAAxK,EAAA,IACAyI,EAAAzI,EAAA,IACAm+D,EAAAn+D,EAAA,IAQag+D,6BACX/yD,KAAMhC,EAAArI,QAAoBuL,gBAAgBO,KAC1CL,SAAUpD,EAAArI,QAAoB0L,SAASC,KACvCC,WAAY,OzEmhZR,SAAS7M,EAAQD,EAASM,GAE/B,YAYA,SAAS61C,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvxC,GAAI,EAAG0xC,EAAOF,MAAMD,EAAIrxC,QAASF,EAAIuxC,EAAIrxC,OAAQF,IAAO0xC,EAAK1xC,GAAKuxC,EAAIvxC,EAAM,OAAO0xC,GAAe,MAAOF,OAAMG,KAAKJ,G0EjjZ3L,QAASsoB,GAAuCp3D,GAE9C,GAAMq3D,eAAiBr3D,EAAMO,aAEvB4J,EAASnK,EAAMgE,UAAUmG,MAC/B,IAAIA,GAAUA,EAAOmtD,mBAAsBntD,EAAOmtD,kBAAkB75D,OAAS,EAAI,IAAA85D,GAAA,WAC/E,GAAMC,GAAYrtD,EAAOmtD,kBACpBz2D,IAAI,SAAA42D,GAAA,MAAoBA,GAAiBC,gBAAgB5pD,OAAO2pD,EAAiBD,aACjFx2D,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAE6M,OAAO5M,IAC/B,QAAAy2D,EAAON,EAAWpnB,OAAO,SAACnvC,EAAQkJ,GAAT,OAAoBwtD,EAAU/G,KAAK,SAAAmH,GAAA,MAAYA,GAASC,YAAc7tD,SAJhB,mCAAAutD,GAAA,YAAAvrD,EAAAurD,IAAA,MAAAA,GAAAI,EAMjF,MAAON,GAQF,QAASjzD,GAAuBpE,GACrC,GAAMqD,GAAiBrD,CAGvB,OAFAlF,GAAAM,iBAAOqH,MAAM,+BAAgCY,GAC7CA,EAAeosC,kBAAoB2nB,EAAuCp3D,GACnEqD,E1EghZRxJ,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,GAGT,IAAIiS,GAA4B,kBAAXM,SAAoD,gBAApBA,QAAOC,SAAwB,SAAU7S,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAX4S,SAAyB5S,EAAI8S,cAAgBF,QAAU5S,IAAQ4S,OAAO1R,UAAY,eAAkBlB,GAEtQhB,G0E1hZe0L,wBArBhB,IAAAtJ,GAAA9B,EAAA,I1E6lZM,SAASL,EAAQD,EAASM,GAE/B,YAiDA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASm1C,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIvxC,GAAI,EAAG0xC,EAAOF,MAAMD,EAAIrxC,QAASF,EAAIuxC,EAAIrxC,OAAQF,IAAO0xC,EAAK1xC,GAAKuxC,EAAIvxC,EAAM,OAAO0xC,GAAe,MAAOF,OAAMG,KAAKJ,G2ErnZpL,QAASvtC,KACd,MAAO1H,QAAO2H,UAAPC,EAAAC,0BAA6Co2D,GAGtD,QAASp3D,GAAWkB,EAAS5B,EAAO6B,GAClC,GAAMC,IAEJM,WAAYpC,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,KAEpEjH,QAAO2H,OAAOM,GAASi2D,UAAWn2D,EAAQY,kBAAkB84C,oBAE5DxgD,EAAAM,iBAAOqH,MAAP,4BAAyCX,EAAMM,WAAW3E,OAE1D,IAAMiF,IACJb,aACAc,eAAgBf,EAAQY,kBAAkBI,OAAOD,eACjDq1D,cAAen1D,KAAKC,UAAUhB,GAMhC,OAHIF,GAAQY,kBAAkBI,OAAOG,UACnCL,EAAKM,KAAOC,EAAaC,YAAYR,EAAKs1D,cAAep2D,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAEtIL,EAGT,QAASu1D,GAAej4D,EAAOq1C,GAC7B,GAAMH,IAAQ,EAAAgjB,EAAAC,uBAAsBn4D,EAAOq1C,EAAQmiB,UACnD,QAAQniB,EAAQ0D,aACd,IAAK,QACH,MAAO1D,GAAQgE,MAAMx4C,IAAI,SAAAqxC,GAAA,MAAQr4C,QAAO2H,OAAO0wC,EAAMgD,IACvD,KAAK,WACH,OAAQG,GAASx0C,IAAI,SAAA0yC,GAAA,MAAY15C,QAAO2H,OAAO+xC,EAAUA,EAASppC,OAAOiuD,kBAAkBlf,WAAW3F,EAASppC,OAAOiuD,kBAAkBC,sBAAuBnjB,IACjK,KAAK,QACH,OAAO,EAAAgjB,EAAAI,qBAAoBt4D,EAAOq1C,GAASx0C,IAAI,SAAA24C,GAAA,MAAa3/C,QAAO2H,OAAOg4C,EAAWtE,IACvF,SACE,UAIN,QAASqjB,GAA2Cv4D,GAClD,GAAMmK,GAASnK,EAAMgE,UAAUmG,MAC/B,OAAIA,MACK2D,OAAA+gC,EAAI1kC,EAAOquD,QAAX3pB,EAAsB1kC,EAAOsuD,QAA7B5pB,EAAwC1kC,EAAOuuD,YACjD73D,IAAI,SAAAw0C,GAAA,MAAW4iB,GAAej4D,EAAOq1C,KACrCr0C,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAE6M,OAAO5M,QAUnC,QAASkD,GAAuBpE,GAC9B,GAAMqD,GAAiBrD,CAGvB,OAFAlF,GAAAM,iBAAOqH,MAAM,+BAAgCY,GAC7CA,EAAeosC,kBAAoB8oB,EAA2Cv4D,GACvEqD,EAUF,QAASF,GAAUvB,EAAS5B,EAAOoD,GACxC,GAAMC,GAAiBrD,EACjBsD,EAA6BF,EAE7BV,EAAOhC,EAAWkB,EAAS5B,EAAOsD,EAA2Bq1D,mBAEnE,QADA,EAAAn1D,EAAAC,gCAA+BH,EAA4BD,GACpDK,EAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,+DAA2KnB,GAC7KoB,KAEG,SAACC,GAOC,MANAjJ,GAAAM,iBAAOqH,MAAM,sCAAuCsB,GAEpDT,EAA2Bq1D,mBAAqB50D,EAASlC,WACzD/G,EAAAM,iBAAOqH,MAAM,2CAA4CsB,GACzDV,EAAeW,UAAYD,EAC3BV,EAAeW,UAAUC,KAAU6zD,EAA4B7zD,KAAKC,cAApE,SACOb,IAGZS,KAAKM,GACLN,KAdErC,EAAA4C,6BAwBF,QAASC,GAAM1C,EAAS5B,EAAOoD,GAKpC,OAJA,EAAAI,EAAAe,2BAA0BnB,EAAmBpD,SAGtCoD,GAAkBu1D,mBAClBn0D,QAAQC,QAAQzE,G3E29YxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQo/D,4BAA8Bp/D,EAAQgM,MAAQhM,EAAQiM,KAAOvK,MAErE,IAAIwK,GAAqB5L,EAAoB,EAE7Ca,QAAOC,eAAepB,EAAS,QAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,G2E5lZHD,Q3E+lZR9K,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,G2ElmZGF,S3EqmZdhM,E2ErlZe6I,U3EslZf7I,E2ElhZeyK,Y3EmhZfzK,E2Er/Ye4L,OAjIhB,IAAAxJ,GAAA9B,EAAA,GACA+L,EAAA/L,EAAA,G3E2nZKiJ,EAAwBxI,EAAuBsL,G2E1nZpDC,EAAAhM,EAAA,GAAYqJ,E3E8nZW5H,EAAwBuK,G2E7nZ/CC,EAAAjM,EAAA,GAAY0K,E3EioZYjJ,EAAwBwK,G2EhoZhDC,EAAAlM,EAAA,IAAYiK,E3EooZQxI,EAAwByK,G2EnoZ5C1B,EAAAxK,EAAA,IAIAyI,EAAAzI,EAAA,IAIAk/D,EAAAl/D,EAAA,IAQa8+D,iCACX7zD,KAAMhC,EAAArI,QAAoBuL,gBAAgBU,SAC1CR,SAAUpD,EAAArI,QAAoB0L,SAASC,KACvCC,WAAY,O3E+vZR,SAAS7M,EAAQD,EAASM,GAE/B,YAeA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,E4E/xZ5P,QAASy9D,GAAsBn4D,EAAOw3D,GAC3C,GAAIoB,GAAU54D,EAAMO,UAOpB,OANIi3D,IAAcA,EAAU/5D,OAAS,IACnCm7D,EAAUpB,EACL32D,IAAI,SAAA+2D,GAAA,MAAY9M,GAAS3Z,2BAA2BnxC,EAAO43D,EAAS92D,OAAS82D,EAAS92D,OAAS82D,EAASxmB,YAAawmB,EAAS92D,OAAS82D,EAAS92D,OAAS82D,EAASvmB,WAAYumB,EAAStmB,WAAYsmB,EAASrmB,aAC5MvwC,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAE6M,OAAO5M,OAI/B4I,MAAO8uD,EAAQ,GAAG9uD,MAClBhB,MAAO8vD,EAAQ,GAAG9vD,OAUf,QAASwvD,GAAoBt4D,EAAO64D,GACzC,GAAIA,EAAQ3f,YAAc2f,EAAQ3f,WAAWz7C,OAAS,EAAG,CACvD,GAAMq7D,GAAoBD,EAAQ3f,WAAW2f,EAAQ1f,uBACrD,QAAQ2f,EAAkB70D,MACxB,IAAK,gBACH,MAAI40D,GAAQrB,WAAaqB,EAAQrB,UAAU/5D,OAAS,EAC3Co7D,EAAQrB,UACV32D,IAAI,SAAA+2D,GAAA,MAAY9M,GAAS3Z,2BAA2BnxC,EAAO43D,EAASxmB,YAAawmB,EAASvmB,WAAYumB,EAAStmB,WAAYsmB,EAASrmB,aACpIvwC,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAE6M,OAAO5M,OAGnC,KAAK,kBACH,MAAO43D,GAAkBvf,UAC3B,SACE,UAGN,SAGF,QAASwf,GAAwC/4D,GAC/C,GAAMmK,GAASnK,EAAMgE,UAAUmG,MAC/B,OAAIA,IAAUA,EAAO6uD,SACZ7uD,EAAO6uD,SACTn4D,IAAI,SAACg4D,GACJ,GAAM3jB,GAAQijB,EAAsBn4D,EAAO64D,EAAQrB,UACnD,OAAOc,GAAoBt4D,EAAO64D,GAASh4D,IAAI,SAAA24C,GAAA,MAAa3/C,QAAO2H,OAAOg4C,EAAWtE,OAEtFl0C,OAAO,SAACC,EAAGC,GAAJ,MAAUD,GAAE6M,OAAO5M,QAU5B,QAASkD,GAAuBpE,GACrC,GAAMqD,GAAiBrD,CAGvB,OAFAlF,GAAAM,iBAAOqH,MAAM,+BAAgCY,GAC7CA,EAAeosC,kBAAoBspB,EAAwC/4D,GACpEqD,E5EotZRxJ,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,E4ErxZey/D,wB5EsxZfz/D,E4ElwZe4/D,sB5EmwZf5/D,E4E7tZe0L,wBAnEhB,IAAAtJ,GAAA9B,EAAA,GACA01C,EAAA11C,EAAA,IAAY8xD,E5EqyZIrwD,EAAwBi0C,IAmFlC,SAAS/1C,EAAQD,EAASM,GAE/B,YAoDA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,G6Et5ZjF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAPC,EAAAC,0BAA6Cu3D,GAGtD,QAASv4D,GAAWkB,EAAS5B,EAAO6B,GAClC,GAAMC,IACJM,WAAY0oD,EAAS1a,sBAAsBpwC,GAAOa,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,KAEzFjH,QAAO2H,OAAOM,EAAOF,EAAQY,kBAAkBy4C,gBAE/CngD,EAAAM,iBAAOqH,MAAP,4BAAyCX,EAAMM,WAAW3E,OAE1D,IAAMiF,IACJb,aACAc,eAAgBf,EAAQY,kBAAkBI,OAAOD,eACjDu2D,WAAYr2D,KAAKC,UAAUhB,GAM7B,OAHIF,GAAQY,kBAAkBI,OAAOG,UACnCL,EAAKM,KAAOC,EAAaC,YAAYR,EAAKw2D,WAAYt3D,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAEnIL,EAUF,QAASS,GAAUvB,EAAS5B,EAAOoD,GACxC,GAAMC,GAAiBrD,EACjBsD,EAA6BF,EAE7BV,EAAOhC,EAAWkB,EAAS5B,EAAOsD,EAA2B61D,gBAEnE,QADA,EAAA31D,EAAAC,gCAA+BH,EAA4BD,GACpDK,EAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,4DAAwKnB,GAC1KoB,KAEG,SAACC,GAMC,MALAjJ,GAAAM,iBAAOqH,MAAM,mCAAoCsB,GACjDT,EAA2B61D,gBAAkBp1D,EAASlC,WACtD/G,EAAAM,iBAAOqH,MAAM,wCAAyCsB,GACtDV,EAAeW,UAAYD,EAC3BV,EAAeW,UAAUC,KAAUg1D,EAAyBh1D,KAAKC,cAAjE,SACOb,IAGZS,KAZEo0D,EAAA9zD,wBAaFN,KAbErC,EAAA4C,6BAuBF,QAASC,GAAM1C,EAAS5B,EAAOoD,GACpC,GAAME,GAA6BF,EAC7B4F,EAAMowD,EAAcC,oBAE1B,IAAI/1D,GAA8BA,EAA2B61D,gBAAiB,CAC5E,GAAMz2D,IACJ42D,kBAAmBh2D,EAA2B61D,gBAEhDz1D,GAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,uDAAmKnB,GAC9JoB,KAAKkF,EAAIvE,eACPnB,GAA2B61D,gBAEpC,MAAOnwD,GAAIuwD,QAAQz1D,KAAK,SAACg9C,GACvB,GAAM1S,GAAWpuC,CAGjB,QAFA,EAAAwD,EAAAe,2BAA0BnB,EAAmBgrC,GAC7CA,EAASpqC,UAAY88C,EACd1S,IAWJ,QAAS1pC,GAAM9C,EAAS5B,EAAOoD,GACpC,MAAOkB,GAAM1C,EAAS5B,EAAOoD,G7E0wZ9BvJ,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQugE,yBAA2BvgE,EAAQiM,KAAOvK,MAElD,IAAIwK,GAAqB5L,EAAoB,EAE7Ca,QAAOC,eAAepB,EAAS,QAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,G6E53ZHD,Q7E+3ZRjM,E6E/2Ze6I,U7Eg3Zf7I,E6Ej1ZeyK,Y7Ek1ZfzK,E6ErzZe4L,Q7EszZf5L,E6E3xZegM,OAlHhB,IAAA5J,GAAA9B,EAAA,GACA+L,EAAA/L,EAAA,G7Ek5ZKiJ,EAAwBxI,EAAuBsL,G6Ej5ZpD2pC,EAAA11C,EAAA,IAAY8xD,E7Eq5ZIrwD,EAAwBi0C,G6Ep5ZxC1pC,EAAAhM,EAAA,GAAYqJ,E7Ew5ZW5H,EAAwBuK,G6Ev5Z/CC,EAAAjM,EAAA,GAAY0K,E7E25ZYjJ,EAAwBwK,G6E15ZhDu0D,EAAAxgE,EAAA,IAAYogE,E7E85ZS3+D,EAAwB++D,G6E75Z7Ct0D,EAAAlM,EAAA,IAAYiK,E7Ei6ZQxI,EAAwByK,G6Eh6Z5C1B,EAAAxK,EAAA,IACAyI,EAAAzI,EAAA,IACAk/D,EAAAl/D,EAAA,IAQaigE,8BACXh1D,KAAMhC,EAAArI,QAAoBuL,gBAAgBQ,MAC1CN,SAAUpD,EAAArI,QAAoB0L,SAASC,KACvCC,WAAY,O7EugaR,SAAS7M,EAAQD,GAEtB,Y8EnhaM,SAAS2gE,KACd,GAAI50D,UACAoG,SACE+iC,EAAc,GAAIppC,SACpB,SAACi1D,EAAcC,GACbj1D,EAAUg1D,EACV5uD,EAAS6uD,GAEf,QAASH,QAAS3rB,EAAanpC,UAASoG,U9E6gazChR,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,E8Exhae2gE,sB9E+iaV,SAAS1gE,EAAQD,EAASM,GAE/B,YA+CA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,G+EplajF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAPC,EAAAC,0BAA6Ci4D,GAGtD,QAASj5D,GAAWkB,EAAS5B,EAAO6B,GAClC,GAAMC,IAEJM,cACK0L,OAAO9N,EAAMsvC,eAAgBtvC,EAAMO,YACnC0vC,OAAO,SAAAC,GAAA,MAA0B,UAAhBA,EAAOjsC,OACxBpD,IAAI,SAACqvC,GACJ,MAAoB,WAAhBA,EAAOjsC,KACF5B,EAAgBC,OAAO4tC,GAEzBA,KAGTiE,EAAiBt6C,OAAO2H,UAAWI,EAAQY,kBAAkB2xC,sBAC5DA,GAAeR,KACtB95C,OAAO2H,OAAOM,EAAOqyC,GAErBr5C,EAAAM,iBAAOqH,MAAP,4BAAyCX,EAAMM,WAAW3E,OAE1D,IAAMiF,IACJb,aACAc,eAAgBf,EAAQY,kBAAkBI,OAAOD,eACjDi3D,WAAY/2D,KAAKC,UAAUhB,GAM7B,OAHIF,GAAQY,kBAAkBI,OAAOG,UACnCL,EAAKM,KAAOC,EAAaC,YAAYR,EAAKk3D,WAAYh4D,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAEnIL,EAQT,QAAS0B,GAAuBpE,GAE9B,MADAlF,GAAAM,iBAAOqH,MAAM,+BAAgCzC,GACtCA,EAUF,QAASmD,GAAUvB,EAAS5B,EAAOoD,GACxC,GAAMC,GAAiBrD,EACjBsD,EAA6BF,EAE7BV,EAAOhC,EAAWkB,EAAS5B,EAAOsD,EAA2Bu2D,gBAEnE,QADA,EAAAr2D,EAAAC,gCAA+BH,EAA4BD,GACpDK,EAAiBC,KAAQ/B,EAAQY,kBAAkBI,OAAOgB,OAA1D,MAAsEhC,EAAQY,kBAAkBI,OAAOiB,KAAvG,4DAAwKnB,GAC1KoB,KACG,SAACC,GAMC,MALAjJ,GAAAM,iBAAOqH,MAAM,mCAAoCsB,GACjDT,EAA2Bu2D,gBAAkB91D,EAASlC,WACtD/G,EAAAM,iBAAOqH,MAAM,wCAAyCsB,GACtDV,EAAeW,UAAYD,EAC3BV,EAAeW,UAAUC,KAAU01D,EAAyB11D,KAAKC,cAAjE,SACOb,IAGZS,KAAKM,GACLN,KAZErC,EAAA4C,6BAsBF,QAASC,GAAM1C,EAAS5B,EAAOoD,GAKpC,OAJA,EAAAI,EAAAe,2BAA0BnB,EAAmBpD,SAGtCoD,GAAkBy2D,gBAClBr1D,QAAQC,QAAQzE,G/Eg9ZxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQihE,yBAA2BjhE,EAAQgM,MAAQhM,EAAQiM,KAAOvK,MAElE,IAAIwK,GAAqB5L,EAAoB,EAE7Ca,QAAOC,eAAepB,EAAS,QAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,G+E/jaHD,Q/EkkaR9K,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOF,G+ErkaGF,S/EwkadhM,E+Exjae6I,U/Eyjaf7I,E+ErgaeyK,Y/EsgafzK,E+E1+Ze4L,OAxGhB,IAAAxJ,GAAA9B,EAAA,GACA+L,EAAA/L,EAAA,G/EulaKiJ,EAAwBxI,EAAuBsL,G+EtlapDC,EAAAhM,EAAA,GAAYqJ,E/E0laW5H,EAAwBuK,G+Ezla/CC,EAAAjM,EAAA,GAAY0K,E/E6laYjJ,EAAwBwK,G+E5lahDC,EAAAlM,EAAA,IAAYiK,E/EgmaQxI,EAAwByK,G+E/la5C1B,EAAAxK,EAAA,IACAyI,EAAAzI,EAAA,IAQa2gE,8BACX11D,KAAMhC,EAAArI,QAAoBuL,gBAAgBS,MAC1CP,SAAUpD,EAAArI,QAAoB0L,SAASC,KACvCC,WAAY,O/E+raR,SAAS7M,EAAQD,EAASM,GAE/B,YA2CA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GgFxuajF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAWs4D,EAAsBC,+BAAgCC,GAGjF,QAASC,GAAe72D,EAAmBpD,EAAO4B,GAChD,MAAIwB,GAAkByqC,yBAAyBC,iBAAmB,GAE9D7pC,KAAM,QACNi2D,WAAYt4D,EAAQY,kBAAkB+3C,cACtCn4C,WAAYpC,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,OAKpEmD,KAAM,WACN7B,WAAY0oD,EAAS1a,sBAAsBpwC,GAAO,GAAIa,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,MAWxF,QAAS6D,GAAK/C,EAAS5B,EAAOoD,GACnC,GAAM4qC,GAAY,+BAClB,OAAO8rB,GAAsBn1D,KAAKqpC,EAAWpsC,EAAS5B,EAAOoD,GAUxD,QAASD,GAAUvB,EAAS5B,EAAOoD,GACxC,MAAO02D,GAAsB32D,UAAUvB,EAASwB,EAAmBpD,EAAOi6D,GACrEn2D,KADEqzD,EAAA/yD,wBAEFN,KAAKg2D,EAAsBz1D,6BhFopajCxK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQshE,6BAA+BthE,EAAQgM,MAAQhM,EAAQ4L,MAAQlK,MgFntaxE,IAAA+/D,GAAAnhE,EAAA,GhFutaCa,QAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOq1D,GgFvtaH71D,ShF0taRzK,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOq1D,GgF7taIz1D,ShFguafhM,EgFhtae6I,UhFitaf7I,EgFvraeiM,OhFwrafjM,EgF5qaeyK,WA7DhB,IACA4B,IADA/L,EAAA,GACAA,EAAA,IhF8uaKiJ,EAAwBxI,EAAuBsL,GgF7uapD2pC,EAAA11C,EAAA,IAAY8xD,EhFivaIrwD,EAAwBi0C,GgFhvaxC1pC,EAAAhM,EAAA,GAAYqJ,EhFovaW5H,EAAwBuK,GgFnvanC80D,EhFqvaiBr/D,EAAwB0/D,GgFpvarDhD,EAAAn+D,EAAA,IAQaghE,kCACX/1D,KAAMhC,EAAArI,QAAoBuL,gBAAgBO,KAC1CL,SAAUpD,EAAArI,QAAoB0L,SAAS2B,UACvCzB,WAAY,OhF+yaR,SAAS7M,EAAQD,EAASM,GAE/B,YAkCA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAEvF,QAASe,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EiFr1anQ,QAAS0/D,GAASx4D,EAASosC,GACzB,GAAMpqC,GAAsD,UAA5ChC,EAAQY,kBAAkBI,OAAOgB,OAAsB,MAAQ,IAC/E,OAAOA,GAAS,MAAQhC,EAAQY,kBAAkBI,OAAOiB,KAAOmqC,EAQ3D,QAAS3pC,GAA4BrE,GAC1C,GAAMqD,GAAiBrD,CAEvB,OADAqD,GAAewqC,yBAAyBE,qBAAuB1qC,EAAewqC,yBAAyBC,iBAChGzqC,EAaF,QAASsB,GAAKqpC,EAAWpsC,EAAS5B,EAAOoD,GAC9C,GAAME,GAA6BF,CACnCE,GAA2B0qC,UAAYA,EACvC1qC,EAA2B1B,QAAUA,CACrC,IAAM+I,GAAMyvD,EAASx4D,EAASosC,GACxBqsB,EAA0BjB,EAAcC,oBAE9Cv+D,GAAAM,iBAAOqH,MAAM,qCAAsCa,EACnD,IAAMg3D,GAAeC,EAAwBC,uBAAuBH,EAAyB/2D,EAA4B1B,EAWzH,OAVA0B,GAA2BqH,IAAMA,EACjCrH,EAA2B4qC,SAAWosB,EACtCh3D,EAA2B1B,QAAUA,EACrC0B,EAA2B6qC,yBAA2B,EACtD7qC,EAA2B2qC,UAAYwsB,EAAmBC,cAAcp3D,GACxEA,EAA2BqqC,uBAG3BrqC,EAA2BsqC,YAAcysB,EAAwBd,QAE1Dj2D,EAA2BsqC,YAC7B9pC,KAAK,SAAA/J,GAAA,MAASe,GAAAM,iBAAOqH,MAAM,aAAe1I,KAC1C+J,KAAK,iBAAM9D,KACXgrD,MAAM,SAAA5U,GAAA,MAASt7C,GAAAM,iBAAOg7C,MAAM,0CAInC,QAASzqC,GAAKvI,EAAmBu3D,GAC/B,GAAMr3D,GAA6BF,EAC7Bw3D,EAA8BD,CAEpC7/D,GAAAM,iBAAOqH,MAAM;AACba,EAA2BqqC,oBAAoBjkC,KAAKkxD,EACpD,KACEH,EAAmB9uD,KAAKrI,EAA4Bq3D,EAAmBE,mBAAmBv3D,EAA4Bs3D,EAA4B56D,MAAO46D,EAA4Bh5D,UACrLorD,EAAkBvpD,+BAA+BH,EAA4Bs3D,EAA4B56D,OACzG,MAAO86D,GACP,IAAI9N,EAAkB1e,gCAAgChrC,GAOpD,KAAM0pD,GAAkBve,sBANxB9pC,GAAKrB,EAA2B0qC,UAAW1qC,EAA2B1B,QAAS0B,EAA2BtD,MAAOsD,GAA4BQ,KAAK,WAChJhJ,EAAAM,iBAAO6uD,KAAK,qBAAsB3mD,EAA2B6qC,0BAC7D7qC,EAA2BuqC,yBAAyBC,kBAAmB,EACvEniC,EAAKrI,EAA4Bq3D,MAelC,QAASr2D,GAAM1C,EAAS5B,EAAOoD,GACpC,GAAME,GAA6BF,CAEnC,IADA4pD,EAAkBzoD,0BAA0BnB,EAAmBpD,GAC3DsD,GAA8BA,EAA2B2qC,UAAW,OAE/D3qC,GAA2BzB,UAClC,KACE44D,EAAmB9uD,KAAKrI,GAA8BW,KAAM,UAC5D,MAAO82D,GAEPR,EAAwBC,uBAAuBpB,EAAcC,qBAAsB/1D,EAA4B1B,IAInH,MAAO4C,SAAQC,QAAQzE,GAUlB,QAASmD,GAAUvB,EAASwB,EAAmBpD,EAAO66D,GAC3D,GAAMG,GAAiC5B,EAAcC,qBAC/C/1D,EAA6BF,EAG7Bu3D,GACJE,qBACA76D,QACA4B,UACAq5D,4BAA6BD,EAiB/B,OAdA13D,GAA2BsqC,YAAY9pC,KAAK,WAC1ChJ,EAAAM,iBAAOqH,MAAM,8CACb,KACEkJ,EAAKrI,EAA4Bq3D,GACjC,MAAOO,GACPpgE,EAAAM,iBAAO6uD,KAAK,iCACZ0Q,EAAmBM,4BAA4BpwD,OAAOqwD,KAEvC,WAEjBpgE,EAAAM,iBAAO6uD,KAAK,kBACZ0Q,EAAmBM,4BAA4BpwD,OAAO,oBAGjDmwD,EAA+BzB,QAUjC,QAAS70D,GAAM9C,EAAS5B,EAAOoD,GAIpC,MAHIA,IAAqBA,EAAkB6qC,WACzCwsB,EAAmB/1D,MAAMtB,EAAkB6qC,UAAW,IAAM,iBAEvDzpC,QAAQC,QAAQzE,GjFkqaxBnG,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQqhE,+BAAiC3/D,OACzC1B,EiF7yae2L,8BjF8yaf3L,EiF9xaeiM,OjF+xafjM,EiFxuae4L,QjFyuaf5L,EiFjtaeyK,YjFktafzK,EiF9qaegM,OA7JhB,IAAA5J,GAAA9B,EAAA,GACAmiE,EAAAniE,EAAA,IAAYyhE,EjFg1achgE,EAAwB0gE,GiF/0alDC,EAAApiE,EAAA,IAAYuhE,EjFm1amB9/D,EAAwB2gE,GiFl1avD5B,EAAAxgE,EAAA,IAAYogE,EjFs1aS3+D,EAAwB++D,GiFr1a7Cz0D,EAAA/L,EAAA,GjFy1aKiJ,EAAwBxI,EAAuBsL,GiFx1apDvB,EAAAxK,EAAA,IAAYg0D,EjF41aavyD,EAAwB+I,EiFt1apCu2D,mCACXprB,mBAAoB1sC,EAAArI,QAAoB6N,mBAAmBE,QAC3DinC,iBAAkB3sC,EAAArI,QAAoB6N,mBAAmBE,SjF2/arD,SAAShP,EAAQD,EAASM,GAE/B,YAeA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EkF/gb5P,QAASgK,GAAMupC,EAAWoZ,EAAMgU,GACjCptB,GAAaA,EAAUviC,WAAa,GACtCuiC,EAAUvpC,MAAM2iD,EAAMgU,GAI1B,QAASC,GAAYrtB,GACnB,GAAMstB,GAAettB,CACrBstB,GAAaC,YACTD,EAAaC,UAAYD,EAAaE,YACxCxtB,EAAUvpC,MAAM,IAAM,aACb62D,EAAa7vD,YAAc,GACpC8+C,WAAW,WACT+Q,EAAa5vD,KAAK9I,KAAKC,WAAYmB,KAAM,UACzCq3D,EAAYC,IACXA,EAAanhB,oBASpB,QAASshB,GAAuBztB,EAAW7qC,GACzC,GAAMu4D,GAAS1tB,CACf0tB,GAAOhyD,MAAQ,GAAIgmC,MACnBgsB,EAAOH,UAAY,EACnBG,EAAOvhB,mBAAqBh3C,EAAkBxB,QAAQY,kBAAkBI,OAAOqrC,UAAUmM,mBACzFuhB,EAAOF,YAAcr4D,EAAkBxB,QAAQY,kBAAkBI,OAAOqrC,UAAUkM,iBAClFwhB,EAAOptB,cAAgBnrC,EAAkBxB,QAAQY,kBAAkBI,OAAOqrC,UAAUM,cACpFotB,EAAOntB,cAAgBprC,EAAkBxB,QAAQY,kBAAkBI,OAAO4rC,cAC1EmtB,EAAOv4D,kBAAoBA,EAOtB,QAASs3D,GAAct3D,GAE5B,GAAMu4D,GAAS,GAAIC,WAAUx4D,EAAkBuH,IAiC/C,OAhCA+wD,GAAuBC,EAAQv4D,GAC/Bk4D,EAAYK,GAEZA,EAAOE,OAAS,SAAC7+D,GACflC,EAAAM,iBAAOqH,MAAM,UACbW,EAAkB8qC,SAASlxC,IAG7B2+D,EAAOG,QAAU,SAAC9+D,GAChBlC,EAAAM,iBAAOqH,MAAM,UAAW,GAAIktC,MAASgsB,EAAOhyD,OAC5CvG,EAAkB8qC,SAASlxC,IAG7B2+D,EAAOxwD,QAAU,SAACnO,GAChBlC,EAAAM,iBAAOqH,MAAM,WACbW,EAAkB8qC,SAASlxC,IAG7B2+D,EAAOI,UAAY,SAAC/+D,GAClBlC,EAAAM,iBAAOqH,MAAM,aACbk5D,EAAOH,UAAY,EACnBG,EAAOntB,cAAgB,CACvB,IAAMwtB,GAAgBn5D,KAAKoH,MAAMjN,EAAE0F,KACnC,IAA2B,SAAvBs5D,EAAc/3D,KAAiB,CACjC,GAAMg4D,IACJh4D,KAAMjH,EAAEiH,KACRvB,KAAMG,KAAKoH,MAAMjN,EAAE0F,MAErBU,GAAkB8qC,SAAS+tB,KAIxBN,EAQF,QAAShwD,GAAKvI,EAAmB4O,GACtC,GAAMi8B,GAAY7qC,EAAkB6qC,UAC9B5uB,EAAQ4uB,EAAUviC,UACxB,MAAI2T,GAAS,GAGX,KAAM2tC,GAAkBve,sBAFxBR,GAAUtiC,KAAK9I,KAAKC,UAAUkP,IlF46ajCnY,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EkFrgbegM,QlFsgbfhM,EkF/9aegiE,gBlFg+afhiE,EkFr7aeiT,MA5FhB,IAAA7Q,GAAA9B,EAAA,GACAwK,EAAAxK,EAAA,IAAYg0D,ElFshbavyD,EAAwB+I,IAwG3C,SAAS7K,EAAQD,EAASM,GAE/B,YAiBA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EmFjobnQ,QAASwhE,GAAet6D,GACtB,OACEqC,KAAM,iBACNtB,eAAgBf,EAAQY,kBAAkBI,OAAOD,gBAIrD,QAASw5D,GAA8BC,EAAex6D,EAASe,GAC7D,OACEsB,KAAM,OACNtB,iBACA05D,UAAWD,EAAc15D,KAAK25D,UAC9Br5D,KAAMC,EAAaC,YAAYk5D,EAAc15D,KAAK25D,UAAWz6D,EAAQY,kBAAkBI,OAAOD,eAAgBf,EAAQY,kBAAkBI,OAAOG,UAInJ,QAASu5D,GAAeC,EAASnmB,GAC/Bt7C,EAAAM,iBAAOg7C,MAAM,oGACbt7C,EAAAM,iBAAOqH,MAAM,UAAW85D,GACxBzhE,EAAAM,iBAAOqH,MAAM,QAAS2zC,GAGxB,QAASomB,GAAiBp5D,EAAmB4O,GAC3C,GAAM1O,GAA6BF,CAC/BE,GAA2BzB,YAAcyB,EAA2BzB,aAAemQ,EAAQtP,KAAKb,YAClG/G,EAAAM,iBAAOqH,MAAP,2BAAwCa,EAA2BzB,WAAnE,OAAoFmQ,EAAQtP,KAAKb,WAAjG,uBAEFyB,EAA2BzB,WAAamQ,EAAQtP,KAAKb,WACrD/G,EAAAM,iBAAOqH,MAAM,2CAA4CuP,EAAQtP,KAAKb,YAGxE,QAAS46D,GAASr5D,EAAmB4O,GACnClX,EAAAM,iBAAOqH,MAAM,4BAA6BuP,EAC1C,IAAM2oD,GAAqBv3D,EAAkBuqC,oBAAoB+uB,QAC3Dr5D,EAAiBs3D,EAAmB36D,KAC1ClF,GAAAM,iBAAOqH,MAAM,iCAAkCuP,GAC/C3O,EAAeW,UAAYgO,EAAQtP,KAEnCi4D,EAAmBM,4BAA4Bx2D,QAAQpB,GAUlD,QAASm3D,GAAuBmC,EAAqBv5D,EAAmBxB,GAC7E,MAAO,UAACoQ,GAEN,GAAMrP,GAAiBf,EAAQY,kBAAkBI,OAAOD,cAGxD,QAFA7H,EAAAM,iBAAOqH,MAAM,WAAYuP,EAAQ/N,KAAM+N,GAE/BA,EAAQ/N,MACd,IAAK,OACHw2D,EAAmB9uD,KAAKvI,EAAmB84D,EAAet6D,GAC1D,MACF,KAAK,UAEH,OADA9G,EAAAM,iBAAOqH,MAAM,oBAAqBuP,EAAQtP,KAAKuB,MACvC+N,EAAQtP,KAAKuB,MACnB,IAAK,gBACHw2D,EAAmB9uD,KAAKvI,EAAmB+4D,EAA8BnqD,EAASpQ,EAASe,GAC3F,MACF,KAAK,OACHg6D,EAAoBl4D,QAAQ,YAC5B,MACF,KAAK,QACH3J,EAAAM,iBAAOqH,MAAM,uBACb,MACF,KAAK,aACL,IAAK,aACH+5D,EAAiBp5D,EAAmB4O,GACpCyqD,EAASr5D,EAAmB4O,EAC5B,MACF,SACEsqD,EAAetqD,GACf2qD,EAAoB9xD,OAAO,mBAE/B,KACF,KAAK,QACH/P,EAAAM,iBAAOqH,MAAM,uBACb,MACF,SACE65D,EAAetqD,KnF8hbtBnY,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EmFrkbe8hE,wBAjEhB,IAAA1/D,GAAA9B,EAAA,GACAmiE,EAAAniE,EAAA,IAAYyhE,EnF2obchgE,EAAwB0gE,GmF1oblDj2D,EAAAlM,EAAA,IAAYiK,EnF8obQxI,EAAwByK,IA4GtC,SAASvM,EAAQD,EAASM,GAE/B,YA2CA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GoFpxbjF,QAAS6H,KACd,MAAO1H,QAAO2H,UAAWs4D,EAAsBC,+BAAgC6C,GAGjF,QAASC,GAAez5D,EAAmBpD,EAAO4B,GAChD,MAAIwB,GAAkByqC,yBAAyBC,iBAAmB,GAE9D7pC,KAAM,QACN1B,cAAeX,EAAQY,kBAAkBD,cACzCR,aACEC,cAAeC,EAAArI,QAAoBsI,UAAUC,gBAC7CC,WAAYpC,EAAMO,WAAWM,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,SAMtEmD,KAAM,WACNlC,aACEC,cAAeC,EAAArI,QAAoBsI,UAAUC,gBAC7CC,WAAY0oD,EAAS1a,sBAAsBpwC,GAAO,GAAIa,IAAI,SAAAC,GAAA,MAAUuB,GAAgBC,OAAOxB,QAY1F,QAAS6D,GAAK/C,EAAS5B,EAAOoD,GACnC,GAAM4qC,GAAY,+BAClB,OAAO8rB,GAAsBn1D,KAAKqpC,EAAWpsC,EAAS5B,EAAOoD,GAUxD,QAASD,GAAUvB,EAAS5B,EAAOoD,GACxC,MAAO02D,GAAsB32D,UAAUvB,EAASwB,EAAmBpD,EAAO68D,GACrE/4D,KADEK,EAAAC,wBAEFN,KAAKg2D,EAAsBz1D,6BpF0rbjCxK,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkkE,6BAA+BlkE,EAAQgM,MAAQhM,EAAQ4L,MAAQlK,MoF/vbxE,IAAA+/D,GAAAnhE,EAAA,GpFmwbCa,QAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOq1D,GoFnwbH71D,SpFswbRzK,OAAOC,eAAepB,EAAS,SAC7BmM,YAAY,EACZC,IAAK,WACH,MAAOq1D,GoFzwbIz1D,SpF4wbfhM,EoF5vbe6I,UpF6vbf7I,EoF7tbeiM,OpF8tbfjM,EoFltbeyK,WAnEhB,IACA4B,IADA/L,EAAA,GACAA,EAAA,IpF0xbKiJ,EAAwBxI,EAAuBsL,GoFzxbpD2pC,EAAA11C,EAAA,IAAY8xD,EpF6xbIrwD,EAAwBi0C,GoF5xbxC1pC,EAAAhM,EAAA,GAAYqJ,EpFgybW5H,EAAwBuK,GoF/xbnC80D,EpFiybiBr/D,EAAwB0/D,GoFhybrDh2D,EAAAnL,EAAA,IAQa4jE,kCACX34D,KAAMhC,EAAArI,QAAoBuL,gBAAgBC,KAC1CC,SAAUpD,EAAArI,QAAoB0L,SAAS2B,UACvCzB,WAAY,OpFi2bR,SAAS7M,EAAQD,EAASM,GAE/B,YqF52bc,SAAS8jE,GAAcp6D,GACpC5H,EAAAS,eAAOkH,MAAM,wBAAyBC,GAGtC5J,KAAK6wD,cAAc,GAAIC,aAAY,UAAYC,OAAQnnD,KrF02bxD7I,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EAAQkB,QqFj3bekjE,CAPxB,IAAAhiE,GAAA9B,EAAA,IrF04bM,SAASL,EAAQD,EAASM,GAE/B,YAWA,SAASS,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GsFh4bjF,QAASy0D,GAAqBjZ,GACnC,OAAO,EAAAuE,EAAA7/C,YAAWmjE,EAAwB3iE,SAAV86C,KAA2BA,GtFs3b5Dr7C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EsF13bey1D,sBAvBhB,IAAAxU,GAAA3gD,EAAA,ItFq5bKygD,EAAehgD,EAAuBkgD,GsF14brCojB,GACJ7kB,aACEpuC,MAAO,UACPhB,MAAO,GtFo6bVpQ,GAAQkB,QsFv5bMmjE,GtF25bT,SAASpkE,EAAQD,EAASM,GAE/B,YuFz6bM,SAASi1D,GAAsBrsD,GACpC,OACEqpD,SACA+R,iBAAiB,EACjBC,QAASr7D,EAAQg4C,sBvFu6bpB//C,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EuF96beu1D,uBAfhBj1D,GAAA,IvFw9bM,SAASL,EAAQD,EAASM,GAE/B,YAgBA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EwF99bnQ,QAASwiE,GAASzR,GAA6D,GAA5Cpb,GAA4CnzC,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAAjCuuD,EAAgBuR,gBACtDh9D,EAAQyrD,EAAgBR,MAAM5a,EAGpC,OAFArwC,GAAM6vC,QAAUQ,EAAW,EAC3BrwC,EAAM8vC,QAAUO,EAAYob,EAAgBR,MAAMxtD,OAAS,EACpD+G,QAAQC,QAAQzE,GASlB,QAASwrD,GAAUC,EAAiBzrD,GACzC,GAAMqD,GAAiBynD,EAASrZ,WAAWzxC,GACrCm9D,EAA2B1R,CAQjC,OAPA0R,GAAyBH,iBAAmB,EAC5CG,EAAyBlS,MAAQkS,EAAyBlS,MAAMlsD,MAAM,EAAGo+D,EAAyBH,iBAClGG,EAAyBlS,MAAMvhD,KAAKrG,GAChC85D,EAAyBlS,MAAMxtD,OAAS0/D,EAAyBF,UACnEE,EAAyBlS,MAAMyR,QAC/BS,EAAyBH,mBAEpBE,EAASzR,GAQX,QAASgC,GAAKhC,GACnB,GAAM0R,GAA2B1R,CAKjC,OAJI0R,GAAyBH,gBAAkB,IAC7CG,EAAyBH,iBAAmB,EAC5CliE,EAAAO,YAAOoH,MAAM,aAAc06D,EAAyBH,kBAE/CE,EAASzR,GAQX,QAASkC,GAAKlC,GACnB,GAAM0R,GAA2B1R,CAKjC,OAJI0R,GAAyBH,gBAAkBG,EAAyBlS,MAAMxtD,OAAS,IACrF0/D,EAAyBH,iBAAmB,EAC5CliE,EAAAO,YAAOoH,MAAM,aAAc06D,EAAyBH,kBAE/CE,EAASzR,GAUX,QAASoC,GAAMpC,EAAiBzrD,EAAO4B,GAC5C,MAAO4pD,GAAUC,EAAiBX,EAAS3b,YAAYvtC,IxFk5bxD/H,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EwFt8be8yD,YxFu8bf9yD,EwFr7be+0D,OxFs7bf/0D,EwFx6bei1D,OxFy6bfj1D,EwFz5bem1D,OAzEhB,IAAAnf,GAAA11C,EAAA,IAAY8xD,ExFs+bIrwD,EAAwBi0C,GwFr+bxC5zC,EAAA9B,EAAA,IxFyjcM,SAASL,EAAQD,EAASM,GAE/B,YAaA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EyFtkcnQ,QAAS44D,GAAa8J,GAAgC,GAAbC,GAAangE,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAAJ,GAE1C43C,EAAkBv2C,SAClBq3C,EAASd,EAAgBE,cAAc,SAK7C,OAJAY,GAAO9sC,MAAQrC,KAAKwC,IAAIm0D,EAAkBtsB,KAAOssB,EAAkBzsB,MAAS,EAAI0sB,EAChFznB,EAAOV,MAAMpsC,MAAQ8sC,EAAO9sC,MAAQ,KACpC8sC,EAAOnC,OAAShtC,KAAKwC,IAAIm0D,EAAkBnsB,KAAOmsB,EAAkBpsB,MAAS,EAAIqsB,EACjFznB,EAAOV,MAAMzB,OAASmC,EAAOnC,OAAS,KAC/BmC,EAUF,QAASoZ,GAAShvD,EAAO+5C,GAAsB,GAAbsjB,GAAangE,UAAAO,OAAA,GAAArD,SAAA8C,UAAA,GAAAA,UAAA,GAAJ,GAC1CkgE,EAAoBtS,EAASra,qBAAqBzwC,GAClD8zD,EAAkBR,EAAa8J,EAAmBC,GAClDxJ,EAAkBP,EAAa8J,EAAmBC,GAClDC,GACJzJ,kBACAE,uBAAwBF,EAAgBlB,WAAW,MACnDmB,kBACAE,uBAAwBF,EAAgBnB,WAAW,MAKrD,OAFA2K,GAAgBvJ,uBAAuBwJ,WAAWH,EAAkBzsB,KAAO0sB,GAASD,EAAkBpsB,KAAOqsB,IAC7G,EAAA9N,EAAArF,WAAUoT,EAAiBt9D,EAAO+5C,GAC3BujB,EAAgBzJ,gBAAgB2J,UAAU,azF4hclD3jE,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,EyF5ices2D,UArBhB,IAAAO,GAAAv2D,EAAA,IACA01C,EAAA11C,EAAA,IAAY8xD,EzFskcIrwD,EAAwBi0C,IA4ClC,SAAS/1C,EAAQD,EAASM,GAE/B,YAoBA,SAASyB,GAAwBf,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAIgB,KAAa,IAAW,MAAPhB,EAAe,IAAK,GAAIiB,KAAOjB,GAAWG,OAAOe,UAAUC,eAAexB,KAAKK,EAAKiB,KAAMD,EAAOC,GAAOjB,EAAIiB,GAAgC,OAAtBD,GAAOd,QAAUF,EAAYgB,EAElQ,QAASjB,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,G0F9ncjF,QAASO,GAASo7C,EAASzzC,EAASqrD,EAAaC,GAEtD,MADApyD,GAAAS,eAAOkH,MAAM,8BACN,GAAAlI,GAAAL,SAAam7C,EAASzzC,EAASqrD,EAAaC,GAQ9C,QAASlzD,GAAyB4H,GACvC,GAAMc,IACJC,eAAgBf,EAAQY,kBAAkBI,OAAOD,eAGnD,QAAQf,EAAQY,kBAAkByB,MAChC,IAAKhC,GAAArI,QAAoBuL,gBAAgBC,KACvC1C,EAAK+6D,UAAY77D,EAAQY,kBAAkBD,cAAcs4C,aACzD,MACF,KAAK54C,GAAArI,QAAoBuL,gBAAgBU,SACvCnD,EAAK+6D,UAAY77D,EAAQY,kBAAkB84C,kBAAkB/4C,cAAcs4C,cAM/E,MAAOn3C,GAAiBoB,IAAOlD,EAAQY,kBAAkBI,OAAOgB,OAAzD,MAAqEhC,EAAQY,kBAAkBI,OAAOiB,KAAtG,iDAA4JnB,G1FglcpK7I,OAAOC,eAAepB,EAAS,cAC7BqB,OAAO,IAETrB,E0F7mceuB,W1F8mcfvB,E0FpmcesB,0BAvBhB,IAAAc,GAAA9B,EAAA,GACAuB,EAAAvB,EAAA,IACA+L,EAAA/L,EAAA,G1FiocKiJ,EAAwBxI,EAAuBsL,G0FhocpDE,EAAAjM,EAAA,GAAY0K,E1FoocYjJ,EAAwBwK","file":"myscript.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyScript\"] = factory();\n\telse\n\t\troot[\"MyScript\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MyScript\"] = factory();\n\telse\n\t\troot[\"MyScript\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.getAvailableLanguageList = exports.register = exports.InkPaper = exports.DebugConfig = undefined;\n\t\n\tvar _DebugConfig = __webpack_require__(1);\n\t\n\tvar _DebugConfig2 = _interopRequireDefault(_DebugConfig);\n\t\n\tvar _InkPaper = __webpack_require__(63);\n\t\n\tvar _InkPaperFacade = __webpack_require__(88);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.DebugConfig = _DebugConfig2.default;\n\texports.InkPaper = _InkPaper.InkPaper;\n\texports.register = _InkPaperFacade.register;\n\texports.getAvailableLanguageList = _InkPaperFacade.getAvailableLanguageList;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar loggerConfig = _interopRequireWildcard(_LoggerConfig);\n\t\n\tvar _ModelStats = __webpack_require__(4);\n\t\n\tvar modelStats = _interopRequireWildcard(_ModelStats);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Debug configuration\n\t * @typedef {Object} DebugConfiguration\n\t * @property {Object} loggerConfig Loggers configuration\n\t * @property {Stats} modelStats Statistics about current model\n\t */\n\t\n\t/**\n\t * Debug configuration\n\t * @type {DebugConfiguration}\n\t */\n\texports.default = { loggerConfig: loggerConfig, modelStats: modelStats };\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.utilLogger = exports.testLogger = exports.recognizerLogger = exports.modelLogger = exports.rendererLogger = exports.inkpaperLogger = exports.grabberLogger = undefined;\n\t\n\tvar _loglevel = __webpack_require__(3);\n\t\n\tvar log = _interopRequireWildcard(_loglevel);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tvar logging = log.noConflict();\n\tlogging.setDefaultLevel(log.levels.ERROR); // TRACE,DEBUG,INFO,ERROR\n\tlogging.setLevel(log.levels.ERROR);\n\t\n\t/**\n\t * Log grabber events\n\t * @type {Object}\n\t */\n\tvar grabberLogger = logging.getLogger('grabber');\n\tgrabberLogger.setLevel(log.levels.INFO);\n\t\n\t/**\n\t * Log inkPaper events\n\t * @type {Object}\n\t */\n\tvar inkpaperLogger = logging.getLogger('inkpaper');\n\tinkpaperLogger.setLevel(log.levels.INFO);\n\t\n\t/**\n\t * Log grabber events\n\t * @type {Object}\n\t */\n\tvar rendererLogger = logging.getLogger('renderer');\n\trendererLogger.setLevel(log.levels.INFO);\n\t\n\t/**\n\t * Log model events\n\t * @type {Object}\n\t */\n\tvar modelLogger = logging.getLogger('model');\n\tmodelLogger.setLevel(log.levels.INFO);\n\t\n\t/**\n\t * Log recognizer events\n\t * @type {Object}\n\t */\n\tvar recognizerLogger = logging.getLogger('recognizer');\n\trecognizerLogger.setLevel(log.levels.DEBUG);\n\t\n\t/**\n\t * Log tests events\n\t * @type {Object}\n\t */\n\tvar testLogger = logging.getLogger('tests');\n\ttestLogger.setLevel(log.levels.INFO);\n\t\n\t/**\n\t * Log util events\n\t * @type {Object}\n\t */\n\tvar utilLogger = logging.getLogger('util');\n\tutilLogger.setLevel(log.levels.INFO);\n\t\n\texports.grabberLogger = grabberLogger;\n\texports.inkpaperLogger = inkpaperLogger;\n\texports.rendererLogger = rendererLogger;\n\texports.modelLogger = modelLogger;\n\texports.recognizerLogger = recognizerLogger;\n\texports.testLogger = testLogger;\n\texports.utilLogger = utilLogger;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t* loglevel - https://github.com/pimterry/loglevel\n\t*\n\t* Copyright (c) 2013 Tim Perry\n\t* Licensed under the MIT license.\n\t*/\n\t(function (root, definition) {\n\t    \"use strict\";\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof module === 'object' && module.exports) {\n\t        module.exports = definition();\n\t    } else {\n\t        root.log = definition();\n\t    }\n\t}(this, function () {\n\t    \"use strict\";\n\t    var noop = function() {};\n\t    var undefinedType = \"undefined\";\n\t\n\t    function realMethod(methodName) {\n\t        if (typeof console === undefinedType) {\n\t            return false; // We can't build a real method without a console to log to\n\t        } else if (console[methodName] !== undefined) {\n\t            return bindMethod(console, methodName);\n\t        } else if (console.log !== undefined) {\n\t            return bindMethod(console, 'log');\n\t        } else {\n\t            return noop;\n\t        }\n\t    }\n\t\n\t    function bindMethod(obj, methodName) {\n\t        var method = obj[methodName];\n\t        if (typeof method.bind === 'function') {\n\t            return method.bind(obj);\n\t        } else {\n\t            try {\n\t                return Function.prototype.bind.call(method, obj);\n\t            } catch (e) {\n\t                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n\t                return function() {\n\t                    return Function.prototype.apply.apply(method, [obj, arguments]);\n\t                };\n\t            }\n\t        }\n\t    }\n\t\n\t    // these private functions always need `this` to be set properly\n\t\n\t    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n\t        return function () {\n\t            if (typeof console !== undefinedType) {\n\t                replaceLoggingMethods.call(this, level, loggerName);\n\t                this[methodName].apply(this, arguments);\n\t            }\n\t        };\n\t    }\n\t\n\t    function replaceLoggingMethods(level, loggerName) {\n\t        /*jshint validthis:true */\n\t        for (var i = 0; i < logMethods.length; i++) {\n\t            var methodName = logMethods[i];\n\t            this[methodName] = (i < level) ?\n\t                noop :\n\t                this.methodFactory(methodName, level, loggerName);\n\t        }\n\t    }\n\t\n\t    function defaultMethodFactory(methodName, level, loggerName) {\n\t        /*jshint validthis:true */\n\t        return realMethod(methodName) ||\n\t               enableLoggingWhenConsoleArrives.apply(this, arguments);\n\t    }\n\t\n\t    var logMethods = [\n\t        \"trace\",\n\t        \"debug\",\n\t        \"info\",\n\t        \"warn\",\n\t        \"error\"\n\t    ];\n\t\n\t    function Logger(name, defaultLevel, factory) {\n\t      var self = this;\n\t      var currentLevel;\n\t      var storageKey = \"loglevel\";\n\t      if (name) {\n\t        storageKey += \":\" + name;\n\t      }\n\t\n\t      function persistLevelIfPossible(levelNum) {\n\t          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\t\n\t          // Use localStorage if available\n\t          try {\n\t              window.localStorage[storageKey] = levelName;\n\t              return;\n\t          } catch (ignore) {}\n\t\n\t          // Use session cookie as fallback\n\t          try {\n\t              window.document.cookie =\n\t                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n\t          } catch (ignore) {}\n\t      }\n\t\n\t      function getPersistedLevel() {\n\t          var storedLevel;\n\t\n\t          try {\n\t              storedLevel = window.localStorage[storageKey];\n\t          } catch (ignore) {}\n\t\n\t          if (typeof storedLevel === undefinedType) {\n\t              try {\n\t                  var cookie = window.document.cookie;\n\t                  var location = cookie.indexOf(\n\t                      encodeURIComponent(storageKey) + \"=\");\n\t                  if (location) {\n\t                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n\t                  }\n\t              } catch (ignore) {}\n\t          }\n\t\n\t          // If the stored level is not valid, treat it as if nothing was stored.\n\t          if (self.levels[storedLevel] === undefined) {\n\t              storedLevel = undefined;\n\t          }\n\t\n\t          return storedLevel;\n\t      }\n\t\n\t      /*\n\t       *\n\t       * Public API\n\t       *\n\t       */\n\t\n\t      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n\t          \"ERROR\": 4, \"SILENT\": 5};\n\t\n\t      self.methodFactory = factory || defaultMethodFactory;\n\t\n\t      self.getLevel = function () {\n\t          return currentLevel;\n\t      };\n\t\n\t      self.setLevel = function (level, persist) {\n\t          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n\t              level = self.levels[level.toUpperCase()];\n\t          }\n\t          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n\t              currentLevel = level;\n\t              if (persist !== false) {  // defaults to true\n\t                  persistLevelIfPossible(level);\n\t              }\n\t              replaceLoggingMethods.call(self, level, name);\n\t              if (typeof console === undefinedType && level < self.levels.SILENT) {\n\t                  return \"No console available for logging\";\n\t              }\n\t          } else {\n\t              throw \"log.setLevel() called with invalid level: \" + level;\n\t          }\n\t      };\n\t\n\t      self.setDefaultLevel = function (level) {\n\t          if (!getPersistedLevel()) {\n\t              self.setLevel(level, false);\n\t          }\n\t      };\n\t\n\t      self.enableAll = function(persist) {\n\t          self.setLevel(self.levels.TRACE, persist);\n\t      };\n\t\n\t      self.disableAll = function(persist) {\n\t          self.setLevel(self.levels.SILENT, persist);\n\t      };\n\t\n\t      // Initialize with the right level\n\t      var initialLevel = getPersistedLevel();\n\t      if (initialLevel == null) {\n\t          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\t      }\n\t      self.setLevel(initialLevel, false);\n\t    }\n\t\n\t    /*\n\t     *\n\t     * Package-level API\n\t     *\n\t     */\n\t\n\t    var defaultLogger = new Logger();\n\t\n\t    var _loggersByName = {};\n\t    defaultLogger.getLogger = function getLogger(name) {\n\t        if (typeof name !== \"string\" || name === \"\") {\n\t          throw new TypeError(\"You must supply a name when creating a logger.\");\n\t        }\n\t\n\t        var logger = _loggersByName[name];\n\t        if (!logger) {\n\t          logger = _loggersByName[name] = new Logger(\n\t            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n\t        }\n\t        return logger;\n\t    };\n\t\n\t    // Grab the current global log variable in case of overwrite\n\t    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n\t    defaultLogger.noConflict = function() {\n\t        if (typeof window !== undefinedType &&\n\t               window.log === defaultLogger) {\n\t            window.log = _log;\n\t        }\n\t\n\t        return defaultLogger;\n\t    };\n\t\n\t    return defaultLogger;\n\t}));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.computeStats = computeStats;\n\t\n\tvar _Cdkv3RestTextRecognizer = __webpack_require__(5);\n\t\n\tvar Cdkv3RestTextRecognizer = _interopRequireWildcard(_Cdkv3RestTextRecognizer);\n\t\n\tvar _MyScriptJSOptions = __webpack_require__(53);\n\t\n\tvar MyScriptJSOptions = _interopRequireWildcard(_MyScriptJSOptions);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * @typedef {Object} Stats\n\t * @property {Number} strokesCount\n\t * @property {Number} pointsCount\n\t * @property {Number} byteSize\n\t * @property {Number} humanSize\n\t * @property {String} humanUnit\n\t */\n\t\n\t/**\n\t * @param {Model} model Current model\n\t * @return {Stats} Statistics about recognition\n\t */\n\tfunction computeStats(model) {\n\t  var stats = { strokesCount: 0, pointsCount: 0, byteSize: 0, humanSize: 0, humanUnit: 'BYTE' };\n\t  if (model.rawStrokes) {\n\t    stats.strokesCount = model.rawStrokes.length;\n\t\n\t    var restMessage = Cdkv3RestTextRecognizer.buildInput(MyScriptJSOptions.overrideDefaultOptions({}), model);\n\t    stats.pointsCount = model.rawStrokes.map(function (stroke) {\n\t      return stroke.x.length;\n\t    }).reduce(function (a, b) {\n\t      return a + b;\n\t    }, 0);\n\t    // We start with 270 as it is the size in bytes. Make a real computation implies to recode a doRecognition\n\t    var byteSize = restMessage.textInput.length;\n\t    stats.byteSize = byteSize;\n\t    if (byteSize < 270) {\n\t      stats.humanUnit = 'BYTE';\n\t      stats.byteSize = 0;\n\t      stats.humanSize = 0;\n\t    } else if (byteSize < 2048) {\n\t      stats.humanUnit = 'BYTES';\n\t      stats.humanSize = byteSize;\n\t    } else if (byteSize < 1024 * 1024) {\n\t      stats.humanUnit = 'KiB';\n\t      stats.humanSize = (byteSize / 1024).toFixed(2);\n\t    } else {\n\t      stats.humanUnit = 'MiB';\n\t      stats.humanSize = (byteSize / 1024 / 1024).toFixed(2);\n\t    }\n\t  }\n\t  return stats;\n\t}\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.textRestV3Configuration = exports.close = exports.init = undefined;\n\t\n\tvar _DefaultRecognizer = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'init', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.init;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.buildInput = buildInput;\n\texports.recognize = recognize;\n\texports.reset = reset;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar _Cdkv3CommonRestRecognizer = __webpack_require__(47);\n\t\n\tvar _Cdkv3CommonTextRecognizer = __webpack_require__(52);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar textRestV3Configuration = exports.textRestV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.TEXT,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.REST,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, _Cdkv3CommonRestRecognizer.commonRestV3Configuration, textRestV3Configuration);\n\t}\n\t\n\t/**\n\t * Internal function to build the payload to ask for a recognition.\n\t * @param {Options} options\n\t * @param {Model} model\n\t * @param {String} instanceId\n\t * @return {Object}\n\t */\n\tfunction buildInput(options, model, instanceId) {\n\t  var input = {\n\t    inputUnits: [{\n\t      textInputType: _MyScriptJSConstants2.default.InputType.MULTI_LINE_TEXT,\n\t      // As Rest TEXT recognition is non incremental wa add the already recognized strokes\n\t      components: model.rawStrokes.map(function (stroke) {\n\t        return StrokeComponent.toJSON(stroke);\n\t      })\n\t    }]\n\t  };\n\t  Object.assign(input, { textParameter: options.recognitionParams.textParameter }); // Building the input with the suitable parameters\n\t\n\t  _LoggerConfig.recognizerLogger.debug('input.inputUnits[0].components size is ' + input.inputUnits[0].components.length);\n\t\n\t  var data = {\n\t    instanceId: instanceId,\n\t    applicationKey: options.recognitionParams.server.applicationKey,\n\t    textInput: JSON.stringify(input)\n\t  };\n\t\n\t  if (options.recognitionParams.server.hmacKey) {\n\t    data.hmac = CryptoHelper.computeHmac(data.textInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  var modelReference = model;\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  var data = buildInput(options, modelReference, recognizerContextReference.textInstanceId);\n\t  (0, _RecognizerContext.updateSentRecognitionPositions)(recognizerContextReference, modelReference);\n\t  return NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/text/doSimpleRecognition.json', data).then(function (response) {\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestTextRecognizer success', response);\n\t    recognizerContextReference.textInstanceId = response.instanceId;\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestTextRecognizer update model', response);\n\t    modelReference.rawResult = response;\n\t    modelReference.rawResult.type = textRestV3Configuration.type.toLowerCase() + 'Result';\n\t    return modelReference;\n\t  }).then(_Cdkv3CommonTextRecognizer.processRenderingResult).then(_Cdkv3CommonRestRecognizer.updateModelReceivedPosition);\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  (0, _RecognizerContext.resetRecognitionPositions)(recognizerContext, model);\n\t  // We are explicitly manipulating a reference here.\n\t  // eslint-disable-next-line no-param-reassign\n\t  delete recognizerContext.textInstanceId;\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.reset = reset;\n\texports.close = close;\n\texports.init = init;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Recognizer info\n\t * @typedef {Object} RecognizerInfo\n\t * @property {String} type Supported recognition type (TEXT, MATH, SHAPE, MUSIC, ANALYZER).\n\t * @property {String} protocol Supported protocol (REST, WEBSOCKET).\n\t * @property {String} apiVersion Supported API version.\n\t * @property {Array<String>} availableTriggers Supported triggers for this recognizer.\n\t * @property {String} preferredTrigger Preferred recognition trigger for this recognizer.\n\t */\n\t\n\t/**\n\t * Recognition service entry point\n\t * @typedef {Object} Recognizer\n\t * @property {function(): RecognizerInfo} getInfo Get information about the supported configuration (protocol, type, apiVersion, ...).\n\t * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} init Initialize recognition.\n\t * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} reset Clear server context. Currently nothing to do there.\n\t * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} recognize Do the recognition.\n\t * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} close Close and free all resources that will no longer be used by the recognizer.\n\t */\n\t\n\t/**\n\t * Clear server context. Currently nothing to do there.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  _LoggerConfig.recognizerLogger.debug('No reset behavior');\n\t  return Promise.resolve(model);\n\t}\n\t\n\t/**\n\t * Close and free all resources that will no longer be used by the recognizer.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Fulfilled when the close phase is over.\n\t */\n\tfunction close(options, model, recognizerContext) {\n\t  _LoggerConfig.recognizerLogger.debug('No close behavior');\n\t  return Promise.resolve(model);\n\t}\n\t\n\t/**\n\t * Initialize recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Fulfilled when the init phase is over.\n\t */\n\tfunction init(options, model, recognizerContext) {\n\t  _LoggerConfig.recognizerLogger.debug('No init behavior');\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * @typedef {Object} Constants\n\t * @property {{TEXT: String, MATH: String, SHAPE: String, MUSIC: String, ANALYZER: String}} RecognitionType\n\t * @property {{CURSIVE: String, ISOLATED: String, SUPERIMPOSED: String, VERTICAL: String}} InputMode\n\t * @property {{CHAR: String, WORD: String, SINGLE_LINE_TEXT: String, MULTI_LINE_TEXT: String}} InputType\n\t * @property {{TEXT: String, WORD: String, CHARACTER: String}} ResultDetail\n\t * @property {{Math: {LATEX: String, MATHML: String, SYMBOLTREE: String, OFFICEOPENXMLMATH: String}, Music: {MUSICXML: String, SCORETREE: String}}} ResultType\n\t * @property {{WEBSOCKET: String, REST: String}} Protocol\n\t * @property {{INITIALIZING: String, ASKING_FOR_RECOGNITION: String, PROCESSING_RECOGNITION_RESULT: String, RENDERING_RECOGNITION: String, RECOGNITION_ERROR: String, RECOGNITION_OVER: String}} ModelState\n\t * @property {{QUIET_PERIOD: String, PEN_UP: String, DEMAND: String}} RecognitionTrigger\n\t */\n\t\n\tvar Constants = {\n\t  RecognitionType: {\n\t    TEXT: 'TEXT',\n\t    MATH: 'MATH',\n\t    SHAPE: 'SHAPE',\n\t    MUSIC: 'MUSIC',\n\t    ANALYZER: 'ANALYZER'\n\t  },\n\t  InputMode: {\n\t    CURSIVE: 'CURSIVE',\n\t    ISOLATED: 'ISOLATED',\n\t    SUPERIMPOSED: 'SUPERIMPOSED',\n\t    VERTICAL: 'VERTICAL'\n\t  },\n\t  InputType: {\n\t    CHAR: 'CHAR',\n\t    WORD: 'WORD',\n\t    SINGLE_LINE_TEXT: 'SINGLE_LINE_TEXT',\n\t    MULTI_LINE_TEXT: 'MULTI_LINE_TEXT'\n\t  },\n\t  ResultDetail: {\n\t    TEXT: 'TEXT',\n\t    WORD: 'WORD',\n\t    CHARACTER: 'CHARACTER'\n\t  },\n\t  ResultType: {\n\t    Math: {\n\t      LATEX: 'LATEX',\n\t      MATHML: 'MATHML',\n\t      SYMBOLTREE: 'SYMBOLTREE',\n\t      OFFICEOPENXMLMATH: 'OFFICEOPENXMLMATH'\n\t    },\n\t    Music: {\n\t      MUSICXML: 'MUSICXML',\n\t      SCORETREE: 'SCORETREE'\n\t    }\n\t  },\n\t  Protocol: {\n\t    WEBSOCKET: 'WEBSOCKET',\n\t    REST: 'REST'\n\t  },\n\t  ModelState: {\n\t    INITIALIZING: 'INITIALIZING',\n\t    ASKING_FOR_RECOGNITION: 'ASKING FOR RECOGNITION',\n\t    PROCESSING_RECOGNITION_RESULT: 'PROCESSING RECOGNITION RESULT',\n\t    RENDERING_RECOGNITION: 'RENDERING RECOGNITION',\n\t    RECOGNITION_ERROR: 'RECOGNITION ERROR',\n\t    RECOGNITION_OVER: 'RECOGNITION OVER'\n\t  },\n\t  RecognitionTrigger: {\n\t    QUIET_PERIOD: 'QUIET_PERIOD',\n\t    PEN_UP: 'PEN_UP',\n\t    DEMAND: 'DEMAND'\n\t  }\n\t};\n\texports.default = Constants;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createStrokeComponent = createStrokeComponent;\n\texports.toJSON = toJSON;\n\texports.addPoint = addPoint;\n\texports.slice = slice;\n\texports.getPointByIndex = getPointByIndex;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Stroke symbol\n\t * @typedef {Object} Stroke\n\t * @property {String} type Symbol type, 'stroke' for stroke\n\t * @property {Array<Number>} x X coordinates\n\t * @property {Array<Number>} y Y coordinates\n\t * @property {Array<Number>} t Timestamps matching x,y coordinates\n\t * @property {Array<Number>} p Pressure\n\t * @property {Array<Number>} l Length from origin\n\t * @property {Number} width (for rendering) Pen/brush width\n\t * @property {String} color (for rendering) Pen/brush color\n\t */\n\t\n\tfunction computeDistance(x, y, xArray, yArray, lastIndexPoint) {\n\t  var distance = Math.sqrt(Math.pow(y - yArray[lastIndexPoint - 1], 2) + Math.pow(x - xArray[lastIndexPoint - 1], 2));\n\t  return isNaN(distance) ? 0 : distance;\n\t}\n\t\n\tfunction computeLength(x, y, xArray, yArray, lArray, lastIndexPoint) {\n\t  var length = lArray[lastIndexPoint - 1] + computeDistance(x, y, xArray, yArray, lastIndexPoint);\n\t  return isNaN(length) ? 0 : length;\n\t}\n\t\n\tfunction computePressure(x, y, xArray, yArray, lArray, lastIndexPoint) {\n\t  var ratio = 1.0;\n\t  var distance = computeDistance(x, y, xArray, yArray, lastIndexPoint);\n\t  var length = computeLength(x, y, xArray, yArray, lArray, lastIndexPoint);\n\t\n\t  if (length === 0) {\n\t    ratio = 0.5;\n\t  } else if (distance === length) {\n\t    ratio = 1.0;\n\t  } else if (distance < 10) {\n\t    ratio = 0.2 + Math.pow(0.1 * distance, 0.4);\n\t  } else if (distance > length - 10) {\n\t    ratio = 0.2 + Math.pow(0.1 * (length - distance), 0.4);\n\t  }\n\t  var pressure = ratio * Math.max(0.1, 1.0 - 0.1 * Math.sqrt(distance));\n\t  return isNaN(parseFloat(pressure)) ? 0.5 : pressure;\n\t}\n\t\n\tfunction filterPointByAcquisitionDelta(x, y, xArray, yArray, width) {\n\t  var delta = 2 + width / 4;\n\t  var ret = false;\n\t  if (xArray.length === 0 || yArray.length === 0 || Math.abs(xArray[xArray.length - 1] - x) >= delta || Math.abs(yArray[yArray.length - 1] - y) >= delta) {\n\t    ret = true;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Create a new stroke\n\t * @param {Object} properties Properties to be applied to the stroke.\n\t * @return {Stroke} New stroke with properties for quadratics draw\n\t */\n\tfunction createStrokeComponent(properties) {\n\t  var defaultStroke = {\n\t    type: 'stroke',\n\t    x: [],\n\t    y: [],\n\t    t: [],\n\t    p: [],\n\t    l: [],\n\t    width: 0\n\t  };\n\t  return Object.assign({}, defaultStroke, properties);\n\t}\n\t\n\t/**\n\t * Get a JSON copy of a stroke by filtering its properties\n\t * @param {Stroke} stroke Current stroke\n\t * @return {{type: String, x: Array<Number>, y: Array<Number>, t: Array<Number>}} Simplified stroke object\n\t */\n\tfunction toJSON(stroke) {\n\t  return { type: stroke.type, x: stroke.x, y: stroke.y, t: stroke.t };\n\t}\n\t\n\t/**\n\t * Mutate a stroke by adding a point to it.\n\t * @param {Stroke} stroke Current stroke\n\t * @param {{x: Number, y: Number, t: Number}} point Point to add\n\t * @return {Stroke} Updated stroke\n\t */\n\tfunction addPoint(stroke, point) {\n\t  var strokeReference = stroke;\n\t  if (filterPointByAcquisitionDelta(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.width)) {\n\t    strokeReference.x.push(point.x);\n\t    strokeReference.y.push(point.y);\n\t    strokeReference.t.push(point.t);\n\t    strokeReference.p.push(computePressure(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.l, strokeReference.x.length - 1));\n\t    strokeReference.l.push(computeLength(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.l, strokeReference.x.length - 1));\n\t  } else {\n\t    _LoggerConfig.modelLogger.debug('ignore filtered point', point);\n\t  }\n\t  return strokeReference;\n\t}\n\t\n\t/**\n\t * Slice a stroke and return the sliced part of it\n\t * @param {Stroke} stroke Current stroke\n\t * @param {Number} [start=0] Zero-based index at which to begin extraction\n\t * @param {Number} [end=length] Zero-based index at which to end extraction\n\t * @return {Stroke} Sliced stroke\n\t */\n\tfunction slice(stroke) {\n\t  var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stroke.x.length;\n\t\n\t  var slicedStroke = createStrokeComponent({ color: stroke.color, width: stroke.width });\n\t  for (var i = start; i < end; i++) {\n\t    addPoint(slicedStroke, {\n\t      x: stroke.x[i],\n\t      y: stroke.y[i],\n\t      t: stroke.t[i]\n\t    });\n\t  }\n\t  return slicedStroke;\n\t}\n\t\n\t/**\n\t * Extract point by index\n\t * @param {Stroke} stroke Current stroke\n\t * @param {Number} index Zero-based index\n\t * @return {{x: Number, y: Number, t: Number, p: Number, l: Number}} Point with properties for quadratics draw\n\t */\n\tfunction getPointByIndex(stroke, index) {\n\t  var point = void 0;\n\t  if (index !== undefined && index >= 0 && index < stroke.x.length) {\n\t    point = {\n\t      x: stroke.x[index],\n\t      y: stroke.y[index],\n\t      t: stroke.t[index],\n\t      p: stroke.p[index],\n\t      l: stroke.l[index]\n\t    };\n\t  }\n\t  return point;\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.parse = parse;\n\texports.transformRequest = transformRequest;\n\texports.xhr = xhr;\n\texports.get = get;\n\texports.post = post;\n\t/**\n\t * Parse JSON String to Object\n\t * @param {Object} req JSON string result to be parsed\n\t * @return {Object} Parsed response\n\t */\n\tfunction parse(req) {\n\t  var result = void 0;\n\t  try {\n\t    result = JSON.parse(req.responseText);\n\t  } catch (e) {\n\t    result = req.responseText;\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Transform object data request to a list of parameters\n\t * @param {Object} obj Query properties\n\t * @return {String} URI encoded string\n\t */\n\tfunction transformRequest(obj) {\n\t  var str = [];\n\t  Object.keys(obj).forEach(function (p) {\n\t    if (typeof obj[p] !== 'undefined' && typeof obj[p] !== 'function') {\n\t      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n\t    }\n\t  });\n\t  return str.join('&');\n\t}\n\t\n\t/**\n\t * Send request to the network and return a promise\n\t * @param {String} type Request type (GET/POST)\n\t * @param {String} url URL\n\t * @param {Object} data Data to be sent\n\t * @param {function} [notify] Notification function\n\t * @return {Promise}\n\t */\n\tfunction xhr(type, url, data, notify) {\n\t  return new Promise(function (resolve, reject) {\n\t    // We are writing some browser module here so the no import found should be ignored\n\t    // eslint-disable-next-line no-undef\n\t    var request = new XMLHttpRequest();\n\t    request.open(type, url, true);\n\t    request.withCredentials = true;\n\t    request.setRequestHeader('Accept', 'application/json');\n\t    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t\n\t    request.onerror = function () {\n\t      reject(new Error('Can\\'t XHR ' + url));\n\t    };\n\t\n\t    request.onprogress = function (e) {\n\t      if (notify) {\n\t        notify(e.loaded / e.total);\n\t      }\n\t    };\n\t\n\t    request.onload = function () {\n\t      if (request.status >= 200 && request.status < 300) {\n\t        resolve(parse(request));\n\t      } else {\n\t        reject(new Error(request.responseText));\n\t      }\n\t    };\n\t\n\t    request.onreadystatechange = function () {\n\t      if (request.readyState === 4) {\n\t        if (request.status >= 200 && request.status < 300) {\n\t          resolve(parse(request));\n\t        }\n\t      }\n\t    };\n\t\n\t    request.send(data ? transformRequest(data) : undefined);\n\t  });\n\t}\n\t\n\t/**\n\t * Get request\n\t * @param {String} src URL\n\t * @param {Object} params Query properties\n\t * @return {Promise}\n\t */\n\tfunction get(src, params) {\n\t  var newSrc = src;\n\t  if (params) {\n\t    newSrc += '?' + transformRequest(params);\n\t  }\n\t  return xhr('GET', newSrc, undefined);\n\t}\n\t\n\t/**\n\t * Post request\n\t * @private\n\t * @param {String} url URL\n\t * @param {Object} data Data to be sent\n\t * @return {Promise}\n\t */\n\tfunction post(url, data) {\n\t  return xhr('POST', url, data);\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.computeHmac = computeHmac;\n\t\n\tvar _cryptoJs = __webpack_require__(11);\n\t\n\tvar _hmacSha = __webpack_require__(45);\n\t\n\tvar _hmacSha2 = _interopRequireDefault(_hmacSha);\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Compute HMAC signature for server authentication\n\t *\n\t * @param {Object} input Input data to compute HMAC\n\t * @param {String} applicationKey Current applicationKey\n\t * @param {String} hmacKey Current hmacKey\n\t * @return {String} Signature\n\t */\n\tfunction computeHmac(input, applicationKey, hmacKey) {\n\t  var jsonInput = (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' ? JSON.stringify(input) : input;\n\t  _LoggerConfig.recognizerLogger.debug('The HmacSHA512 function is loaded', _hmacSha2.default);\n\t  return new _hmacSha2.default(jsonInput, applicationKey + hmacKey).toString(_cryptoJs.enc.Hex);\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(13), __webpack_require__(14), __webpack_require__(15), __webpack_require__(16), __webpack_require__(17), __webpack_require__(18), __webpack_require__(19), __webpack_require__(20), __webpack_require__(21), __webpack_require__(22), __webpack_require__(23), __webpack_require__(24), __webpack_require__(25), __webpack_require__(26), __webpack_require__(27), __webpack_require__(28), __webpack_require__(29), __webpack_require__(30), __webpack_require__(31), __webpack_require__(32), __webpack_require__(33), __webpack_require__(34), __webpack_require__(35), __webpack_require__(36), __webpack_require__(37), __webpack_require__(38), __webpack_require__(39), __webpack_require__(40), __webpack_require__(41), __webpack_require__(42), __webpack_require__(43), __webpack_require__(44));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\troot.CryptoJS = factory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory();\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\troot.CryptoJS = factory();\n\t\t}\n\t}(this, function () {\n\t\n\t\t/**\n\t\t * CryptoJS core components.\n\t\t */\n\t\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t\t    /*\n\t\t     * Local polyfil of Object.create\n\t\t     */\n\t\t    var create = Object.create || (function () {\n\t\t        function F() {};\n\t\n\t\t        return function (obj) {\n\t\t            var subtype;\n\t\n\t\t            F.prototype = obj;\n\t\n\t\t            subtype = new F();\n\t\n\t\t            F.prototype = null;\n\t\n\t\t            return subtype;\n\t\t        };\n\t\t    }())\n\t\n\t\t    /**\n\t\t     * CryptoJS namespace.\n\t\t     */\n\t\t    var C = {};\n\t\n\t\t    /**\n\t\t     * Library namespace.\n\t\t     */\n\t\t    var C_lib = C.lib = {};\n\t\n\t\t    /**\n\t\t     * Base object for prototypal inheritance.\n\t\t     */\n\t\t    var Base = C_lib.Base = (function () {\n\t\n\t\n\t\t        return {\n\t\t            /**\n\t\t             * Creates a new object that inherits from this object.\n\t\t             *\n\t\t             * @param {Object} overrides Properties to copy into the new object.\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         field: 'value',\n\t\t             *\n\t\t             *         method: function () {\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            extend: function (overrides) {\n\t\t                // Spawn\n\t\t                var subtype = create(this);\n\t\n\t\t                // Augment\n\t\t                if (overrides) {\n\t\t                    subtype.mixIn(overrides);\n\t\t                }\n\t\n\t\t                // Create default initializer\n\t\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t\t                    subtype.init = function () {\n\t\t                        subtype.$super.init.apply(this, arguments);\n\t\t                    };\n\t\t                }\n\t\n\t\t                // Initializer's prototype is the subtype object\n\t\t                subtype.init.prototype = subtype;\n\t\n\t\t                // Reference supertype\n\t\t                subtype.$super = this;\n\t\n\t\t                return subtype;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Extends this object and runs the init method.\n\t\t             * Arguments to create() will be passed to init().\n\t\t             *\n\t\t             * @return {Object} The new object.\n\t\t             *\n\t\t             * @static\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var instance = MyType.create();\n\t\t             */\n\t\t            create: function () {\n\t\t                var instance = this.extend();\n\t\t                instance.init.apply(instance, arguments);\n\t\n\t\t                return instance;\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Initializes a newly created object.\n\t\t             * Override this method to add some logic when your objects are created.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t\t             *         init: function () {\n\t\t             *             // ...\n\t\t             *         }\n\t\t             *     });\n\t\t             */\n\t\t            init: function () {\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Copies properties into this object.\n\t\t             *\n\t\t             * @param {Object} properties The properties to mix in.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     MyType.mixIn({\n\t\t             *         field: 'value'\n\t\t             *     });\n\t\t             */\n\t\t            mixIn: function (properties) {\n\t\t                for (var propertyName in properties) {\n\t\t                    if (properties.hasOwnProperty(propertyName)) {\n\t\t                        this[propertyName] = properties[propertyName];\n\t\t                    }\n\t\t                }\n\t\n\t\t                // IE won't copy toString using the loop above\n\t\t                if (properties.hasOwnProperty('toString')) {\n\t\t                    this.toString = properties.toString;\n\t\t                }\n\t\t            },\n\t\n\t\t            /**\n\t\t             * Creates a copy of this object.\n\t\t             *\n\t\t             * @return {Object} The clone.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     var clone = instance.clone();\n\t\t             */\n\t\t            clone: function () {\n\t\t                return this.init.prototype.extend(this);\n\t\t            }\n\t\t        };\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * An array of 32-bit words.\n\t\t     *\n\t\t     * @property {Array} words The array of 32-bit words.\n\t\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t\t     */\n\t\t    var WordArray = C_lib.WordArray = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created word array.\n\t\t         *\n\t\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t\t         */\n\t\t        init: function (words, sigBytes) {\n\t\t            words = this.words = words || [];\n\t\n\t\t            if (sigBytes != undefined) {\n\t\t                this.sigBytes = sigBytes;\n\t\t            } else {\n\t\t                this.sigBytes = words.length * 4;\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this word array to a string.\n\t\t         *\n\t\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t\t         *\n\t\t         * @return {string} The stringified word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var string = wordArray + '';\n\t\t         *     var string = wordArray.toString();\n\t\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t\t         */\n\t\t        toString: function (encoder) {\n\t\t            return (encoder || Hex).stringify(this);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Concatenates a word array to this word array.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array to append.\n\t\t         *\n\t\t         * @return {WordArray} This word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray1.concat(wordArray2);\n\t\t         */\n\t\t        concat: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var thisWords = this.words;\n\t\t            var thatWords = wordArray.words;\n\t\t            var thisSigBytes = this.sigBytes;\n\t\t            var thatSigBytes = wordArray.sigBytes;\n\t\n\t\t            // Clamp excess bits\n\t\t            this.clamp();\n\t\n\t\t            // Concat\n\t\t            if (thisSigBytes % 4) {\n\t\t                // Copy one byte at a time\n\t\t                for (var i = 0; i < thatSigBytes; i++) {\n\t\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t\t                }\n\t\t            } else {\n\t\t                // Copy one word at a time\n\t\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t\t                }\n\t\t            }\n\t\t            this.sigBytes += thatSigBytes;\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Removes insignificant bits.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     wordArray.clamp();\n\t\t         */\n\t\t        clamp: function () {\n\t\t            // Shortcuts\n\t\t            var words = this.words;\n\t\t            var sigBytes = this.sigBytes;\n\t\n\t\t            // Clamp\n\t\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t\t            words.length = Math.ceil(sigBytes / 4);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this word array.\n\t\t         *\n\t\t         * @return {WordArray} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = wordArray.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone.words = this.words.slice(0);\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a word array filled with random bytes.\n\t\t         *\n\t\t         * @param {number} nBytes The number of random bytes to generate.\n\t\t         *\n\t\t         * @return {WordArray} The random word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t\t         */\n\t\t        random: function (nBytes) {\n\t\t            var words = [];\n\t\n\t\t            var r = (function (m_w) {\n\t\t                var m_w = m_w;\n\t\t                var m_z = 0x3ade68b1;\n\t\t                var mask = 0xffffffff;\n\t\n\t\t                return function () {\n\t\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t\t                    result /= 0x100000000;\n\t\t                    result += 0.5;\n\t\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t\t                }\n\t\t            });\n\t\n\t\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\t\n\t\t                rcache = _r() * 0x3ade67b7;\n\t\t                words.push((_r() * 0x100000000) | 0);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, nBytes);\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Encoder namespace.\n\t\t     */\n\t\t    var C_enc = C.enc = {};\n\t\n\t\t    /**\n\t\t     * Hex encoding strategy.\n\t\t     */\n\t\t    var Hex = C_enc.Hex = {\n\t\t        /**\n\t\t         * Converts a word array to a hex string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The hex string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var hexChars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                hexChars.push((bite >>> 4).toString(16));\n\t\t                hexChars.push((bite & 0x0f).toString(16));\n\t\t            }\n\t\n\t\t            return hexChars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a hex string to a word array.\n\t\t         *\n\t\t         * @param {string} hexStr The hex string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t\t         */\n\t\t        parse: function (hexStr) {\n\t\t            // Shortcut\n\t\t            var hexStrLength = hexStr.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, hexStrLength / 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Latin1 encoding strategy.\n\t\t     */\n\t\t    var Latin1 = C_enc.Latin1 = {\n\t\t        /**\n\t\t         * Converts a word array to a Latin1 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The Latin1 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var latin1Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i++) {\n\t\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t\t                latin1Chars.push(String.fromCharCode(bite));\n\t\t            }\n\t\n\t\t            return latin1Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a Latin1 string to a word array.\n\t\t         *\n\t\t         * @param {string} latin1Str The Latin1 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t\t         */\n\t\t        parse: function (latin1Str) {\n\t\t            // Shortcut\n\t\t            var latin1StrLength = latin1Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < latin1StrLength; i++) {\n\t\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t\t            }\n\t\n\t\t            return new WordArray.init(words, latin1StrLength);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * UTF-8 encoding strategy.\n\t\t     */\n\t\t    var Utf8 = C_enc.Utf8 = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-8 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-8 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            try {\n\t\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t\t            } catch (e) {\n\t\t                throw new Error('Malformed UTF-8 data');\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-8 string to a word array.\n\t\t         *\n\t\t         * @param {string} utf8Str The UTF-8 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t\t         */\n\t\t        parse: function (utf8Str) {\n\t\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Abstract buffered block algorithm template.\n\t\t     *\n\t\t     * The property blockSize must be implemented in a concrete subtype.\n\t\t     *\n\t\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t\t     */\n\t\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t\t        /**\n\t\t         * Resets this block algorithm's data buffer to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Initial values\n\t\t            this._data = new WordArray.init();\n\t\t            this._nDataBytes = 0;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Adds new data to this block algorithm's buffer.\n\t\t         *\n\t\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     bufferedBlockAlgorithm._append('data');\n\t\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t\t         */\n\t\t        _append: function (data) {\n\t\t            // Convert string to WordArray, else assume WordArray already\n\t\t            if (typeof data == 'string') {\n\t\t                data = Utf8.parse(data);\n\t\t            }\n\t\n\t\t            // Append\n\t\t            this._data.concat(data);\n\t\t            this._nDataBytes += data.sigBytes;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Processes available data blocks.\n\t\t         *\n\t\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t\t         *\n\t\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t\t         *\n\t\t         * @return {WordArray} The processed data.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t\t         */\n\t\t        _process: function (doFlush) {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\t            var dataSigBytes = data.sigBytes;\n\t\t            var blockSize = this.blockSize;\n\t\t            var blockSizeBytes = blockSize * 4;\n\t\n\t\t            // Count blocks ready\n\t\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t\t            if (doFlush) {\n\t\t                // Round up to include partial blocks\n\t\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t\t            } else {\n\t\t                // Round down to include only full blocks,\n\t\t                // less the number of blocks that must remain in the buffer\n\t\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t\t            }\n\t\n\t\t            // Count words ready\n\t\t            var nWordsReady = nBlocksReady * blockSize;\n\t\n\t\t            // Count bytes ready\n\t\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\t\n\t\t            // Process blocks\n\t\t            if (nWordsReady) {\n\t\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t\t                    // Perform concrete-algorithm logic\n\t\t                    this._doProcessBlock(dataWords, offset);\n\t\t                }\n\t\n\t\t                // Remove processed words\n\t\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t\t                data.sigBytes -= nBytesReady;\n\t\t            }\n\t\n\t\t            // Return processed words\n\t\t            return new WordArray.init(processedWords, nBytesReady);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this object.\n\t\t         *\n\t\t         * @return {Object} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\t            clone._data = this._data.clone();\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        _minBufferSize: 0\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Abstract hasher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t\t     */\n\t\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         */\n\t\t        cfg: Base.extend(),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created hasher.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            // Apply config defaults\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this hasher to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Reset data buffer\n\t\t            BufferedBlockAlgorithm.reset.call(this);\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            this._doReset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Updates this hasher with a message.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate The message to append.\n\t\t         *\n\t\t         * @return {Hasher} This hasher.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hasher.update('message');\n\t\t         *     hasher.update(wordArray);\n\t\t         */\n\t\t        update: function (messageUpdate) {\n\t\t            // Append\n\t\t            this._append(messageUpdate);\n\t\n\t\t            // Update the hash\n\t\t            this._process();\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the hash computation.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t\t         *\n\t\t         * @return {WordArray} The hash.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hash = hasher.finalize();\n\t\t         *     var hash = hasher.finalize('message');\n\t\t         *     var hash = hasher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (messageUpdate) {\n\t\t            // Final message update\n\t\t            if (messageUpdate) {\n\t\t                this._append(messageUpdate);\n\t\t            }\n\t\n\t\t            // Perform concrete-hasher logic\n\t\t            var hash = this._doFinalize();\n\t\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        blockSize: 512/32,\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to a hasher's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHelper: function (hasher) {\n\t\t            return function (message, cfg) {\n\t\t                return new hasher.init(cfg).finalize(message);\n\t\t            };\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a shortcut function to the HMAC's object interface.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t\t         *\n\t\t         * @return {Function} The shortcut function.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t\t         */\n\t\t        _createHmacHelper: function (hasher) {\n\t\t            return function (message, key) {\n\t\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t\t            };\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Algorithm namespace.\n\t\t     */\n\t\t    var C_algo = C.algo = {};\n\t\n\t\t    return C;\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var X32WordArray = C_lib.WordArray;\n\t\n\t\t    /**\n\t\t     * x64 namespace.\n\t\t     */\n\t\t    var C_x64 = C.x64 = {};\n\t\n\t\t    /**\n\t\t     * A 64-bit word.\n\t\t     */\n\t\t    var X64Word = C_x64.Word = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created 64-bit word.\n\t\t         *\n\t\t         * @param {number} high The high 32 bits.\n\t\t         * @param {number} low The low 32 bits.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t\t         */\n\t\t        init: function (high, low) {\n\t\t            this.high = high;\n\t\t            this.low = low;\n\t\t        }\n\t\n\t\t        /**\n\t\t         * Bitwise NOTs this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after negating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var negated = x64Word.not();\n\t\t         */\n\t\t        // not: function () {\n\t\t            // var high = ~this.high;\n\t\t            // var low = ~this.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise ANDs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var anded = x64Word.and(anotherX64Word);\n\t\t         */\n\t\t        // and: function (word) {\n\t\t            // var high = this.high & word.high;\n\t\t            // var low = this.low & word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise ORs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after ORing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ored = x64Word.or(anotherX64Word);\n\t\t         */\n\t\t        // or: function (word) {\n\t\t            // var high = this.high | word.high;\n\t\t            // var low = this.low | word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Bitwise XORs this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after XORing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var xored = x64Word.xor(anotherX64Word);\n\t\t         */\n\t\t        // xor: function (word) {\n\t\t            // var high = this.high ^ word.high;\n\t\t            // var low = this.low ^ word.low;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Shifts this word n bits to the left.\n\t\t         *\n\t\t         * @param {number} n The number of bits to shift.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after shifting.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var shifted = x64Word.shiftL(25);\n\t\t         */\n\t\t        // shiftL: function (n) {\n\t\t            // if (n < 32) {\n\t\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t\t                // var low = this.low << n;\n\t\t            // } else {\n\t\t                // var high = this.low << (n - 32);\n\t\t                // var low = 0;\n\t\t            // }\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Shifts this word n bits to the right.\n\t\t         *\n\t\t         * @param {number} n The number of bits to shift.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after shifting.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var shifted = x64Word.shiftR(7);\n\t\t         */\n\t\t        // shiftR: function (n) {\n\t\t            // if (n < 32) {\n\t\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t\t                // var high = this.high >>> n;\n\t\t            // } else {\n\t\t                // var low = this.high >>> (n - 32);\n\t\t                // var high = 0;\n\t\t            // }\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Rotates this word n bits to the left.\n\t\t         *\n\t\t         * @param {number} n The number of bits to rotate.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after rotating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var rotated = x64Word.rotL(25);\n\t\t         */\n\t\t        // rotL: function (n) {\n\t\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Rotates this word n bits to the right.\n\t\t         *\n\t\t         * @param {number} n The number of bits to rotate.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after rotating.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var rotated = x64Word.rotR(7);\n\t\t         */\n\t\t        // rotR: function (n) {\n\t\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t\t        // },\n\t\n\t\t        /**\n\t\t         * Adds this word with the passed word.\n\t\t         *\n\t\t         * @param {X64Word} word The x64-Word to add with this word.\n\t\t         *\n\t\t         * @return {X64Word} A new x64-Word object after adding.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var added = x64Word.add(anotherX64Word);\n\t\t         */\n\t\t        // add: function (word) {\n\t\t            // var low = (this.low + word.low) | 0;\n\t\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t\t            // var high = (this.high + word.high + carry) | 0;\n\t\n\t\t            // return X64Word.create(high, low);\n\t\t        // }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * An array of 64-bit words.\n\t\t     *\n\t\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t\t     */\n\t\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created word array.\n\t\t         *\n\t\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t\t         *     ]);\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t\t         *     ], 10);\n\t\t         */\n\t\t        init: function (words, sigBytes) {\n\t\t            words = this.words = words || [];\n\t\n\t\t            if (sigBytes != undefined) {\n\t\t                this.sigBytes = sigBytes;\n\t\t            } else {\n\t\t                this.sigBytes = words.length * 8;\n\t\t            }\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this 64-bit word array to a 32-bit word array.\n\t\t         *\n\t\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var x32WordArray = x64WordArray.toX32();\n\t\t         */\n\t\t        toX32: function () {\n\t\t            // Shortcuts\n\t\t            var x64Words = this.words;\n\t\t            var x64WordsLength = x64Words.length;\n\t\n\t\t            // Convert\n\t\t            var x32Words = [];\n\t\t            for (var i = 0; i < x64WordsLength; i++) {\n\t\t                var x64Word = x64Words[i];\n\t\t                x32Words.push(x64Word.high);\n\t\t                x32Words.push(x64Word.low);\n\t\t            }\n\t\n\t\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates a copy of this word array.\n\t\t         *\n\t\t         * @return {X64WordArray} The clone.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var clone = x64WordArray.clone();\n\t\t         */\n\t\t        clone: function () {\n\t\t            var clone = Base.clone.call(this);\n\t\n\t\t            // Clone \"words\" array\n\t\t            var words = clone.words = this.words.slice(0);\n\t\n\t\t            // Clone each X64Word object\n\t\t            var wordsLength = words.length;\n\t\t            for (var i = 0; i < wordsLength; i++) {\n\t\t                words[i] = words[i].clone();\n\t\t            }\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS;\n\t\n\t}));\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Check if typed arrays are supported\n\t\t    if (typeof ArrayBuffer != 'function') {\n\t\t        return;\n\t\t    }\n\t\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\n\t\t    // Reference original init\n\t\t    var superInit = WordArray.init;\n\t\n\t\t    // Augment WordArray.init to handle typed arrays\n\t\t    var subInit = WordArray.init = function (typedArray) {\n\t\t        // Convert buffers to uint8\n\t\t        if (typedArray instanceof ArrayBuffer) {\n\t\t            typedArray = new Uint8Array(typedArray);\n\t\t        }\n\t\n\t\t        // Convert other array views to uint8\n\t\t        if (\n\t\t            typedArray instanceof Int8Array ||\n\t\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t\t            typedArray instanceof Int16Array ||\n\t\t            typedArray instanceof Uint16Array ||\n\t\t            typedArray instanceof Int32Array ||\n\t\t            typedArray instanceof Uint32Array ||\n\t\t            typedArray instanceof Float32Array ||\n\t\t            typedArray instanceof Float64Array\n\t\t        ) {\n\t\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t\t        }\n\t\n\t\t        // Handle Uint8Array\n\t\t        if (typedArray instanceof Uint8Array) {\n\t\t            // Shortcut\n\t\t            var typedArrayByteLength = typedArray.byteLength;\n\t\n\t\t            // Extract bytes\n\t\t            var words = [];\n\t\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t\t            }\n\t\n\t\t            // Initialize this word array\n\t\t            superInit.call(this, words, typedArrayByteLength);\n\t\t        } else {\n\t\t            // Else call normal init\n\t\t            superInit.apply(this, arguments);\n\t\t        }\n\t\t    };\n\t\n\t\t    subInit.prototype = WordArray;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.lib.WordArray;\n\t\n\t}));\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_enc = C.enc;\n\t\n\t\t    /**\n\t\t     * UTF-16 BE encoding strategy.\n\t\t     */\n\t\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-16 BE string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-16 BE string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var utf16Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 2) {\n\t\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t\t            }\n\t\n\t\t            return utf16Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-16 BE string to a word array.\n\t\t         *\n\t\t         * @param {string} utf16Str The UTF-16 BE string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t\t         */\n\t\t        parse: function (utf16Str) {\n\t\t            // Shortcut\n\t\t            var utf16StrLength = utf16Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < utf16StrLength; i++) {\n\t\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t\t            }\n\t\n\t\t            return WordArray.create(words, utf16StrLength * 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * UTF-16 LE encoding strategy.\n\t\t     */\n\t\t    C_enc.Utf16LE = {\n\t\t        /**\n\t\t         * Converts a word array to a UTF-16 LE string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The UTF-16 LE string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\n\t\t            // Convert\n\t\t            var utf16Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 2) {\n\t\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t\t            }\n\t\n\t\t            return utf16Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a UTF-16 LE string to a word array.\n\t\t         *\n\t\t         * @param {string} utf16Str The UTF-16 LE string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t\t         */\n\t\t        parse: function (utf16Str) {\n\t\t            // Shortcut\n\t\t            var utf16StrLength = utf16Str.length;\n\t\n\t\t            // Convert\n\t\t            var words = [];\n\t\t            for (var i = 0; i < utf16StrLength; i++) {\n\t\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t\t            }\n\t\n\t\t            return WordArray.create(words, utf16StrLength * 2);\n\t\t        }\n\t\t    };\n\t\n\t\t    function swapEndian(word) {\n\t\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t\t    }\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.enc.Utf16;\n\t\n\t}));\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_enc = C.enc;\n\t\n\t\t    /**\n\t\t     * Base64 encoding strategy.\n\t\t     */\n\t\t    var Base64 = C_enc.Base64 = {\n\t\t        /**\n\t\t         * Converts a word array to a Base64 string.\n\t\t         *\n\t\t         * @param {WordArray} wordArray The word array.\n\t\t         *\n\t\t         * @return {string} The Base64 string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t\t         */\n\t\t        stringify: function (wordArray) {\n\t\t            // Shortcuts\n\t\t            var words = wordArray.words;\n\t\t            var sigBytes = wordArray.sigBytes;\n\t\t            var map = this._map;\n\t\n\t\t            // Clamp excess bits\n\t\t            wordArray.clamp();\n\t\n\t\t            // Convert\n\t\t            var base64Chars = [];\n\t\t            for (var i = 0; i < sigBytes; i += 3) {\n\t\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\t\n\t\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\t\n\t\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t\t                }\n\t\t            }\n\t\n\t\t            // Add padding\n\t\t            var paddingChar = map.charAt(64);\n\t\t            if (paddingChar) {\n\t\t                while (base64Chars.length % 4) {\n\t\t                    base64Chars.push(paddingChar);\n\t\t                }\n\t\t            }\n\t\n\t\t            return base64Chars.join('');\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a Base64 string to a word array.\n\t\t         *\n\t\t         * @param {string} base64Str The Base64 string.\n\t\t         *\n\t\t         * @return {WordArray} The word array.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t\t         */\n\t\t        parse: function (base64Str) {\n\t\t            // Shortcuts\n\t\t            var base64StrLength = base64Str.length;\n\t\t            var map = this._map;\n\t\t            var reverseMap = this._reverseMap;\n\t\n\t\t            if (!reverseMap) {\n\t\t                    reverseMap = this._reverseMap = [];\n\t\t                    for (var j = 0; j < map.length; j++) {\n\t\t                        reverseMap[map.charCodeAt(j)] = j;\n\t\t                    }\n\t\t            }\n\t\n\t\t            // Ignore padding\n\t\t            var paddingChar = map.charAt(64);\n\t\t            if (paddingChar) {\n\t\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t\t                if (paddingIndex !== -1) {\n\t\t                    base64StrLength = paddingIndex;\n\t\t                }\n\t\t            }\n\t\n\t\t            // Convert\n\t\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\t\n\t\t        },\n\t\n\t\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t\t    };\n\t\n\t\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t\t      var words = [];\n\t\t      var nBytes = 0;\n\t\t      for (var i = 0; i < base64StrLength; i++) {\n\t\t          if (i % 4) {\n\t\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t\t              nBytes++;\n\t\t          }\n\t\t      }\n\t\t      return WordArray.create(words, nBytes);\n\t\t    }\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.enc.Base64;\n\t\n\t}));\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants table\n\t\t    var T = [];\n\t\n\t\t    // Compute constants\n\t\t    (function () {\n\t\t        for (var i = 0; i < 64; i++) {\n\t\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * MD5 hash algorithm.\n\t\t     */\n\t\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0x67452301, 0xefcdab89,\n\t\t                0x98badcfe, 0x10325476\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                // Shortcuts\n\t\t                var offset_i = offset + i;\n\t\t                var M_offset_i = M[offset_i];\n\t\n\t\t                M[offset_i] = (\n\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var H = this._hash.words;\n\t\n\t\t            var M_offset_0  = M[offset + 0];\n\t\t            var M_offset_1  = M[offset + 1];\n\t\t            var M_offset_2  = M[offset + 2];\n\t\t            var M_offset_3  = M[offset + 3];\n\t\t            var M_offset_4  = M[offset + 4];\n\t\t            var M_offset_5  = M[offset + 5];\n\t\t            var M_offset_6  = M[offset + 6];\n\t\t            var M_offset_7  = M[offset + 7];\n\t\t            var M_offset_8  = M[offset + 8];\n\t\t            var M_offset_9  = M[offset + 9];\n\t\t            var M_offset_10 = M[offset + 10];\n\t\t            var M_offset_11 = M[offset + 11];\n\t\t            var M_offset_12 = M[offset + 12];\n\t\t            var M_offset_13 = M[offset + 13];\n\t\t            var M_offset_14 = M[offset + 14];\n\t\t            var M_offset_15 = M[offset + 15];\n\t\n\t\t            // Working varialbes\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\n\t\t            // Computation\n\t\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\t\n\t\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\t\n\t\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\t\n\t\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\n\t\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t\t            var nBitsTotalL = nBitsTotal;\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\n\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var hash = this._hash;\n\t\t            var H = hash.words;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Shortcut\n\t\t                var H_i = H[i];\n\t\n\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    function FF(a, b, c, d, x, s, t) {\n\t\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function GG(a, b, c, d, x, s, t) {\n\t\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function HH(a, b, c, d, x, s, t) {\n\t\t        var n = a + (b ^ c ^ d) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    function II(a, b, c, d, x, s, t) {\n\t\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.MD5('message');\n\t\t     *     var hash = CryptoJS.MD5(wordArray);\n\t\t     */\n\t\t    C.MD5 = Hasher._createHelper(MD5);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t\t     */\n\t\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.MD5;\n\t\n\t}));\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable object\n\t\t    var W = [];\n\t\n\t\t    /**\n\t\t     * SHA-1 hash algorithm.\n\t\t     */\n\t\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0x67452301, 0xefcdab89,\n\t\t                0x98badcfe, 0x10325476,\n\t\t                0xc3d2e1f0\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var H = this._hash.words;\n\t\n\t\t            // Working variables\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\t            var e = H[4];\n\t\n\t\t            // Computation\n\t\t            for (var i = 0; i < 80; i++) {\n\t\t                if (i < 16) {\n\t\t                    W[i] = M[offset + i] | 0;\n\t\t                } else {\n\t\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t\t                    W[i] = (n << 1) | (n >>> 31);\n\t\t                }\n\t\n\t\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t\t                if (i < 20) {\n\t\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t\t                } else if (i < 40) {\n\t\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t\t                } else if (i < 60) {\n\t\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t\t                } else /* if (i < 80) */ {\n\t\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t\t                }\n\t\n\t\t                e = d;\n\t\t                d = c;\n\t\t                c = (b << 30) | (b >>> 2);\n\t\t                b = a;\n\t\t                a = t;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t            H[4] = (H[4] + e) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Return final computed hash\n\t\t            return this._hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA1('message');\n\t\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t\t     */\n\t\t    C.SHA1 = Hasher._createHelper(SHA1);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t\t     */\n\t\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA1;\n\t\n\t}));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Initialization and round constants tables\n\t\t    var H = [];\n\t\t    var K = [];\n\t\n\t\t    // Compute constants\n\t\t    (function () {\n\t\t        function isPrime(n) {\n\t\t            var sqrtN = Math.sqrt(n);\n\t\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t\t                if (!(n % factor)) {\n\t\t                    return false;\n\t\t                }\n\t\t            }\n\t\n\t\t            return true;\n\t\t        }\n\t\n\t\t        function getFractionalBits(n) {\n\t\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t\t        }\n\t\n\t\t        var n = 2;\n\t\t        var nPrime = 0;\n\t\t        while (nPrime < 64) {\n\t\t            if (isPrime(n)) {\n\t\t                if (nPrime < 8) {\n\t\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t\t                }\n\t\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\t\n\t\t                nPrime++;\n\t\t            }\n\t\n\t\t            n++;\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Reusable object\n\t\t    var W = [];\n\t\n\t\t    /**\n\t\t     * SHA-256 hash algorithm.\n\t\t     */\n\t\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init(H.slice(0));\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var H = this._hash.words;\n\t\n\t\t            // Working variables\n\t\t            var a = H[0];\n\t\t            var b = H[1];\n\t\t            var c = H[2];\n\t\t            var d = H[3];\n\t\t            var e = H[4];\n\t\t            var f = H[5];\n\t\t            var g = H[6];\n\t\t            var h = H[7];\n\t\n\t\t            // Computation\n\t\t            for (var i = 0; i < 64; i++) {\n\t\t                if (i < 16) {\n\t\t                    W[i] = M[offset + i] | 0;\n\t\t                } else {\n\t\t                    var gamma0x = W[i - 15];\n\t\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t\t                                   (gamma0x >>> 3);\n\t\n\t\t                    var gamma1x = W[i - 2];\n\t\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t\t                                   (gamma1x >>> 10);\n\t\n\t\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t\t                }\n\t\n\t\t                var ch  = (e & f) ^ (~e & g);\n\t\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\t\n\t\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\t\n\t\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t\t                var t2 = sigma0 + maj;\n\t\n\t\t                h = g;\n\t\t                g = f;\n\t\t                f = e;\n\t\t                e = (d + t1) | 0;\n\t\t                d = c;\n\t\t                c = b;\n\t\t                b = a;\n\t\t                a = (t1 + t2) | 0;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H[0] = (H[0] + a) | 0;\n\t\t            H[1] = (H[1] + b) | 0;\n\t\t            H[2] = (H[2] + c) | 0;\n\t\t            H[3] = (H[3] + d) | 0;\n\t\t            H[4] = (H[4] + e) | 0;\n\t\t            H[5] = (H[5] + f) | 0;\n\t\t            H[6] = (H[6] + g) | 0;\n\t\t            H[7] = (H[7] + h) | 0;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Return final computed hash\n\t\t            return this._hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA256('message');\n\t\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t\t     */\n\t\t    C.SHA256 = Hasher._createHelper(SHA256);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t\t     */\n\t\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.SHA256;\n\t\n\t}));\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(19));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA256 = C_algo.SHA256;\n\t\n\t\t    /**\n\t\t     * SHA-224 hash algorithm.\n\t\t     */\n\t\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new WordArray.init([\n\t\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            var hash = SHA256._doFinalize.call(this);\n\t\n\t\t            hash.sigBytes -= 4;\n\t\n\t\t            return hash;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA224('message');\n\t\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t\t     */\n\t\t    C.SHA224 = SHA256._createHelper(SHA224);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t\t     */\n\t\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA224;\n\t\n\t}));\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(13));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var X64WordArray = C_x64.WordArray;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    function X64Word_create() {\n\t\t        return X64Word.create.apply(X64Word, arguments);\n\t\t    }\n\t\n\t\t    // Constants\n\t\t    var K = [\n\t\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t\t    ];\n\t\n\t\t    // Reusable objects\n\t\t    var W = [];\n\t\t    (function () {\n\t\t        for (var i = 0; i < 80; i++) {\n\t\t            W[i] = X64Word_create();\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * SHA-512 hash algorithm.\n\t\t     */\n\t\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new X64WordArray.init([\n\t\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcuts\n\t\t            var H = this._hash.words;\n\t\n\t\t            var H0 = H[0];\n\t\t            var H1 = H[1];\n\t\t            var H2 = H[2];\n\t\t            var H3 = H[3];\n\t\t            var H4 = H[4];\n\t\t            var H5 = H[5];\n\t\t            var H6 = H[6];\n\t\t            var H7 = H[7];\n\t\n\t\t            var H0h = H0.high;\n\t\t            var H0l = H0.low;\n\t\t            var H1h = H1.high;\n\t\t            var H1l = H1.low;\n\t\t            var H2h = H2.high;\n\t\t            var H2l = H2.low;\n\t\t            var H3h = H3.high;\n\t\t            var H3l = H3.low;\n\t\t            var H4h = H4.high;\n\t\t            var H4l = H4.low;\n\t\t            var H5h = H5.high;\n\t\t            var H5l = H5.low;\n\t\t            var H6h = H6.high;\n\t\t            var H6l = H6.low;\n\t\t            var H7h = H7.high;\n\t\t            var H7l = H7.low;\n\t\n\t\t            // Working variables\n\t\t            var ah = H0h;\n\t\t            var al = H0l;\n\t\t            var bh = H1h;\n\t\t            var bl = H1l;\n\t\t            var ch = H2h;\n\t\t            var cl = H2l;\n\t\t            var dh = H3h;\n\t\t            var dl = H3l;\n\t\t            var eh = H4h;\n\t\t            var el = H4l;\n\t\t            var fh = H5h;\n\t\t            var fl = H5l;\n\t\t            var gh = H6h;\n\t\t            var gl = H6l;\n\t\t            var hh = H7h;\n\t\t            var hl = H7l;\n\t\n\t\t            // Rounds\n\t\t            for (var i = 0; i < 80; i++) {\n\t\t                // Shortcut\n\t\t                var Wi = W[i];\n\t\n\t\t                // Extend message\n\t\t                if (i < 16) {\n\t\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t\t                } else {\n\t\t                    // Gamma0\n\t\t                    var gamma0x  = W[i - 15];\n\t\t                    var gamma0xh = gamma0x.high;\n\t\t                    var gamma0xl = gamma0x.low;\n\t\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\t\n\t\t                    // Gamma1\n\t\t                    var gamma1x  = W[i - 2];\n\t\t                    var gamma1xh = gamma1x.high;\n\t\t                    var gamma1xl = gamma1x.low;\n\t\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\t\n\t\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t\t                    var Wi7  = W[i - 7];\n\t\t                    var Wi7h = Wi7.high;\n\t\t                    var Wi7l = Wi7.low;\n\t\n\t\t                    var Wi16  = W[i - 16];\n\t\t                    var Wi16h = Wi16.high;\n\t\t                    var Wi16l = Wi16.low;\n\t\n\t\t                    var Wil = gamma0l + Wi7l;\n\t\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t\t                    var Wil = Wil + gamma1l;\n\t\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t\t                    var Wil = Wil + Wi16l;\n\t\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\t\n\t\t                    Wi.high = Wih;\n\t\t                    Wi.low  = Wil;\n\t\t                }\n\t\n\t\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t\t                var chl  = (el & fl) ^ (~el & gl);\n\t\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\t\n\t\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\t\n\t\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t\t                var Ki  = K[i];\n\t\t                var Kih = Ki.high;\n\t\t                var Kil = Ki.low;\n\t\n\t\t                var t1l = hl + sigma1l;\n\t\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + chl;\n\t\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + Kil;\n\t\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t\t                var t1l = t1l + Wil;\n\t\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\t\n\t\t                // t2 = sigma0 + maj\n\t\t                var t2l = sigma0l + majl;\n\t\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\t\n\t\t                // Update working variables\n\t\t                hh = gh;\n\t\t                hl = gl;\n\t\t                gh = fh;\n\t\t                gl = fl;\n\t\t                fh = eh;\n\t\t                fl = el;\n\t\t                el = (dl + t1l) | 0;\n\t\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t\t                dh = ch;\n\t\t                dl = cl;\n\t\t                ch = bh;\n\t\t                cl = bl;\n\t\t                bh = ah;\n\t\t                bl = al;\n\t\t                al = (t1l + t2l) | 0;\n\t\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t\t            }\n\t\n\t\t            // Intermediate hash value\n\t\t            H0l = H0.low  = (H0l + al);\n\t\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t\t            H1l = H1.low  = (H1l + bl);\n\t\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t\t            H2l = H2.low  = (H2l + cl);\n\t\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t\t            H3l = H3.low  = (H3l + dl);\n\t\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t\t            H4l = H4.low  = (H4l + el);\n\t\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t\t            H5l = H5.low  = (H5l + fl);\n\t\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t\t            H6l = H6.low  = (H6l + gl);\n\t\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t\t            H7l = H7.low  = (H7l + hl);\n\t\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Convert hash to 32-bit word array before returning\n\t\t            var hash = this._hash.toX32();\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        },\n\t\n\t\t        blockSize: 1024/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA512('message');\n\t\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t\t     */\n\t\t    C.SHA512 = Hasher._createHelper(SHA512);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t\t     */\n\t\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA512;\n\t\n\t}));\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(13), __webpack_require__(21));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var X64WordArray = C_x64.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA512 = C_algo.SHA512;\n\t\n\t\t    /**\n\t\t     * SHA-384 hash algorithm.\n\t\t     */\n\t\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash = new X64WordArray.init([\n\t\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t\t            ]);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            var hash = SHA512._doFinalize.call(this);\n\t\n\t\t            hash.sigBytes -= 16;\n\t\n\t\t            return hash;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA384('message');\n\t\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t\t     */\n\t\t    C.SHA384 = SHA512._createHelper(SHA384);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t\t     */\n\t\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.SHA384;\n\t\n\t}));\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(13));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_x64 = C.x64;\n\t\t    var X64Word = C_x64.Word;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants tables\n\t\t    var RHO_OFFSETS = [];\n\t\t    var PI_INDEXES  = [];\n\t\t    var ROUND_CONSTANTS = [];\n\t\n\t\t    // Compute Constants\n\t\t    (function () {\n\t\t        // Compute rho offset constants\n\t\t        var x = 1, y = 0;\n\t\t        for (var t = 0; t < 24; t++) {\n\t\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\t\n\t\t            var newX = y % 5;\n\t\t            var newY = (2 * x + 3 * y) % 5;\n\t\t            x = newX;\n\t\t            y = newY;\n\t\t        }\n\t\n\t\t        // Compute pi index constants\n\t\t        for (var x = 0; x < 5; x++) {\n\t\t            for (var y = 0; y < 5; y++) {\n\t\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t\t            }\n\t\t        }\n\t\n\t\t        // Compute round constants\n\t\t        var LFSR = 0x01;\n\t\t        for (var i = 0; i < 24; i++) {\n\t\t            var roundConstantMsw = 0;\n\t\t            var roundConstantLsw = 0;\n\t\n\t\t            for (var j = 0; j < 7; j++) {\n\t\t                if (LFSR & 0x01) {\n\t\t                    var bitPosition = (1 << j) - 1;\n\t\t                    if (bitPosition < 32) {\n\t\t                        roundConstantLsw ^= 1 << bitPosition;\n\t\t                    } else /* if (bitPosition >= 32) */ {\n\t\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Compute next LFSR\n\t\t                if (LFSR & 0x80) {\n\t\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t\t                } else {\n\t\t                    LFSR <<= 1;\n\t\t                }\n\t\t            }\n\t\n\t\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Reusable objects for temporary values\n\t\t    var T = [];\n\t\t    (function () {\n\t\t        for (var i = 0; i < 25; i++) {\n\t\t            T[i] = X64Word.create();\n\t\t        }\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * SHA-3 hash algorithm.\n\t\t     */\n\t\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} outputLength\n\t\t         *   The desired number of bits in the output hash.\n\t\t         *   Only values permitted are: 224, 256, 384, 512.\n\t\t         *   Default: 512\n\t\t         */\n\t\t        cfg: Hasher.cfg.extend({\n\t\t            outputLength: 512\n\t\t        }),\n\t\n\t\t        _doReset: function () {\n\t\t            var state = this._state = []\n\t\t            for (var i = 0; i < 25; i++) {\n\t\t                state[i] = new X64Word.init();\n\t\t            }\n\t\n\t\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcuts\n\t\t            var state = this._state;\n\t\t            var nBlockSizeLanes = this.blockSize / 2;\n\t\n\t\t            // Absorb\n\t\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t\t                // Shortcuts\n\t\t                var M2i  = M[offset + 2 * i];\n\t\t                var M2i1 = M[offset + 2 * i + 1];\n\t\n\t\t                // Swap endian\n\t\t                M2i = (\n\t\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t                M2i1 = (\n\t\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\n\t\t                // Absorb message into state\n\t\t                var lane = state[i];\n\t\t                lane.high ^= M2i1;\n\t\t                lane.low  ^= M2i;\n\t\t            }\n\t\n\t\t            // Rounds\n\t\t            for (var round = 0; round < 24; round++) {\n\t\t                // Theta\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    // Mix column lanes\n\t\t                    var tMsw = 0, tLsw = 0;\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        var lane = state[x + 5 * y];\n\t\t                        tMsw ^= lane.high;\n\t\t                        tLsw ^= lane.low;\n\t\t                    }\n\t\n\t\t                    // Temporary values\n\t\t                    var Tx = T[x];\n\t\t                    Tx.high = tMsw;\n\t\t                    Tx.low  = tLsw;\n\t\t                }\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    // Shortcuts\n\t\t                    var Tx4 = T[(x + 4) % 5];\n\t\t                    var Tx1 = T[(x + 1) % 5];\n\t\t                    var Tx1Msw = Tx1.high;\n\t\t                    var Tx1Lsw = Tx1.low;\n\t\n\t\t                    // Mix surrounding columns\n\t\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        var lane = state[x + 5 * y];\n\t\t                        lane.high ^= tMsw;\n\t\t                        lane.low  ^= tLsw;\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Rho Pi\n\t\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t\t                    // Shortcuts\n\t\t                    var lane = state[laneIndex];\n\t\t                    var laneMsw = lane.high;\n\t\t                    var laneLsw = lane.low;\n\t\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\t\n\t\t                    // Rotate lanes\n\t\t                    if (rhoOffset < 32) {\n\t\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t\t                    } else /* if (rhoOffset >= 32) */ {\n\t\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t\t                    }\n\t\n\t\t                    // Transpose lanes\n\t\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t\t                    TPiLane.high = tMsw;\n\t\t                    TPiLane.low  = tLsw;\n\t\t                }\n\t\n\t\t                // Rho pi at x = y = 0\n\t\t                var T0 = T[0];\n\t\t                var state0 = state[0];\n\t\t                T0.high = state0.high;\n\t\t                T0.low  = state0.low;\n\t\n\t\t                // Chi\n\t\t                for (var x = 0; x < 5; x++) {\n\t\t                    for (var y = 0; y < 5; y++) {\n\t\t                        // Shortcuts\n\t\t                        var laneIndex = x + 5 * y;\n\t\t                        var lane = state[laneIndex];\n\t\t                        var TLane = T[laneIndex];\n\t\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\t\n\t\t                        // Mix rows\n\t\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t\t                    }\n\t\t                }\n\t\n\t\t                // Iota\n\t\t                var lane = state[0];\n\t\t                var roundConstant = ROUND_CONSTANTS[round];\n\t\t                lane.high ^= roundConstant.high;\n\t\t                lane.low  ^= roundConstant.low;;\n\t\t            }\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\t            var blockSizeBits = this.blockSize * 32;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t\t            data.sigBytes = dataWords.length * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var state = this._state;\n\t\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t\t            var outputLengthLanes = outputLengthBytes / 8;\n\t\n\t\t            // Squeeze\n\t\t            var hashWords = [];\n\t\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t\t                // Shortcuts\n\t\t                var lane = state[i];\n\t\t                var laneMsw = lane.high;\n\t\t                var laneLsw = lane.low;\n\t\n\t\t                // Swap endian\n\t\t                laneMsw = (\n\t\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t                laneLsw = (\n\t\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\n\t\t                // Squeeze state to retrieve hash\n\t\t                hashWords.push(laneLsw);\n\t\t                hashWords.push(laneMsw);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\n\t\t            var state = clone._state = this._state.slice(0);\n\t\t            for (var i = 0; i < 25; i++) {\n\t\t                state[i] = state[i].clone();\n\t\t            }\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.SHA3('message');\n\t\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t\t     */\n\t\t    C.SHA3 = Hasher._createHelper(SHA3);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t\t     */\n\t\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.SHA3;\n\t\n\t}));\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/** @preserve\n\t\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\t\n\t\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\t\n\t\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\t\n\t\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t\t*/\n\t\n\t\t(function (Math) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var Hasher = C_lib.Hasher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Constants table\n\t\t    var _zl = WordArray.create([\n\t\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t\t    var _zr = WordArray.create([\n\t\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t\t    var _sl = WordArray.create([\n\t\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t\t    var _sr = WordArray.create([\n\t\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\t\n\t\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\t\n\t\t    /**\n\t\t     * RIPEMD160 hash algorithm.\n\t\t     */\n\t\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t\t        _doReset: function () {\n\t\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                // Shortcuts\n\t\t                var offset_i = offset + i;\n\t\t                var M_offset_i = M[offset_i];\n\t\n\t\t                // Swap\n\t\t                M[offset_i] = (\n\t\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t\t                );\n\t\t            }\n\t\t            // Shortcut\n\t\t            var H  = this._hash.words;\n\t\t            var hl = _hl.words;\n\t\t            var hr = _hr.words;\n\t\t            var zl = _zl.words;\n\t\t            var zr = _zr.words;\n\t\t            var sl = _sl.words;\n\t\t            var sr = _sr.words;\n\t\n\t\t            // Working variables\n\t\t            var al, bl, cl, dl, el;\n\t\t            var ar, br, cr, dr, er;\n\t\n\t\t            ar = al = H[0];\n\t\t            br = bl = H[1];\n\t\t            cr = cl = H[2];\n\t\t            dr = dl = H[3];\n\t\t            er = el = H[4];\n\t\t            // Computation\n\t\t            var t;\n\t\t            for (var i = 0; i < 80; i += 1) {\n\t\t                t = (al +  M[offset+zl[i]])|0;\n\t\t                if (i<16){\n\t\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t\t                } else if (i<32) {\n\t\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t\t                } else if (i<48) {\n\t\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t\t                } else if (i<64) {\n\t\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t\t                } else {// if (i<80) {\n\t\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t\t                }\n\t\t                t = t|0;\n\t\t                t =  rotl(t,sl[i]);\n\t\t                t = (t+el)|0;\n\t\t                al = el;\n\t\t                el = dl;\n\t\t                dl = rotl(cl, 10);\n\t\t                cl = bl;\n\t\t                bl = t;\n\t\n\t\t                t = (ar + M[offset+zr[i]])|0;\n\t\t                if (i<16){\n\t\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t\t                } else if (i<32) {\n\t\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t\t                } else if (i<48) {\n\t\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t\t                } else if (i<64) {\n\t\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t\t                } else {// if (i<80) {\n\t\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t\t                }\n\t\t                t = t|0;\n\t\t                t =  rotl(t,sr[i]) ;\n\t\t                t = (t+er)|0;\n\t\t                ar = er;\n\t\t                er = dr;\n\t\t                dr = rotl(cr, 10);\n\t\t                cr = br;\n\t\t                br = t;\n\t\t            }\n\t\t            // Intermediate hash value\n\t\t            t    = (H[1] + cl + dr)|0;\n\t\t            H[1] = (H[2] + dl + er)|0;\n\t\t            H[2] = (H[3] + el + ar)|0;\n\t\t            H[3] = (H[4] + al + br)|0;\n\t\t            H[4] = (H[0] + bl + cr)|0;\n\t\t            H[0] =  t;\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcuts\n\t\t            var data = this._data;\n\t\t            var dataWords = data.words;\n\t\n\t\t            var nBitsTotal = this._nDataBytes * 8;\n\t\t            var nBitsLeft = data.sigBytes * 8;\n\t\n\t\t            // Add padding\n\t\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t\t            );\n\t\t            data.sigBytes = (dataWords.length + 1) * 4;\n\t\n\t\t            // Hash final blocks\n\t\t            this._process();\n\t\n\t\t            // Shortcuts\n\t\t            var hash = this._hash;\n\t\t            var H = hash.words;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 5; i++) {\n\t\t                // Shortcut\n\t\t                var H_i = H[i];\n\t\n\t\t                // Swap\n\t\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Return final computed hash\n\t\t            return hash;\n\t\t        },\n\t\n\t\t        clone: function () {\n\t\t            var clone = Hasher.clone.call(this);\n\t\t            clone._hash = this._hash.clone();\n\t\n\t\t            return clone;\n\t\t        }\n\t\t    });\n\t\n\t\n\t\t    function f1(x, y, z) {\n\t\t        return ((x) ^ (y) ^ (z));\n\t\n\t\t    }\n\t\n\t\t    function f2(x, y, z) {\n\t\t        return (((x)&(y)) | ((~x)&(z)));\n\t\t    }\n\t\n\t\t    function f3(x, y, z) {\n\t\t        return (((x) | (~(y))) ^ (z));\n\t\t    }\n\t\n\t\t    function f4(x, y, z) {\n\t\t        return (((x) & (z)) | ((y)&(~(z))));\n\t\t    }\n\t\n\t\t    function f5(x, y, z) {\n\t\t        return ((x) ^ ((y) |(~(z))));\n\t\n\t\t    }\n\t\n\t\t    function rotl(x,n) {\n\t\t        return (x<<n) | (x>>>(32-n));\n\t\t    }\n\t\n\t\n\t\t    /**\n\t\t     * Shortcut function to the hasher's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     *\n\t\t     * @return {WordArray} The hash.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t\t     */\n\t\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\t\n\t\t    /**\n\t\t     * Shortcut function to the HMAC's object interface.\n\t\t     *\n\t\t     * @param {WordArray|string} message The message to hash.\n\t\t     * @param {WordArray|string} key The secret key.\n\t\t     *\n\t\t     * @return {WordArray} The HMAC.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t\t     */\n\t\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t\t}(Math));\n\t\n\t\n\t\treturn CryptoJS.RIPEMD160;\n\t\n\t}));\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var C_enc = C.enc;\n\t\t    var Utf8 = C_enc.Utf8;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    /**\n\t\t     * HMAC algorithm.\n\t\t     */\n\t\t    var HMAC = C_algo.HMAC = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created HMAC.\n\t\t         *\n\t\t         * @param {Hasher} hasher The hash algorithm to use.\n\t\t         * @param {WordArray|string} key The secret key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t\t         */\n\t\t        init: function (hasher, key) {\n\t\t            // Init hasher\n\t\t            hasher = this._hasher = new hasher.init();\n\t\n\t\t            // Convert string to WordArray, else assume WordArray already\n\t\t            if (typeof key == 'string') {\n\t\t                key = Utf8.parse(key);\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var hasherBlockSize = hasher.blockSize;\n\t\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\t\n\t\t            // Allow arbitrary length keys\n\t\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t\t                key = hasher.finalize(key);\n\t\t            }\n\t\n\t\t            // Clamp excess bits\n\t\t            key.clamp();\n\t\n\t\t            // Clone key for inner and outer pads\n\t\t            var oKey = this._oKey = key.clone();\n\t\t            var iKey = this._iKey = key.clone();\n\t\n\t\t            // Shortcuts\n\t\t            var oKeyWords = oKey.words;\n\t\t            var iKeyWords = iKey.words;\n\t\n\t\t            // XOR keys with pad constants\n\t\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t\t                iKeyWords[i] ^= 0x36363636;\n\t\t            }\n\t\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this HMAC to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hmacHasher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Shortcut\n\t\t            var hasher = this._hasher;\n\t\n\t\t            // Reset\n\t\t            hasher.reset();\n\t\t            hasher.update(this._iKey);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Updates this HMAC with a message.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate The message to append.\n\t\t         *\n\t\t         * @return {HMAC} This HMAC instance.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     hmacHasher.update('message');\n\t\t         *     hmacHasher.update(wordArray);\n\t\t         */\n\t\t        update: function (messageUpdate) {\n\t\t            this._hasher.update(messageUpdate);\n\t\n\t\t            // Chainable\n\t\t            return this;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the HMAC computation.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t\t         *\n\t\t         * @return {WordArray} The HMAC.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hmac = hmacHasher.finalize();\n\t\t         *     var hmac = hmacHasher.finalize('message');\n\t\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (messageUpdate) {\n\t\t            // Shortcut\n\t\t            var hasher = this._hasher;\n\t\n\t\t            // Compute HMAC\n\t\t            var innerHash = hasher.finalize(messageUpdate);\n\t\t            hasher.reset();\n\t\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\t\n\t\t            return hmac;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t}));\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(18), __webpack_require__(25));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var SHA1 = C_algo.SHA1;\n\t\t    var HMAC = C_algo.HMAC;\n\t\n\t\t    /**\n\t\t     * Password-Based Key Derivation Function 2 algorithm.\n\t\t     */\n\t\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            keySize: 128/32,\n\t\t            hasher: SHA1,\n\t\t            iterations: 1\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created key derivation function.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Computes the Password-Based Key Derivation Function 2.\n\t\t         *\n\t\t         * @param {WordArray|string} password The password.\n\t\t         * @param {WordArray|string} salt A salt.\n\t\t         *\n\t\t         * @return {WordArray} The derived key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var key = kdf.compute(password, salt);\n\t\t         */\n\t\t        compute: function (password, salt) {\n\t\t            // Shortcut\n\t\t            var cfg = this.cfg;\n\t\n\t\t            // Init HMAC\n\t\t            var hmac = HMAC.create(cfg.hasher, password);\n\t\n\t\t            // Initial values\n\t\t            var derivedKey = WordArray.create();\n\t\t            var blockIndex = WordArray.create([0x00000001]);\n\t\n\t\t            // Shortcuts\n\t\t            var derivedKeyWords = derivedKey.words;\n\t\t            var blockIndexWords = blockIndex.words;\n\t\t            var keySize = cfg.keySize;\n\t\t            var iterations = cfg.iterations;\n\t\n\t\t            // Generate key\n\t\t            while (derivedKeyWords.length < keySize) {\n\t\t                var block = hmac.update(salt).finalize(blockIndex);\n\t\t                hmac.reset();\n\t\n\t\t                // Shortcuts\n\t\t                var blockWords = block.words;\n\t\t                var blockWordsLength = blockWords.length;\n\t\n\t\t                // Iterations\n\t\t                var intermediate = block;\n\t\t                for (var i = 1; i < iterations; i++) {\n\t\t                    intermediate = hmac.finalize(intermediate);\n\t\t                    hmac.reset();\n\t\n\t\t                    // Shortcut\n\t\t                    var intermediateWords = intermediate.words;\n\t\n\t\t                    // XOR intermediate with block\n\t\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t\t                        blockWords[j] ^= intermediateWords[j];\n\t\t                    }\n\t\t                }\n\t\n\t\t                derivedKey.concat(block);\n\t\t                blockIndexWords[0]++;\n\t\t            }\n\t\t            derivedKey.sigBytes = keySize * 4;\n\t\n\t\t            return derivedKey;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Computes the Password-Based Key Derivation Function 2.\n\t\t     *\n\t\t     * @param {WordArray|string} password The password.\n\t\t     * @param {WordArray|string} salt A salt.\n\t\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t\t     *\n\t\t     * @return {WordArray} The derived key.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t\t     */\n\t\t    C.PBKDF2 = function (password, salt, cfg) {\n\t\t        return PBKDF2.create(cfg).compute(password, salt);\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.PBKDF2;\n\t\n\t}));\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(18), __webpack_require__(25));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var C_algo = C.algo;\n\t\t    var MD5 = C_algo.MD5;\n\t\n\t\t    /**\n\t\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t\t     */\n\t\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            keySize: 128/32,\n\t\t            hasher: MD5,\n\t\t            iterations: 1\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Initializes a newly created key derivation function.\n\t\t         *\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t\t         */\n\t\t        init: function (cfg) {\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Derives a key from a password.\n\t\t         *\n\t\t         * @param {WordArray|string} password The password.\n\t\t         * @param {WordArray|string} salt A salt.\n\t\t         *\n\t\t         * @return {WordArray} The derived key.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var key = kdf.compute(password, salt);\n\t\t         */\n\t\t        compute: function (password, salt) {\n\t\t            // Shortcut\n\t\t            var cfg = this.cfg;\n\t\n\t\t            // Init hasher\n\t\t            var hasher = cfg.hasher.create();\n\t\n\t\t            // Initial values\n\t\t            var derivedKey = WordArray.create();\n\t\n\t\t            // Shortcuts\n\t\t            var derivedKeyWords = derivedKey.words;\n\t\t            var keySize = cfg.keySize;\n\t\t            var iterations = cfg.iterations;\n\t\n\t\t            // Generate key\n\t\t            while (derivedKeyWords.length < keySize) {\n\t\t                if (block) {\n\t\t                    hasher.update(block);\n\t\t                }\n\t\t                var block = hasher.update(password).finalize(salt);\n\t\t                hasher.reset();\n\t\n\t\t                // Iterations\n\t\t                for (var i = 1; i < iterations; i++) {\n\t\t                    block = hasher.finalize(block);\n\t\t                    hasher.reset();\n\t\t                }\n\t\n\t\t                derivedKey.concat(block);\n\t\t            }\n\t\t            derivedKey.sigBytes = keySize * 4;\n\t\n\t\t            return derivedKey;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Derives a key from a password.\n\t\t     *\n\t\t     * @param {WordArray|string} password The password.\n\t\t     * @param {WordArray|string} salt A salt.\n\t\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t\t     *\n\t\t     * @return {WordArray} The derived key.\n\t\t     *\n\t\t     * @static\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t\t     */\n\t\t    C.EvpKDF = function (password, salt, cfg) {\n\t\t        return EvpKDF.create(cfg).compute(password, salt);\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.EvpKDF;\n\t\n\t}));\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Cipher core components.\n\t\t */\n\t\tCryptoJS.lib.Cipher || (function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var Base = C_lib.Base;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t\t    var C_enc = C.enc;\n\t\t    var Utf8 = C_enc.Utf8;\n\t\t    var Base64 = C_enc.Base64;\n\t\t    var C_algo = C.algo;\n\t\t    var EvpKDF = C_algo.EvpKDF;\n\t\n\t\t    /**\n\t\t     * Abstract base cipher template.\n\t\t     *\n\t\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t\t     */\n\t\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {WordArray} iv The IV to use for this operation.\n\t\t         */\n\t\t        cfg: Base.extend(),\n\t\n\t\t        /**\n\t\t         * Creates this cipher in encryption mode.\n\t\t         *\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {Cipher} A cipher instance.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        createEncryptor: function (key, cfg) {\n\t\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates this cipher in decryption mode.\n\t\t         *\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {Cipher} A cipher instance.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        createDecryptor: function (key, cfg) {\n\t\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Initializes a newly created cipher.\n\t\t         *\n\t\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t\t         */\n\t\t        init: function (xformMode, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            this.cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Store transform mode and key\n\t\t            this._xformMode = xformMode;\n\t\t            this._key = key;\n\t\n\t\t            // Set initial values\n\t\t            this.reset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Resets this cipher to its initial state.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     cipher.reset();\n\t\t         */\n\t\t        reset: function () {\n\t\t            // Reset data buffer\n\t\t            BufferedBlockAlgorithm.reset.call(this);\n\t\n\t\t            // Perform concrete-cipher logic\n\t\t            this._doReset();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Adds data to be encrypted or decrypted.\n\t\t         *\n\t\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t\t         *\n\t\t         * @return {WordArray} The data after processing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var encrypted = cipher.process('data');\n\t\t         *     var encrypted = cipher.process(wordArray);\n\t\t         */\n\t\t        process: function (dataUpdate) {\n\t\t            // Append\n\t\t            this._append(dataUpdate);\n\t\n\t\t            // Process available blocks\n\t\t            return this._process();\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Finalizes the encryption or decryption process.\n\t\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t\t         *\n\t\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t\t         *\n\t\t         * @return {WordArray} The data after final processing.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var encrypted = cipher.finalize();\n\t\t         *     var encrypted = cipher.finalize('data');\n\t\t         *     var encrypted = cipher.finalize(wordArray);\n\t\t         */\n\t\t        finalize: function (dataUpdate) {\n\t\t            // Final data update\n\t\t            if (dataUpdate) {\n\t\t                this._append(dataUpdate);\n\t\t            }\n\t\n\t\t            // Perform concrete-cipher logic\n\t\t            var finalProcessedData = this._doFinalize();\n\t\n\t\t            return finalProcessedData;\n\t\t        },\n\t\n\t\t        keySize: 128/32,\n\t\n\t\t        ivSize: 128/32,\n\t\n\t\t        _ENC_XFORM_MODE: 1,\n\t\n\t\t        _DEC_XFORM_MODE: 2,\n\t\n\t\t        /**\n\t\t         * Creates shortcut functions to a cipher's object interface.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t\t         *\n\t\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t\t         */\n\t\t        _createHelper: (function () {\n\t\t            function selectCipherStrategy(key) {\n\t\t                if (typeof key == 'string') {\n\t\t                    return PasswordBasedCipher;\n\t\t                } else {\n\t\t                    return SerializableCipher;\n\t\t                }\n\t\t            }\n\t\n\t\t            return function (cipher) {\n\t\t                return {\n\t\t                    encrypt: function (message, key, cfg) {\n\t\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t\t                    },\n\t\n\t\t                    decrypt: function (ciphertext, key, cfg) {\n\t\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t\t                    }\n\t\t                };\n\t\t            };\n\t\t        }())\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Abstract base stream cipher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t\t     */\n\t\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t\t        _doFinalize: function () {\n\t\t            // Process partial blocks\n\t\t            var finalProcessedBlocks = this._process(!!'flush');\n\t\n\t\t            return finalProcessedBlocks;\n\t\t        },\n\t\n\t\t        blockSize: 1\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Mode namespace.\n\t\t     */\n\t\t    var C_mode = C.mode = {};\n\t\n\t\t    /**\n\t\t     * Abstract base block cipher mode template.\n\t\t     */\n\t\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t\t        /**\n\t\t         * Creates this mode for encryption.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t\t         */\n\t\t        createEncryptor: function (cipher, iv) {\n\t\t            return this.Encryptor.create(cipher, iv);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Creates this mode for decryption.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t\t         */\n\t\t        createDecryptor: function (cipher, iv) {\n\t\t            return this.Decryptor.create(cipher, iv);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Initializes a newly created mode.\n\t\t         *\n\t\t         * @param {Cipher} cipher A block cipher instance.\n\t\t         * @param {Array} iv The IV words.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t\t         */\n\t\t        init: function (cipher, iv) {\n\t\t            this._cipher = cipher;\n\t\t            this._iv = iv;\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Cipher Block Chaining mode.\n\t\t     */\n\t\t    var CBC = C_mode.CBC = (function () {\n\t\t        /**\n\t\t         * Abstract base CBC mode.\n\t\t         */\n\t\t        var CBC = BlockCipherMode.extend();\n\t\n\t\t        /**\n\t\t         * CBC encryptor.\n\t\t         */\n\t\t        CBC.Encryptor = CBC.extend({\n\t\t            /**\n\t\t             * Processes the data block at offset.\n\t\t             *\n\t\t             * @param {Array} words The data words to operate on.\n\t\t             * @param {number} offset The offset where the block starts.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     mode.processBlock(data.words, offset);\n\t\t             */\n\t\t            processBlock: function (words, offset) {\n\t\t                // Shortcuts\n\t\t                var cipher = this._cipher;\n\t\t                var blockSize = cipher.blockSize;\n\t\n\t\t                // XOR and encrypt\n\t\t                xorBlock.call(this, words, offset, blockSize);\n\t\t                cipher.encryptBlock(words, offset);\n\t\n\t\t                // Remember this block to use with next block\n\t\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t\t            }\n\t\t        });\n\t\n\t\t        /**\n\t\t         * CBC decryptor.\n\t\t         */\n\t\t        CBC.Decryptor = CBC.extend({\n\t\t            /**\n\t\t             * Processes the data block at offset.\n\t\t             *\n\t\t             * @param {Array} words The data words to operate on.\n\t\t             * @param {number} offset The offset where the block starts.\n\t\t             *\n\t\t             * @example\n\t\t             *\n\t\t             *     mode.processBlock(data.words, offset);\n\t\t             */\n\t\t            processBlock: function (words, offset) {\n\t\t                // Shortcuts\n\t\t                var cipher = this._cipher;\n\t\t                var blockSize = cipher.blockSize;\n\t\n\t\t                // Remember this block to use with next block\n\t\t                var thisBlock = words.slice(offset, offset + blockSize);\n\t\n\t\t                // Decrypt and XOR\n\t\t                cipher.decryptBlock(words, offset);\n\t\t                xorBlock.call(this, words, offset, blockSize);\n\t\n\t\t                // This block becomes the previous block\n\t\t                this._prevBlock = thisBlock;\n\t\t            }\n\t\t        });\n\t\n\t\t        function xorBlock(words, offset, blockSize) {\n\t\t            // Shortcut\n\t\t            var iv = this._iv;\n\t\n\t\t            // Choose mixing block\n\t\t            if (iv) {\n\t\t                var block = iv;\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            } else {\n\t\t                var block = this._prevBlock;\n\t\t            }\n\t\n\t\t            // XOR blocks\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= block[i];\n\t\t            }\n\t\t        }\n\t\n\t\t        return CBC;\n\t\t    }());\n\t\n\t\t    /**\n\t\t     * Padding namespace.\n\t\t     */\n\t\t    var C_pad = C.pad = {};\n\t\n\t\t    /**\n\t\t     * PKCS #5/7 padding strategy.\n\t\t     */\n\t\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t\t        /**\n\t\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t\t         *\n\t\t         * @param {WordArray} data The data to pad.\n\t\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t\t         */\n\t\t        pad: function (data, blockSize) {\n\t\t            // Shortcut\n\t\t            var blockSizeBytes = blockSize * 4;\n\t\n\t\t            // Count padding bytes\n\t\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\t\n\t\t            // Create padding word\n\t\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\t\n\t\t            // Create padding\n\t\t            var paddingWords = [];\n\t\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t\t                paddingWords.push(paddingWord);\n\t\t            }\n\t\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\t\n\t\t            // Add padding\n\t\t            data.concat(padding);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t\t         *\n\t\t         * @param {WordArray} data The data to unpad.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t\t         */\n\t\t        unpad: function (data) {\n\t\t            // Get number of padding bytes from last byte\n\t\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t            // Remove padding\n\t\t            data.sigBytes -= nPaddingBytes;\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * Abstract base block cipher template.\n\t\t     *\n\t\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t\t     */\n\t\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t\t         */\n\t\t        cfg: Cipher.cfg.extend({\n\t\t            mode: CBC,\n\t\t            padding: Pkcs7\n\t\t        }),\n\t\n\t\t        reset: function () {\n\t\t            // Reset cipher\n\t\t            Cipher.reset.call(this);\n\t\n\t\t            // Shortcuts\n\t\t            var cfg = this.cfg;\n\t\t            var iv = cfg.iv;\n\t\t            var mode = cfg.mode;\n\t\n\t\t            // Reset block mode\n\t\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t\t                var modeCreator = mode.createEncryptor;\n\t\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t\t                var modeCreator = mode.createDecryptor;\n\t\n\t\t                // Keep at least one block in the buffer for unpadding\n\t\t                this._minBufferSize = 1;\n\t\t            }\n\t\t            this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (words, offset) {\n\t\t            this._mode.processBlock(words, offset);\n\t\t        },\n\t\n\t\t        _doFinalize: function () {\n\t\t            // Shortcut\n\t\t            var padding = this.cfg.padding;\n\t\n\t\t            // Finalize\n\t\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t\t                // Pad data\n\t\t                padding.pad(this._data, this.blockSize);\n\t\n\t\t                // Process final blocks\n\t\t                var finalProcessedBlocks = this._process(!!'flush');\n\t\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t\t                // Process final blocks\n\t\t                var finalProcessedBlocks = this._process(!!'flush');\n\t\n\t\t                // Unpad data\n\t\t                padding.unpad(finalProcessedBlocks);\n\t\t            }\n\t\n\t\t            return finalProcessedBlocks;\n\t\t        },\n\t\n\t\t        blockSize: 128/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * A collection of cipher parameters.\n\t\t     *\n\t\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t\t     * @property {WordArray} key The key to this ciphertext.\n\t\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t\t     * @property {Cipher} algorithm The cipher algorithm.\n\t\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t\t     * @property {number} blockSize The block size of the cipher.\n\t\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t\t     */\n\t\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t\t        /**\n\t\t         * Initializes a newly created cipher params object.\n\t\t         *\n\t\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t\t         *         ciphertext: ciphertextWordArray,\n\t\t         *         key: keyWordArray,\n\t\t         *         iv: ivWordArray,\n\t\t         *         salt: saltWordArray,\n\t\t         *         algorithm: CryptoJS.algo.AES,\n\t\t         *         mode: CryptoJS.mode.CBC,\n\t\t         *         padding: CryptoJS.pad.PKCS7,\n\t\t         *         blockSize: 4,\n\t\t         *         formatter: CryptoJS.format.OpenSSL\n\t\t         *     });\n\t\t         */\n\t\t        init: function (cipherParams) {\n\t\t            this.mixIn(cipherParams);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts this cipher params object to a string.\n\t\t         *\n\t\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t\t         *\n\t\t         * @return {string} The stringified cipher params.\n\t\t         *\n\t\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var string = cipherParams + '';\n\t\t         *     var string = cipherParams.toString();\n\t\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t\t         */\n\t\t        toString: function (formatter) {\n\t\t            return (formatter || this.formatter).stringify(this);\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Format namespace.\n\t\t     */\n\t\t    var C_format = C.format = {};\n\t\n\t\t    /**\n\t\t     * OpenSSL formatting strategy.\n\t\t     */\n\t\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t\t        /**\n\t\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t\t         *\n\t\t         * @param {CipherParams} cipherParams The cipher params object.\n\t\t         *\n\t\t         * @return {string} The OpenSSL-compatible string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t\t         */\n\t\t        stringify: function (cipherParams) {\n\t\t            // Shortcuts\n\t\t            var ciphertext = cipherParams.ciphertext;\n\t\t            var salt = cipherParams.salt;\n\t\n\t\t            // Format\n\t\t            if (salt) {\n\t\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t\t            } else {\n\t\t                var wordArray = ciphertext;\n\t\t            }\n\t\n\t\t            return wordArray.toString(Base64);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t\t         *\n\t\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t\t         *\n\t\t         * @return {CipherParams} The cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t\t         */\n\t\t        parse: function (openSSLStr) {\n\t\t            // Parse base64\n\t\t            var ciphertext = Base64.parse(openSSLStr);\n\t\n\t\t            // Shortcut\n\t\t            var ciphertextWords = ciphertext.words;\n\t\n\t\t            // Test for salt\n\t\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t\t                // Extract salt\n\t\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\t\n\t\t                // Remove salt from ciphertext\n\t\t                ciphertextWords.splice(0, 4);\n\t\t                ciphertext.sigBytes -= 16;\n\t\t            }\n\t\n\t\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t\t     */\n\t\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t\t         */\n\t\t        cfg: Base.extend({\n\t\t            format: OpenSSLFormatter\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Encrypts a message.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {WordArray|string} message The message to encrypt.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        encrypt: function (cipher, message, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Encrypt\n\t\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t\t            var ciphertext = encryptor.finalize(message);\n\t\n\t\t            // Shortcut\n\t\t            var cipherCfg = encryptor.cfg;\n\t\n\t\t            // Create and return serializable cipher params\n\t\t            return CipherParams.create({\n\t\t                ciphertext: ciphertext,\n\t\t                key: key,\n\t\t                iv: cipherCfg.iv,\n\t\t                algorithm: cipher,\n\t\t                mode: cipherCfg.mode,\n\t\t                padding: cipherCfg.padding,\n\t\t                blockSize: cipher.blockSize,\n\t\t                formatter: cfg.format\n\t\t            });\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Decrypts serialized ciphertext.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t\t         * @param {WordArray} key The key.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {WordArray} The plaintext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Convert string to CipherParams\n\t\t            ciphertext = this._parse(ciphertext, cfg.format);\n\t\n\t\t            // Decrypt\n\t\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\t\n\t\t            return plaintext;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts serialized ciphertext to CipherParams,\n\t\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t\t         *\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t\t         *\n\t\t         * @return {CipherParams} The unserialized ciphertext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t\t         */\n\t\t        _parse: function (ciphertext, format) {\n\t\t            if (typeof ciphertext == 'string') {\n\t\t                return format.parse(ciphertext, this);\n\t\t            } else {\n\t\t                return ciphertext;\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Key derivation function namespace.\n\t\t     */\n\t\t    var C_kdf = C.kdf = {};\n\t\n\t\t    /**\n\t\t     * OpenSSL key derivation function.\n\t\t     */\n\t\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t\t        /**\n\t\t         * Derives a key and IV from a password.\n\t\t         *\n\t\t         * @param {string} password The password to derive from.\n\t\t         * @param {number} keySize The size in words of the key to generate.\n\t\t         * @param {number} ivSize The size in words of the IV to generate.\n\t\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t\t         */\n\t\t        execute: function (password, keySize, ivSize, salt) {\n\t\t            // Generate random salt\n\t\t            if (!salt) {\n\t\t                salt = WordArray.random(64/8);\n\t\t            }\n\t\n\t\t            // Derive key and IV\n\t\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t\n\t\t            // Separate key and IV\n\t\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t\t            key.sigBytes = keySize * 4;\n\t\n\t\t            // Return params\n\t\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t\t        }\n\t\t    };\n\t\n\t\t    /**\n\t\t     * A serializable cipher wrapper that derives the key from a password,\n\t\t     * and returns ciphertext as a serializable cipher params object.\n\t\t     */\n\t\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t\t         */\n\t\t        cfg: SerializableCipher.cfg.extend({\n\t\t            kdf: OpenSSLKdf\n\t\t        }),\n\t\n\t\t        /**\n\t\t         * Encrypts a message using a password.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {WordArray|string} message The message to encrypt.\n\t\t         * @param {string} password The password.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {CipherParams} A cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        encrypt: function (cipher, message, password, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Derive key and other params\n\t\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\t\n\t\t            // Add IV to config\n\t\t            cfg.iv = derivedParams.iv;\n\t\n\t\t            // Encrypt\n\t\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\t\n\t\t            // Mix in derived params\n\t\t            ciphertext.mixIn(derivedParams);\n\t\n\t\t            return ciphertext;\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Decrypts serialized ciphertext using a password.\n\t\t         *\n\t\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t\t         * @param {string} password The password.\n\t\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t\t         *\n\t\t         * @return {WordArray} The plaintext.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t\t         */\n\t\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t\t            // Apply config defaults\n\t\t            cfg = this.cfg.extend(cfg);\n\t\n\t\t            // Convert string to CipherParams\n\t\t            ciphertext = this._parse(ciphertext, cfg.format);\n\t\n\t\t            // Derive key and other params\n\t\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\t\n\t\t            // Add IV to config\n\t\t            cfg.iv = derivedParams.iv;\n\t\n\t\t            // Decrypt\n\t\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\t\n\t\t            return plaintext;\n\t\t        }\n\t\t    });\n\t\t}());\n\t\n\t\n\t}));\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Cipher Feedback block mode.\n\t\t */\n\t\tCryptoJS.mode.CFB = (function () {\n\t\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    CFB.Encryptor = CFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher;\n\t\t            var blockSize = cipher.blockSize;\n\t\n\t\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\t\n\t\t            // Remember this block to use with next block\n\t\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t\t        }\n\t\t    });\n\t\n\t\t    CFB.Decryptor = CFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher;\n\t\t            var blockSize = cipher.blockSize;\n\t\n\t\t            // Remember this block to use with next block\n\t\t            var thisBlock = words.slice(offset, offset + blockSize);\n\t\n\t\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\t\n\t\t            // This block becomes the previous block\n\t\t            this._prevBlock = thisBlock;\n\t\t        }\n\t\t    });\n\t\n\t\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t\t        // Shortcut\n\t\t        var iv = this._iv;\n\t\n\t\t        // Generate keystream\n\t\t        if (iv) {\n\t\t            var keystream = iv.slice(0);\n\t\n\t\t            // Remove IV for subsequent blocks\n\t\t            this._iv = undefined;\n\t\t        } else {\n\t\t            var keystream = this._prevBlock;\n\t\t        }\n\t\t        cipher.encryptBlock(keystream, 0);\n\t\n\t\t        // Encrypt\n\t\t        for (var i = 0; i < blockSize; i++) {\n\t\t            words[offset + i] ^= keystream[i];\n\t\t        }\n\t\t    }\n\t\n\t\t    return CFB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.CFB;\n\t\n\t}));\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Counter block mode.\n\t\t */\n\t\tCryptoJS.mode.CTR = (function () {\n\t\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var counter = this._counter;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                counter = this._counter = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\t            var keystream = counter.slice(0);\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Increment counter\n\t\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    CTR.Decryptor = Encryptor;\n\t\n\t\t    return CTR;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.CTR;\n\t\n\t}));\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/** @preserve\n\t\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t\t * derived from CryptoJS.mode.CTR\n\t\t * Jan Hruby jhruby.web@gmail.com\n\t\t */\n\t\tCryptoJS.mode.CTRGladman = (function () {\n\t\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t\tfunction incWord(word)\n\t\t\t{\n\t\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\t\tvar b3 = word & 0xff;\n\t\n\t\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t\t{\n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff)\n\t\t\t\t\t{\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t++b1;\n\t\t\t\t}\n\t\n\t\t\t\tword = 0;\n\t\t\t\tword += (b1 << 16);\n\t\t\t\tword += (b2 << 8);\n\t\t\t\tword += b3;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\tword += (0x01 << 24);\n\t\t\t\t}\n\t\t\t\treturn word;\n\t\t\t}\n\t\n\t\t\tfunction incCounter(counter)\n\t\t\t{\n\t\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t\t{\n\t\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t\t}\n\t\t\t\treturn counter;\n\t\t\t}\n\t\n\t\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var counter = this._counter;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                counter = this._counter = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\n\t\t\t\t\tincCounter(counter);\n\t\n\t\t\t\t\tvar keystream = counter.slice(0);\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    CTRGladman.Decryptor = Encryptor;\n\t\n\t\t    return CTRGladman;\n\t\t}());\n\t\n\t\n\t\n\t\n\t\treturn CryptoJS.mode.CTRGladman;\n\t\n\t}));\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Output Feedback block mode.\n\t\t */\n\t\tCryptoJS.mode.OFB = (function () {\n\t\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            // Shortcuts\n\t\t            var cipher = this._cipher\n\t\t            var blockSize = cipher.blockSize;\n\t\t            var iv = this._iv;\n\t\t            var keystream = this._keystream;\n\t\n\t\t            // Generate keystream\n\t\t            if (iv) {\n\t\t                keystream = this._keystream = iv.slice(0);\n\t\n\t\t                // Remove IV for subsequent blocks\n\t\t                this._iv = undefined;\n\t\t            }\n\t\t            cipher.encryptBlock(keystream, 0);\n\t\n\t\t            // Encrypt\n\t\t            for (var i = 0; i < blockSize; i++) {\n\t\t                words[offset + i] ^= keystream[i];\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    OFB.Decryptor = Encryptor;\n\t\n\t\t    return OFB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.OFB;\n\t\n\t}));\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Electronic Codebook block mode.\n\t\t */\n\t\tCryptoJS.mode.ECB = (function () {\n\t\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\t\n\t\t    ECB.Encryptor = ECB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            this._cipher.encryptBlock(words, offset);\n\t\t        }\n\t\t    });\n\t\n\t\t    ECB.Decryptor = ECB.extend({\n\t\t        processBlock: function (words, offset) {\n\t\t            this._cipher.decryptBlock(words, offset);\n\t\t        }\n\t\t    });\n\t\n\t\t    return ECB;\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.mode.ECB;\n\t\n\t}));\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ANSI X.923 padding strategy.\n\t\t */\n\t\tCryptoJS.pad.AnsiX923 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcuts\n\t\t        var dataSigBytes = data.sigBytes;\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Count padding bytes\n\t\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\t\n\t\t        // Compute last byte position\n\t\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\t\n\t\t        // Pad\n\t\t        data.clamp();\n\t\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t\t        data.sigBytes += nPaddingBytes;\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Get number of padding bytes from last byte\n\t\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t        // Remove padding\n\t\t        data.sigBytes -= nPaddingBytes;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Ansix923;\n\t\n\t}));\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ISO 10126 padding strategy.\n\t\t */\n\t\tCryptoJS.pad.Iso10126 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcut\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Count padding bytes\n\t\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\t\n\t\t        // Pad\n\t\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Get number of padding bytes from last byte\n\t\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\t\n\t\t        // Remove padding\n\t\t        data.sigBytes -= nPaddingBytes;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Iso10126;\n\t\n\t}));\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * ISO/IEC 9797-1 Padding Method 2.\n\t\t */\n\t\tCryptoJS.pad.Iso97971 = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Add 0x80 byte\n\t\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\t\n\t\t        // Zero pad the rest\n\t\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Remove zero padding\n\t\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\t\n\t\t        // Remove one more byte -- the 0x80 byte\n\t\t        data.sigBytes--;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.Iso97971;\n\t\n\t}));\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * Zero padding strategy.\n\t\t */\n\t\tCryptoJS.pad.ZeroPadding = {\n\t\t    pad: function (data, blockSize) {\n\t\t        // Shortcut\n\t\t        var blockSizeBytes = blockSize * 4;\n\t\n\t\t        // Pad\n\t\t        data.clamp();\n\t\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t\t    },\n\t\n\t\t    unpad: function (data) {\n\t\t        // Shortcut\n\t\t        var dataWords = data.words;\n\t\n\t\t        // Unpad\n\t\t        var i = data.sigBytes - 1;\n\t\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t\t            i--;\n\t\t        }\n\t\t        data.sigBytes = i + 1;\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.ZeroPadding;\n\t\n\t}));\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t/**\n\t\t * A noop padding strategy.\n\t\t */\n\t\tCryptoJS.pad.NoPadding = {\n\t\t    pad: function () {\n\t\t    },\n\t\n\t\t    unpad: function () {\n\t\t    }\n\t\t};\n\t\n\t\n\t\treturn CryptoJS.pad.NoPadding;\n\t\n\t}));\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function (undefined) {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var CipherParams = C_lib.CipherParams;\n\t\t    var C_enc = C.enc;\n\t\t    var Hex = C_enc.Hex;\n\t\t    var C_format = C.format;\n\t\n\t\t    var HexFormatter = C_format.Hex = {\n\t\t        /**\n\t\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t\t         *\n\t\t         * @param {CipherParams} cipherParams The cipher params object.\n\t\t         *\n\t\t         * @return {string} The hexadecimally encoded string.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t\t         */\n\t\t        stringify: function (cipherParams) {\n\t\t            return cipherParams.ciphertext.toString(Hex);\n\t\t        },\n\t\n\t\t        /**\n\t\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t\t         *\n\t\t         * @param {string} input The hexadecimally encoded string.\n\t\t         *\n\t\t         * @return {CipherParams} The cipher params object.\n\t\t         *\n\t\t         * @static\n\t\t         *\n\t\t         * @example\n\t\t         *\n\t\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t\t         */\n\t\t        parse: function (input) {\n\t\t            var ciphertext = Hex.parse(input);\n\t\t            return CipherParams.create({ ciphertext: ciphertext });\n\t\t        }\n\t\t    };\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.format.Hex;\n\t\n\t}));\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(16), __webpack_require__(17), __webpack_require__(27), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var BlockCipher = C_lib.BlockCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Lookup tables\n\t\t    var SBOX = [];\n\t\t    var INV_SBOX = [];\n\t\t    var SUB_MIX_0 = [];\n\t\t    var SUB_MIX_1 = [];\n\t\t    var SUB_MIX_2 = [];\n\t\t    var SUB_MIX_3 = [];\n\t\t    var INV_SUB_MIX_0 = [];\n\t\t    var INV_SUB_MIX_1 = [];\n\t\t    var INV_SUB_MIX_2 = [];\n\t\t    var INV_SUB_MIX_3 = [];\n\t\n\t\t    // Compute lookup tables\n\t\t    (function () {\n\t\t        // Compute double table\n\t\t        var d = [];\n\t\t        for (var i = 0; i < 256; i++) {\n\t\t            if (i < 128) {\n\t\t                d[i] = i << 1;\n\t\t            } else {\n\t\t                d[i] = (i << 1) ^ 0x11b;\n\t\t            }\n\t\t        }\n\t\n\t\t        // Walk GF(2^8)\n\t\t        var x = 0;\n\t\t        var xi = 0;\n\t\t        for (var i = 0; i < 256; i++) {\n\t\t            // Compute sbox\n\t\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t\t            SBOX[x] = sx;\n\t\t            INV_SBOX[sx] = x;\n\t\n\t\t            // Compute multiplication\n\t\t            var x2 = d[x];\n\t\t            var x4 = d[x2];\n\t\t            var x8 = d[x4];\n\t\n\t\t            // Compute sub bytes, mix columns tables\n\t\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t\t            SUB_MIX_3[x] = t;\n\t\n\t\t            // Compute inv sub bytes, inv mix columns tables\n\t\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t\t            INV_SUB_MIX_3[sx] = t;\n\t\n\t\t            // Compute next counter\n\t\t            if (!x) {\n\t\t                x = xi = 1;\n\t\t            } else {\n\t\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t\t                xi ^= d[d[xi]];\n\t\t            }\n\t\t        }\n\t\t    }());\n\t\n\t\t    // Precomputed Rcon lookup\n\t\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\t\n\t\t    /**\n\t\t     * AES block cipher algorithm.\n\t\t     */\n\t\t    var AES = C_algo.AES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Skip reset of nRounds has been set before and key did not change\n\t\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t\t                return;\n\t\t            }\n\t\n\t\t            // Shortcuts\n\t\t            var key = this._keyPriorReset = this._key;\n\t\t            var keyWords = key.words;\n\t\t            var keySize = key.sigBytes / 4;\n\t\n\t\t            // Compute number of rounds\n\t\t            var nRounds = this._nRounds = keySize + 6;\n\t\n\t\t            // Compute number of key schedule rows\n\t\t            var ksRows = (nRounds + 1) * 4;\n\t\n\t\t            // Compute key schedule\n\t\t            var keySchedule = this._keySchedule = [];\n\t\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t\t                if (ksRow < keySize) {\n\t\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t\t                } else {\n\t\t                    var t = keySchedule[ksRow - 1];\n\t\n\t\t                    if (!(ksRow % keySize)) {\n\t\t                        // Rot word\n\t\t                        t = (t << 8) | (t >>> 24);\n\t\n\t\t                        // Sub word\n\t\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t\n\t\t                        // Mix Rcon\n\t\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t\t                        // Sub word\n\t\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t\t                    }\n\t\n\t\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t\t                }\n\t\t            }\n\t\n\t\t            // Compute inv key schedule\n\t\t            var invKeySchedule = this._invKeySchedule = [];\n\t\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t\t                var ksRow = ksRows - invKsRow;\n\t\n\t\t                if (invKsRow % 4) {\n\t\t                    var t = keySchedule[ksRow];\n\t\t                } else {\n\t\t                    var t = keySchedule[ksRow - 4];\n\t\t                }\n\t\n\t\t                if (invKsRow < 4 || ksRow <= 4) {\n\t\t                    invKeySchedule[invKsRow] = t;\n\t\t                } else {\n\t\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            // Swap 2nd and 4th rows\n\t\t            var t = M[offset + 1];\n\t\t            M[offset + 1] = M[offset + 3];\n\t\t            M[offset + 3] = t;\n\t\n\t\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\t\n\t\t            // Inv swap 2nd and 4th rows\n\t\t            var t = M[offset + 1];\n\t\t            M[offset + 1] = M[offset + 3];\n\t\t            M[offset + 3] = t;\n\t\t        },\n\t\n\t\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t\t            // Shortcut\n\t\t            var nRounds = this._nRounds;\n\t\n\t\t            // Get input, add round key\n\t\t            var s0 = M[offset]     ^ keySchedule[0];\n\t\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\t\n\t\t            // Key schedule row counter\n\t\t            var ksRow = 4;\n\t\n\t\t            // Rounds\n\t\t            for (var round = 1; round < nRounds; round++) {\n\t\t                // Shift rows, sub bytes, mix columns, add round key\n\t\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\t\n\t\t                // Update state\n\t\t                s0 = t0;\n\t\t                s1 = t1;\n\t\t                s2 = t2;\n\t\t                s3 = t3;\n\t\t            }\n\t\n\t\t            // Shift rows, sub bytes, add round key\n\t\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\t\n\t\t            // Set output\n\t\t            M[offset]     = t0;\n\t\t            M[offset + 1] = t1;\n\t\t            M[offset + 2] = t2;\n\t\t            M[offset + 3] = t3;\n\t\t        },\n\t\n\t\t        keySize: 256/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.AES = BlockCipher._createHelper(AES);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.AES;\n\t\n\t}));\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(16), __webpack_require__(17), __webpack_require__(27), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var WordArray = C_lib.WordArray;\n\t\t    var BlockCipher = C_lib.BlockCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Permuted Choice 1 constants\n\t\t    var PC1 = [\n\t\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t\t        29, 21, 13, 5,  28, 20, 12, 4\n\t\t    ];\n\t\n\t\t    // Permuted Choice 2 constants\n\t\t    var PC2 = [\n\t\t        14, 17, 11, 24, 1,  5,\n\t\t        3,  28, 15, 6,  21, 10,\n\t\t        23, 19, 12, 4,  26, 8,\n\t\t        16, 7,  27, 20, 13, 2,\n\t\t        41, 52, 31, 37, 47, 55,\n\t\t        30, 40, 51, 45, 33, 48,\n\t\t        44, 49, 39, 56, 34, 53,\n\t\t        46, 42, 50, 36, 29, 32\n\t\t    ];\n\t\n\t\t    // Cumulative bit shift constants\n\t\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\t\n\t\t    // SBOXes and round permutation constants\n\t\t    var SBOX_P = [\n\t\t        {\n\t\t            0x0: 0x808200,\n\t\t            0x10000000: 0x8000,\n\t\t            0x20000000: 0x808002,\n\t\t            0x30000000: 0x2,\n\t\t            0x40000000: 0x200,\n\t\t            0x50000000: 0x808202,\n\t\t            0x60000000: 0x800202,\n\t\t            0x70000000: 0x800000,\n\t\t            0x80000000: 0x202,\n\t\t            0x90000000: 0x800200,\n\t\t            0xa0000000: 0x8200,\n\t\t            0xb0000000: 0x808000,\n\t\t            0xc0000000: 0x8002,\n\t\t            0xd0000000: 0x800002,\n\t\t            0xe0000000: 0x0,\n\t\t            0xf0000000: 0x8202,\n\t\t            0x8000000: 0x0,\n\t\t            0x18000000: 0x808202,\n\t\t            0x28000000: 0x8202,\n\t\t            0x38000000: 0x8000,\n\t\t            0x48000000: 0x808200,\n\t\t            0x58000000: 0x200,\n\t\t            0x68000000: 0x808002,\n\t\t            0x78000000: 0x2,\n\t\t            0x88000000: 0x800200,\n\t\t            0x98000000: 0x8200,\n\t\t            0xa8000000: 0x808000,\n\t\t            0xb8000000: 0x800202,\n\t\t            0xc8000000: 0x800002,\n\t\t            0xd8000000: 0x8002,\n\t\t            0xe8000000: 0x202,\n\t\t            0xf8000000: 0x800000,\n\t\t            0x1: 0x8000,\n\t\t            0x10000001: 0x2,\n\t\t            0x20000001: 0x808200,\n\t\t            0x30000001: 0x800000,\n\t\t            0x40000001: 0x808002,\n\t\t            0x50000001: 0x8200,\n\t\t            0x60000001: 0x200,\n\t\t            0x70000001: 0x800202,\n\t\t            0x80000001: 0x808202,\n\t\t            0x90000001: 0x808000,\n\t\t            0xa0000001: 0x800002,\n\t\t            0xb0000001: 0x8202,\n\t\t            0xc0000001: 0x202,\n\t\t            0xd0000001: 0x800200,\n\t\t            0xe0000001: 0x8002,\n\t\t            0xf0000001: 0x0,\n\t\t            0x8000001: 0x808202,\n\t\t            0x18000001: 0x808000,\n\t\t            0x28000001: 0x800000,\n\t\t            0x38000001: 0x200,\n\t\t            0x48000001: 0x8000,\n\t\t            0x58000001: 0x800002,\n\t\t            0x68000001: 0x2,\n\t\t            0x78000001: 0x8202,\n\t\t            0x88000001: 0x8002,\n\t\t            0x98000001: 0x800202,\n\t\t            0xa8000001: 0x202,\n\t\t            0xb8000001: 0x808200,\n\t\t            0xc8000001: 0x800200,\n\t\t            0xd8000001: 0x0,\n\t\t            0xe8000001: 0x8200,\n\t\t            0xf8000001: 0x808002\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x40084010,\n\t\t            0x1000000: 0x4000,\n\t\t            0x2000000: 0x80000,\n\t\t            0x3000000: 0x40080010,\n\t\t            0x4000000: 0x40000010,\n\t\t            0x5000000: 0x40084000,\n\t\t            0x6000000: 0x40004000,\n\t\t            0x7000000: 0x10,\n\t\t            0x8000000: 0x84000,\n\t\t            0x9000000: 0x40004010,\n\t\t            0xa000000: 0x40000000,\n\t\t            0xb000000: 0x84010,\n\t\t            0xc000000: 0x80010,\n\t\t            0xd000000: 0x0,\n\t\t            0xe000000: 0x4010,\n\t\t            0xf000000: 0x40080000,\n\t\t            0x800000: 0x40004000,\n\t\t            0x1800000: 0x84010,\n\t\t            0x2800000: 0x10,\n\t\t            0x3800000: 0x40004010,\n\t\t            0x4800000: 0x40084010,\n\t\t            0x5800000: 0x40000000,\n\t\t            0x6800000: 0x80000,\n\t\t            0x7800000: 0x40080010,\n\t\t            0x8800000: 0x80010,\n\t\t            0x9800000: 0x0,\n\t\t            0xa800000: 0x4000,\n\t\t            0xb800000: 0x40080000,\n\t\t            0xc800000: 0x40000010,\n\t\t            0xd800000: 0x84000,\n\t\t            0xe800000: 0x40084000,\n\t\t            0xf800000: 0x4010,\n\t\t            0x10000000: 0x0,\n\t\t            0x11000000: 0x40080010,\n\t\t            0x12000000: 0x40004010,\n\t\t            0x13000000: 0x40084000,\n\t\t            0x14000000: 0x40080000,\n\t\t            0x15000000: 0x10,\n\t\t            0x16000000: 0x84010,\n\t\t            0x17000000: 0x4000,\n\t\t            0x18000000: 0x4010,\n\t\t            0x19000000: 0x80000,\n\t\t            0x1a000000: 0x80010,\n\t\t            0x1b000000: 0x40000010,\n\t\t            0x1c000000: 0x84000,\n\t\t            0x1d000000: 0x40004000,\n\t\t            0x1e000000: 0x40000000,\n\t\t            0x1f000000: 0x40084010,\n\t\t            0x10800000: 0x84010,\n\t\t            0x11800000: 0x80000,\n\t\t            0x12800000: 0x40080000,\n\t\t            0x13800000: 0x4000,\n\t\t            0x14800000: 0x40004000,\n\t\t            0x15800000: 0x40084010,\n\t\t            0x16800000: 0x10,\n\t\t            0x17800000: 0x40000000,\n\t\t            0x18800000: 0x40084000,\n\t\t            0x19800000: 0x40000010,\n\t\t            0x1a800000: 0x40004010,\n\t\t            0x1b800000: 0x80010,\n\t\t            0x1c800000: 0x0,\n\t\t            0x1d800000: 0x4010,\n\t\t            0x1e800000: 0x40080010,\n\t\t            0x1f800000: 0x84000\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x104,\n\t\t            0x100000: 0x0,\n\t\t            0x200000: 0x4000100,\n\t\t            0x300000: 0x10104,\n\t\t            0x400000: 0x10004,\n\t\t            0x500000: 0x4000004,\n\t\t            0x600000: 0x4010104,\n\t\t            0x700000: 0x4010000,\n\t\t            0x800000: 0x4000000,\n\t\t            0x900000: 0x4010100,\n\t\t            0xa00000: 0x10100,\n\t\t            0xb00000: 0x4010004,\n\t\t            0xc00000: 0x4000104,\n\t\t            0xd00000: 0x10000,\n\t\t            0xe00000: 0x4,\n\t\t            0xf00000: 0x100,\n\t\t            0x80000: 0x4010100,\n\t\t            0x180000: 0x4010004,\n\t\t            0x280000: 0x0,\n\t\t            0x380000: 0x4000100,\n\t\t            0x480000: 0x4000004,\n\t\t            0x580000: 0x10000,\n\t\t            0x680000: 0x10004,\n\t\t            0x780000: 0x104,\n\t\t            0x880000: 0x4,\n\t\t            0x980000: 0x100,\n\t\t            0xa80000: 0x4010000,\n\t\t            0xb80000: 0x10104,\n\t\t            0xc80000: 0x10100,\n\t\t            0xd80000: 0x4000104,\n\t\t            0xe80000: 0x4010104,\n\t\t            0xf80000: 0x4000000,\n\t\t            0x1000000: 0x4010100,\n\t\t            0x1100000: 0x10004,\n\t\t            0x1200000: 0x10000,\n\t\t            0x1300000: 0x4000100,\n\t\t            0x1400000: 0x100,\n\t\t            0x1500000: 0x4010104,\n\t\t            0x1600000: 0x4000004,\n\t\t            0x1700000: 0x0,\n\t\t            0x1800000: 0x4000104,\n\t\t            0x1900000: 0x4000000,\n\t\t            0x1a00000: 0x4,\n\t\t            0x1b00000: 0x10100,\n\t\t            0x1c00000: 0x4010000,\n\t\t            0x1d00000: 0x104,\n\t\t            0x1e00000: 0x10104,\n\t\t            0x1f00000: 0x4010004,\n\t\t            0x1080000: 0x4000000,\n\t\t            0x1180000: 0x104,\n\t\t            0x1280000: 0x4010100,\n\t\t            0x1380000: 0x0,\n\t\t            0x1480000: 0x10004,\n\t\t            0x1580000: 0x4000100,\n\t\t            0x1680000: 0x100,\n\t\t            0x1780000: 0x4010004,\n\t\t            0x1880000: 0x10000,\n\t\t            0x1980000: 0x4010104,\n\t\t            0x1a80000: 0x10104,\n\t\t            0x1b80000: 0x4000004,\n\t\t            0x1c80000: 0x4000104,\n\t\t            0x1d80000: 0x4010000,\n\t\t            0x1e80000: 0x4,\n\t\t            0x1f80000: 0x10100\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x80401000,\n\t\t            0x10000: 0x80001040,\n\t\t            0x20000: 0x401040,\n\t\t            0x30000: 0x80400000,\n\t\t            0x40000: 0x0,\n\t\t            0x50000: 0x401000,\n\t\t            0x60000: 0x80000040,\n\t\t            0x70000: 0x400040,\n\t\t            0x80000: 0x80000000,\n\t\t            0x90000: 0x400000,\n\t\t            0xa0000: 0x40,\n\t\t            0xb0000: 0x80001000,\n\t\t            0xc0000: 0x80400040,\n\t\t            0xd0000: 0x1040,\n\t\t            0xe0000: 0x1000,\n\t\t            0xf0000: 0x80401040,\n\t\t            0x8000: 0x80001040,\n\t\t            0x18000: 0x40,\n\t\t            0x28000: 0x80400040,\n\t\t            0x38000: 0x80001000,\n\t\t            0x48000: 0x401000,\n\t\t            0x58000: 0x80401040,\n\t\t            0x68000: 0x0,\n\t\t            0x78000: 0x80400000,\n\t\t            0x88000: 0x1000,\n\t\t            0x98000: 0x80401000,\n\t\t            0xa8000: 0x400000,\n\t\t            0xb8000: 0x1040,\n\t\t            0xc8000: 0x80000000,\n\t\t            0xd8000: 0x400040,\n\t\t            0xe8000: 0x401040,\n\t\t            0xf8000: 0x80000040,\n\t\t            0x100000: 0x400040,\n\t\t            0x110000: 0x401000,\n\t\t            0x120000: 0x80000040,\n\t\t            0x130000: 0x0,\n\t\t            0x140000: 0x1040,\n\t\t            0x150000: 0x80400040,\n\t\t            0x160000: 0x80401000,\n\t\t            0x170000: 0x80001040,\n\t\t            0x180000: 0x80401040,\n\t\t            0x190000: 0x80000000,\n\t\t            0x1a0000: 0x80400000,\n\t\t            0x1b0000: 0x401040,\n\t\t            0x1c0000: 0x80001000,\n\t\t            0x1d0000: 0x400000,\n\t\t            0x1e0000: 0x40,\n\t\t            0x1f0000: 0x1000,\n\t\t            0x108000: 0x80400000,\n\t\t            0x118000: 0x80401040,\n\t\t            0x128000: 0x0,\n\t\t            0x138000: 0x401000,\n\t\t            0x148000: 0x400040,\n\t\t            0x158000: 0x80000000,\n\t\t            0x168000: 0x80001040,\n\t\t            0x178000: 0x40,\n\t\t            0x188000: 0x80000040,\n\t\t            0x198000: 0x1000,\n\t\t            0x1a8000: 0x80001000,\n\t\t            0x1b8000: 0x80400040,\n\t\t            0x1c8000: 0x1040,\n\t\t            0x1d8000: 0x80401000,\n\t\t            0x1e8000: 0x400000,\n\t\t            0x1f8000: 0x401040\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x80,\n\t\t            0x1000: 0x1040000,\n\t\t            0x2000: 0x40000,\n\t\t            0x3000: 0x20000000,\n\t\t            0x4000: 0x20040080,\n\t\t            0x5000: 0x1000080,\n\t\t            0x6000: 0x21000080,\n\t\t            0x7000: 0x40080,\n\t\t            0x8000: 0x1000000,\n\t\t            0x9000: 0x20040000,\n\t\t            0xa000: 0x20000080,\n\t\t            0xb000: 0x21040080,\n\t\t            0xc000: 0x21040000,\n\t\t            0xd000: 0x0,\n\t\t            0xe000: 0x1040080,\n\t\t            0xf000: 0x21000000,\n\t\t            0x800: 0x1040080,\n\t\t            0x1800: 0x21000080,\n\t\t            0x2800: 0x80,\n\t\t            0x3800: 0x1040000,\n\t\t            0x4800: 0x40000,\n\t\t            0x5800: 0x20040080,\n\t\t            0x6800: 0x21040000,\n\t\t            0x7800: 0x20000000,\n\t\t            0x8800: 0x20040000,\n\t\t            0x9800: 0x0,\n\t\t            0xa800: 0x21040080,\n\t\t            0xb800: 0x1000080,\n\t\t            0xc800: 0x20000080,\n\t\t            0xd800: 0x21000000,\n\t\t            0xe800: 0x1000000,\n\t\t            0xf800: 0x40080,\n\t\t            0x10000: 0x40000,\n\t\t            0x11000: 0x80,\n\t\t            0x12000: 0x20000000,\n\t\t            0x13000: 0x21000080,\n\t\t            0x14000: 0x1000080,\n\t\t            0x15000: 0x21040000,\n\t\t            0x16000: 0x20040080,\n\t\t            0x17000: 0x1000000,\n\t\t            0x18000: 0x21040080,\n\t\t            0x19000: 0x21000000,\n\t\t            0x1a000: 0x1040000,\n\t\t            0x1b000: 0x20040000,\n\t\t            0x1c000: 0x40080,\n\t\t            0x1d000: 0x20000080,\n\t\t            0x1e000: 0x0,\n\t\t            0x1f000: 0x1040080,\n\t\t            0x10800: 0x21000080,\n\t\t            0x11800: 0x1000000,\n\t\t            0x12800: 0x1040000,\n\t\t            0x13800: 0x20040080,\n\t\t            0x14800: 0x20000000,\n\t\t            0x15800: 0x1040080,\n\t\t            0x16800: 0x80,\n\t\t            0x17800: 0x21040000,\n\t\t            0x18800: 0x40080,\n\t\t            0x19800: 0x21040080,\n\t\t            0x1a800: 0x0,\n\t\t            0x1b800: 0x21000000,\n\t\t            0x1c800: 0x1000080,\n\t\t            0x1d800: 0x40000,\n\t\t            0x1e800: 0x20040000,\n\t\t            0x1f800: 0x20000080\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x10000008,\n\t\t            0x100: 0x2000,\n\t\t            0x200: 0x10200000,\n\t\t            0x300: 0x10202008,\n\t\t            0x400: 0x10002000,\n\t\t            0x500: 0x200000,\n\t\t            0x600: 0x200008,\n\t\t            0x700: 0x10000000,\n\t\t            0x800: 0x0,\n\t\t            0x900: 0x10002008,\n\t\t            0xa00: 0x202000,\n\t\t            0xb00: 0x8,\n\t\t            0xc00: 0x10200008,\n\t\t            0xd00: 0x202008,\n\t\t            0xe00: 0x2008,\n\t\t            0xf00: 0x10202000,\n\t\t            0x80: 0x10200000,\n\t\t            0x180: 0x10202008,\n\t\t            0x280: 0x8,\n\t\t            0x380: 0x200000,\n\t\t            0x480: 0x202008,\n\t\t            0x580: 0x10000008,\n\t\t            0x680: 0x10002000,\n\t\t            0x780: 0x2008,\n\t\t            0x880: 0x200008,\n\t\t            0x980: 0x2000,\n\t\t            0xa80: 0x10002008,\n\t\t            0xb80: 0x10200008,\n\t\t            0xc80: 0x0,\n\t\t            0xd80: 0x10202000,\n\t\t            0xe80: 0x202000,\n\t\t            0xf80: 0x10000000,\n\t\t            0x1000: 0x10002000,\n\t\t            0x1100: 0x10200008,\n\t\t            0x1200: 0x10202008,\n\t\t            0x1300: 0x2008,\n\t\t            0x1400: 0x200000,\n\t\t            0x1500: 0x10000000,\n\t\t            0x1600: 0x10000008,\n\t\t            0x1700: 0x202000,\n\t\t            0x1800: 0x202008,\n\t\t            0x1900: 0x0,\n\t\t            0x1a00: 0x8,\n\t\t            0x1b00: 0x10200000,\n\t\t            0x1c00: 0x2000,\n\t\t            0x1d00: 0x10002008,\n\t\t            0x1e00: 0x10202000,\n\t\t            0x1f00: 0x200008,\n\t\t            0x1080: 0x8,\n\t\t            0x1180: 0x202000,\n\t\t            0x1280: 0x200000,\n\t\t            0x1380: 0x10000008,\n\t\t            0x1480: 0x10002000,\n\t\t            0x1580: 0x2008,\n\t\t            0x1680: 0x10202008,\n\t\t            0x1780: 0x10200000,\n\t\t            0x1880: 0x10202000,\n\t\t            0x1980: 0x10200008,\n\t\t            0x1a80: 0x2000,\n\t\t            0x1b80: 0x202008,\n\t\t            0x1c80: 0x200008,\n\t\t            0x1d80: 0x0,\n\t\t            0x1e80: 0x10000000,\n\t\t            0x1f80: 0x10002008\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x100000,\n\t\t            0x10: 0x2000401,\n\t\t            0x20: 0x400,\n\t\t            0x30: 0x100401,\n\t\t            0x40: 0x2100401,\n\t\t            0x50: 0x0,\n\t\t            0x60: 0x1,\n\t\t            0x70: 0x2100001,\n\t\t            0x80: 0x2000400,\n\t\t            0x90: 0x100001,\n\t\t            0xa0: 0x2000001,\n\t\t            0xb0: 0x2100400,\n\t\t            0xc0: 0x2100000,\n\t\t            0xd0: 0x401,\n\t\t            0xe0: 0x100400,\n\t\t            0xf0: 0x2000000,\n\t\t            0x8: 0x2100001,\n\t\t            0x18: 0x0,\n\t\t            0x28: 0x2000401,\n\t\t            0x38: 0x2100400,\n\t\t            0x48: 0x100000,\n\t\t            0x58: 0x2000001,\n\t\t            0x68: 0x2000000,\n\t\t            0x78: 0x401,\n\t\t            0x88: 0x100401,\n\t\t            0x98: 0x2000400,\n\t\t            0xa8: 0x2100000,\n\t\t            0xb8: 0x100001,\n\t\t            0xc8: 0x400,\n\t\t            0xd8: 0x2100401,\n\t\t            0xe8: 0x1,\n\t\t            0xf8: 0x100400,\n\t\t            0x100: 0x2000000,\n\t\t            0x110: 0x100000,\n\t\t            0x120: 0x2000401,\n\t\t            0x130: 0x2100001,\n\t\t            0x140: 0x100001,\n\t\t            0x150: 0x2000400,\n\t\t            0x160: 0x2100400,\n\t\t            0x170: 0x100401,\n\t\t            0x180: 0x401,\n\t\t            0x190: 0x2100401,\n\t\t            0x1a0: 0x100400,\n\t\t            0x1b0: 0x1,\n\t\t            0x1c0: 0x0,\n\t\t            0x1d0: 0x2100000,\n\t\t            0x1e0: 0x2000001,\n\t\t            0x1f0: 0x400,\n\t\t            0x108: 0x100400,\n\t\t            0x118: 0x2000401,\n\t\t            0x128: 0x2100001,\n\t\t            0x138: 0x1,\n\t\t            0x148: 0x2000000,\n\t\t            0x158: 0x100000,\n\t\t            0x168: 0x401,\n\t\t            0x178: 0x2100400,\n\t\t            0x188: 0x2000001,\n\t\t            0x198: 0x2100000,\n\t\t            0x1a8: 0x0,\n\t\t            0x1b8: 0x2100401,\n\t\t            0x1c8: 0x100401,\n\t\t            0x1d8: 0x400,\n\t\t            0x1e8: 0x2000400,\n\t\t            0x1f8: 0x100001\n\t\t        },\n\t\t        {\n\t\t            0x0: 0x8000820,\n\t\t            0x1: 0x20000,\n\t\t            0x2: 0x8000000,\n\t\t            0x3: 0x20,\n\t\t            0x4: 0x20020,\n\t\t            0x5: 0x8020820,\n\t\t            0x6: 0x8020800,\n\t\t            0x7: 0x800,\n\t\t            0x8: 0x8020000,\n\t\t            0x9: 0x8000800,\n\t\t            0xa: 0x20800,\n\t\t            0xb: 0x8020020,\n\t\t            0xc: 0x820,\n\t\t            0xd: 0x0,\n\t\t            0xe: 0x8000020,\n\t\t            0xf: 0x20820,\n\t\t            0x80000000: 0x800,\n\t\t            0x80000001: 0x8020820,\n\t\t            0x80000002: 0x8000820,\n\t\t            0x80000003: 0x8000000,\n\t\t            0x80000004: 0x8020000,\n\t\t            0x80000005: 0x20800,\n\t\t            0x80000006: 0x20820,\n\t\t            0x80000007: 0x20,\n\t\t            0x80000008: 0x8000020,\n\t\t            0x80000009: 0x820,\n\t\t            0x8000000a: 0x20020,\n\t\t            0x8000000b: 0x8020800,\n\t\t            0x8000000c: 0x0,\n\t\t            0x8000000d: 0x8020020,\n\t\t            0x8000000e: 0x8000800,\n\t\t            0x8000000f: 0x20000,\n\t\t            0x10: 0x20820,\n\t\t            0x11: 0x8020800,\n\t\t            0x12: 0x20,\n\t\t            0x13: 0x800,\n\t\t            0x14: 0x8000800,\n\t\t            0x15: 0x8000020,\n\t\t            0x16: 0x8020020,\n\t\t            0x17: 0x20000,\n\t\t            0x18: 0x0,\n\t\t            0x19: 0x20020,\n\t\t            0x1a: 0x8020000,\n\t\t            0x1b: 0x8000820,\n\t\t            0x1c: 0x8020820,\n\t\t            0x1d: 0x20800,\n\t\t            0x1e: 0x820,\n\t\t            0x1f: 0x8000000,\n\t\t            0x80000010: 0x20000,\n\t\t            0x80000011: 0x800,\n\t\t            0x80000012: 0x8020020,\n\t\t            0x80000013: 0x20820,\n\t\t            0x80000014: 0x20,\n\t\t            0x80000015: 0x8020000,\n\t\t            0x80000016: 0x8000000,\n\t\t            0x80000017: 0x8000820,\n\t\t            0x80000018: 0x8020820,\n\t\t            0x80000019: 0x8000020,\n\t\t            0x8000001a: 0x8000800,\n\t\t            0x8000001b: 0x0,\n\t\t            0x8000001c: 0x20800,\n\t\t            0x8000001d: 0x820,\n\t\t            0x8000001e: 0x20020,\n\t\t            0x8000001f: 0x8020800\n\t\t        }\n\t\t    ];\n\t\n\t\t    // Masks that select the SBOX input\n\t\t    var SBOX_MASK = [\n\t\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t\t    ];\n\t\n\t\t    /**\n\t\t     * DES block cipher algorithm.\n\t\t     */\n\t\t    var DES = C_algo.DES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\n\t\t            // Select 56 bits according to PC1\n\t\t            var keyBits = [];\n\t\t            for (var i = 0; i < 56; i++) {\n\t\t                var keyBitPos = PC1[i] - 1;\n\t\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t\t            }\n\t\n\t\t            // Assemble 16 subkeys\n\t\t            var subKeys = this._subKeys = [];\n\t\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t\t                // Create subkey\n\t\t                var subKey = subKeys[nSubKey] = [];\n\t\n\t\t                // Shortcut\n\t\t                var bitShift = BIT_SHIFTS[nSubKey];\n\t\n\t\t                // Select 48 bits according to PC2\n\t\t                for (var i = 0; i < 24; i++) {\n\t\t                    // Select from the left 28 key bits\n\t\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\t\n\t\t                    // Select from the right 28 key bits\n\t\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t\t                }\n\t\n\t\t                // Since each subkey is applied to an expanded 32-bit input,\n\t\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t\t                // which allows the key to be used without expansion\n\t\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t\t                for (var i = 1; i < 7; i++) {\n\t\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t\t                }\n\t\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t\t            }\n\t\n\t\t            // Compute inverse subkeys\n\t\t            var invSubKeys = this._invSubKeys = [];\n\t\t            for (var i = 0; i < 16; i++) {\n\t\t                invSubKeys[i] = subKeys[15 - i];\n\t\t            }\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._subKeys);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t\t        },\n\t\n\t\t        _doCryptBlock: function (M, offset, subKeys) {\n\t\t            // Get input\n\t\t            this._lBlock = M[offset];\n\t\t            this._rBlock = M[offset + 1];\n\t\n\t\t            // Initial permutation\n\t\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t\t            exchangeRL.call(this, 2,  0x33333333);\n\t\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t\t            exchangeLR.call(this, 1,  0x55555555);\n\t\n\t\t            // Rounds\n\t\t            for (var round = 0; round < 16; round++) {\n\t\t                // Shortcuts\n\t\t                var subKey = subKeys[round];\n\t\t                var lBlock = this._lBlock;\n\t\t                var rBlock = this._rBlock;\n\t\n\t\t                // Feistel function\n\t\t                var f = 0;\n\t\t                for (var i = 0; i < 8; i++) {\n\t\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t\t                }\n\t\t                this._lBlock = rBlock;\n\t\t                this._rBlock = lBlock ^ f;\n\t\t            }\n\t\n\t\t            // Undo swap from last round\n\t\t            var t = this._lBlock;\n\t\t            this._lBlock = this._rBlock;\n\t\t            this._rBlock = t;\n\t\n\t\t            // Final permutation\n\t\t            exchangeLR.call(this, 1,  0x55555555);\n\t\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t\t            exchangeRL.call(this, 2,  0x33333333);\n\t\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t\n\t\t            // Set output\n\t\t            M[offset] = this._lBlock;\n\t\t            M[offset + 1] = this._rBlock;\n\t\t        },\n\t\n\t\t        keySize: 64/32,\n\t\n\t\t        ivSize: 64/32,\n\t\n\t\t        blockSize: 64/32\n\t\t    });\n\t\n\t\t    // Swap bits across the left and right words\n\t\t    function exchangeLR(offset, mask) {\n\t\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t\t        this._rBlock ^= t;\n\t\t        this._lBlock ^= t << offset;\n\t\t    }\n\t\n\t\t    function exchangeRL(offset, mask) {\n\t\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t\t        this._lBlock ^= t;\n\t\t        this._rBlock ^= t << offset;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.DES = BlockCipher._createHelper(DES);\n\t\n\t\t    /**\n\t\t     * Triple-DES block cipher algorithm.\n\t\t     */\n\t\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\n\t\t            // Create DES instances\n\t\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t\t        },\n\t\n\t\t        encryptBlock: function (M, offset) {\n\t\t            this._des1.encryptBlock(M, offset);\n\t\t            this._des2.decryptBlock(M, offset);\n\t\t            this._des3.encryptBlock(M, offset);\n\t\t        },\n\t\n\t\t        decryptBlock: function (M, offset) {\n\t\t            this._des3.decryptBlock(M, offset);\n\t\t            this._des2.encryptBlock(M, offset);\n\t\t            this._des1.decryptBlock(M, offset);\n\t\t        },\n\t\n\t\t        keySize: 192/32,\n\t\n\t\t        ivSize: 64/32,\n\t\n\t\t        blockSize: 64/32\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.TripleDES;\n\t\n\t}));\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(16), __webpack_require__(17), __webpack_require__(27), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    /**\n\t\t     * RC4 stream cipher algorithm.\n\t\t     */\n\t\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var key = this._key;\n\t\t            var keyWords = key.words;\n\t\t            var keySigBytes = key.sigBytes;\n\t\n\t\t            // Init sbox\n\t\t            var S = this._S = [];\n\t\t            for (var i = 0; i < 256; i++) {\n\t\t                S[i] = i;\n\t\t            }\n\t\n\t\t            // Key setup\n\t\t            for (var i = 0, j = 0; i < 256; i++) {\n\t\t                var keyByteIndex = i % keySigBytes;\n\t\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\t\n\t\t                j = (j + S[i] + keyByte) % 256;\n\t\n\t\t                // Swap\n\t\t                var t = S[i];\n\t\t                S[i] = S[j];\n\t\t                S[j] = t;\n\t\t            }\n\t\n\t\t            // Counters\n\t\t            this._i = this._j = 0;\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            M[offset] ^= generateKeystreamWord.call(this);\n\t\t        },\n\t\n\t\t        keySize: 256/32,\n\t\n\t\t        ivSize: 0\n\t\t    });\n\t\n\t\t    function generateKeystreamWord() {\n\t\t        // Shortcuts\n\t\t        var S = this._S;\n\t\t        var i = this._i;\n\t\t        var j = this._j;\n\t\n\t\t        // Generate keystream word\n\t\t        var keystreamWord = 0;\n\t\t        for (var n = 0; n < 4; n++) {\n\t\t            i = (i + 1) % 256;\n\t\t            j = (j + S[i]) % 256;\n\t\n\t\t            // Swap\n\t\t            var t = S[i];\n\t\t            S[i] = S[j];\n\t\t            S[j] = t;\n\t\n\t\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t\t        }\n\t\n\t\t        // Update counters\n\t\t        this._i = i;\n\t\t        this._j = j;\n\t\n\t\t        return keystreamWord;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RC4 = StreamCipher._createHelper(RC4);\n\t\n\t\t    /**\n\t\t     * Modified RC4 stream cipher algorithm.\n\t\t     */\n\t\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t\t        /**\n\t\t         * Configuration options.\n\t\t         *\n\t\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t\t         */\n\t\t        cfg: RC4.cfg.extend({\n\t\t            drop: 192\n\t\t        }),\n\t\n\t\t        _doReset: function () {\n\t\t            RC4._doReset.call(this);\n\t\n\t\t            // Drop\n\t\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t\t                generateKeystreamWord.call(this);\n\t\t            }\n\t\t        }\n\t\t    });\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.RC4;\n\t\n\t}));\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(16), __webpack_require__(17), __webpack_require__(27), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable objects\n\t\t    var S  = [];\n\t\t    var C_ = [];\n\t\t    var G  = [];\n\t\n\t\t    /**\n\t\t     * Rabbit stream cipher algorithm\n\t\t     */\n\t\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var K = this._key.words;\n\t\t            var iv = this.cfg.iv;\n\t\n\t\t            // Swap endian\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t\t            }\n\t\n\t\t            // Generate initial state values\n\t\t            var X = this._X = [\n\t\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t\t            ];\n\t\n\t\t            // Generate initial counter values\n\t\t            var C = this._C = [\n\t\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t\t            ];\n\t\n\t\t            // Carry bit\n\t\t            this._b = 0;\n\t\n\t\t            // Iterate the system four times\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                nextState.call(this);\n\t\t            }\n\t\n\t\t            // Modify the counters\n\t\t            for (var i = 0; i < 8; i++) {\n\t\t                C[i] ^= X[(i + 4) & 7];\n\t\t            }\n\t\n\t\t            // IV setup\n\t\t            if (iv) {\n\t\t                // Shortcuts\n\t\t                var IV = iv.words;\n\t\t                var IV_0 = IV[0];\n\t\t                var IV_1 = IV[1];\n\t\n\t\t                // Generate four subvectors\n\t\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\t\n\t\t                // Modify counter values\n\t\t                C[0] ^= i0;\n\t\t                C[1] ^= i1;\n\t\t                C[2] ^= i2;\n\t\t                C[3] ^= i3;\n\t\t                C[4] ^= i0;\n\t\t                C[5] ^= i1;\n\t\t                C[6] ^= i2;\n\t\t                C[7] ^= i3;\n\t\n\t\t                // Iterate the system four times\n\t\t                for (var i = 0; i < 4; i++) {\n\t\t                    nextState.call(this);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var X = this._X;\n\t\n\t\t            // Iterate the system\n\t\t            nextState.call(this);\n\t\n\t\t            // Generate four keystream words\n\t\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\t\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Swap endian\n\t\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\t\n\t\t                // Encrypt\n\t\t                M[offset + i] ^= S[i];\n\t\t            }\n\t\t        },\n\t\n\t\t        blockSize: 128/32,\n\t\n\t\t        ivSize: 64/32\n\t\t    });\n\t\n\t\t    function nextState() {\n\t\t        // Shortcuts\n\t\t        var X = this._X;\n\t\t        var C = this._C;\n\t\n\t\t        // Save old counter values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            C_[i] = C[i];\n\t\t        }\n\t\n\t\t        // Calculate new counter values\n\t\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\t\n\t\t        // Calculate the g-values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            var gx = X[i] + C[i];\n\t\n\t\t            // Construct high and low argument for squaring\n\t\t            var ga = gx & 0xffff;\n\t\t            var gb = gx >>> 16;\n\t\n\t\t            // Calculate high and low result of squaring\n\t\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\t\n\t\t            // High XOR low\n\t\t            G[i] = gh ^ gl;\n\t\t        }\n\t\n\t\t        // Calculate new state values\n\t\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.Rabbit;\n\t\n\t}));\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(16), __webpack_require__(17), __webpack_require__(27), __webpack_require__(28));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\t(function () {\n\t\t    // Shortcuts\n\t\t    var C = CryptoJS;\n\t\t    var C_lib = C.lib;\n\t\t    var StreamCipher = C_lib.StreamCipher;\n\t\t    var C_algo = C.algo;\n\t\n\t\t    // Reusable objects\n\t\t    var S  = [];\n\t\t    var C_ = [];\n\t\t    var G  = [];\n\t\n\t\t    /**\n\t\t     * Rabbit stream cipher algorithm.\n\t\t     *\n\t\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t\t     * This error doesn't affect the cipher's security,\n\t\t     * but it does affect its compatibility with other implementations.\n\t\t     */\n\t\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t\t        _doReset: function () {\n\t\t            // Shortcuts\n\t\t            var K = this._key.words;\n\t\t            var iv = this.cfg.iv;\n\t\n\t\t            // Generate initial state values\n\t\t            var X = this._X = [\n\t\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t\t            ];\n\t\n\t\t            // Generate initial counter values\n\t\t            var C = this._C = [\n\t\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t\t            ];\n\t\n\t\t            // Carry bit\n\t\t            this._b = 0;\n\t\n\t\t            // Iterate the system four times\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                nextState.call(this);\n\t\t            }\n\t\n\t\t            // Modify the counters\n\t\t            for (var i = 0; i < 8; i++) {\n\t\t                C[i] ^= X[(i + 4) & 7];\n\t\t            }\n\t\n\t\t            // IV setup\n\t\t            if (iv) {\n\t\t                // Shortcuts\n\t\t                var IV = iv.words;\n\t\t                var IV_0 = IV[0];\n\t\t                var IV_1 = IV[1];\n\t\n\t\t                // Generate four subvectors\n\t\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\t\n\t\t                // Modify counter values\n\t\t                C[0] ^= i0;\n\t\t                C[1] ^= i1;\n\t\t                C[2] ^= i2;\n\t\t                C[3] ^= i3;\n\t\t                C[4] ^= i0;\n\t\t                C[5] ^= i1;\n\t\t                C[6] ^= i2;\n\t\t                C[7] ^= i3;\n\t\n\t\t                // Iterate the system four times\n\t\t                for (var i = 0; i < 4; i++) {\n\t\t                    nextState.call(this);\n\t\t                }\n\t\t            }\n\t\t        },\n\t\n\t\t        _doProcessBlock: function (M, offset) {\n\t\t            // Shortcut\n\t\t            var X = this._X;\n\t\n\t\t            // Iterate the system\n\t\t            nextState.call(this);\n\t\n\t\t            // Generate four keystream words\n\t\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\t\n\t\t            for (var i = 0; i < 4; i++) {\n\t\t                // Swap endian\n\t\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\t\n\t\t                // Encrypt\n\t\t                M[offset + i] ^= S[i];\n\t\t            }\n\t\t        },\n\t\n\t\t        blockSize: 128/32,\n\t\n\t\t        ivSize: 64/32\n\t\t    });\n\t\n\t\t    function nextState() {\n\t\t        // Shortcuts\n\t\t        var X = this._X;\n\t\t        var C = this._C;\n\t\n\t\t        // Save old counter values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            C_[i] = C[i];\n\t\t        }\n\t\n\t\t        // Calculate new counter values\n\t\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\t\n\t\t        // Calculate the g-values\n\t\t        for (var i = 0; i < 8; i++) {\n\t\t            var gx = X[i] + C[i];\n\t\n\t\t            // Construct high and low argument for squaring\n\t\t            var ga = gx & 0xffff;\n\t\t            var gb = gx >>> 16;\n\t\n\t\t            // Calculate high and low result of squaring\n\t\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\t\n\t\t            // High XOR low\n\t\t            G[i] = gh ^ gl;\n\t\t        }\n\t\n\t\t        // Calculate new state values\n\t\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t\t    }\n\t\n\t\t    /**\n\t\t     * Shortcut functions to the cipher's object interface.\n\t\t     *\n\t\t     * @example\n\t\t     *\n\t\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t\t     */\n\t\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t\t}());\n\t\n\t\n\t\treturn CryptoJS.RabbitLegacy;\n\t\n\t}));\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function (root, factory, undef) {\n\t\tif (true) {\n\t\t\t// CommonJS\n\t\t\tmodule.exports = exports = factory(__webpack_require__(12), __webpack_require__(13), __webpack_require__(21), __webpack_require__(25));\n\t\t}\n\t\telse if (typeof define === \"function\" && define.amd) {\n\t\t\t// AMD\n\t\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\", \"./hmac\"], factory);\n\t\t}\n\t\telse {\n\t\t\t// Global (browser)\n\t\t\tfactory(root.CryptoJS);\n\t\t}\n\t}(this, function (CryptoJS) {\n\t\n\t\treturn CryptoJS.HmacSHA512;\n\t\n\t}));\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.LOST_CONNEXION_MESSAGE = undefined;\n\texports.createEmptyRecognizerContext = createEmptyRecognizerContext;\n\texports.resetRecognitionPositions = resetRecognitionPositions;\n\texports.updateSentRecognitionPositions = updateSentRecognitionPositions;\n\texports.shouldAttemptImmediateReconnect = shouldAttemptImmediateReconnect;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Recognizer context\n\t * @typedef {Object} RecognizerContext\n\t * @property {Array<RecognitionContext>} recognitionContexts\n\t * @property {Promise} initPromise\n\t * @property {RecognitionPositions} lastRecognitionPositions  Last recognition sent/received stroke indexes.\n\t * @property {String} url\n\t * @property {String} suffixUrl\n\t * @property {WebSocket} websocket\n\t * @property {Options} options\n\t * @property {function} callback\n\t * @property {Number} currentReconnectionCount\n\t */\n\t\n\t/**\n\t * Create a new recognizer context\n\t * @return {RecognizerContext} An object that contains all recognizer context\n\t */\n\tfunction createEmptyRecognizerContext() {\n\t  return {\n\t    // websocket\n\t    recognitionContexts: [],\n\t    initPromise: undefined,\n\t    lastRecognitionPositions: {\n\t      lastSentPosition: -1,\n\t      lastReceivedPosition: -1\n\t    },\n\t    url: undefined,\n\t    suffixUrl: undefined,\n\t    websocket: undefined,\n\t    options: undefined,\n\t    callback: undefined,\n\t    currentReconnectionCount: undefined\n\t  };\n\t}\n\t\n\t/**\n\t * Reset the recognition context positions\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @param {Model} model Current model\n\t * @return {RecognizerContext}\n\t */\n\tfunction resetRecognitionPositions(recognizerContext, model) {\n\t  var recognizerContextReference = recognizerContext;\n\t  recognizerContextReference.lastRecognitionPositions.lastSentPosition = -1;\n\t  recognizerContextReference.lastRecognitionPositions.lastReceivedPosition = -1;\n\t  var modelReference = model;\n\t  modelReference.lastRecognitionPositions.lastSentPosition = -1;\n\t  modelReference.lastRecognitionPositions.lastReceivedPosition = -1;\n\t  _LoggerConfig.recognizerLogger.debug('Reset recognition positions');\n\t  return recognizerContextReference;\n\t}\n\t\n\t/**\n\t * Update the recognition context sent position\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @param {Model} model Current model\n\t * @return {RecognizerContext}\n\t */\n\tfunction updateSentRecognitionPositions(recognizerContext, model) {\n\t  var modelRef = model;\n\t  modelRef.lastRecognitionPositions.lastSentPosition = modelRef.rawStrokes.length - 1;\n\t  var recognizerContextRef = recognizerContext;\n\t  recognizerContextRef.lastRecognitionPositions.lastSentPosition = modelRef.lastRecognitionPositions.lastSentPosition;\n\t  return recognizerContextRef;\n\t}\n\t\n\t/**\n\t * Test if it should attempt immediate reconnect\n\t * @param {RecognizerContext} recognizerContext\n\t * @return {Boolean} True if should attempt reconnect, false otherwise\n\t */\n\tfunction shouldAttemptImmediateReconnect(recognizerContext) {\n\t  var recognizerContextRef = recognizerContext;\n\t  return recognizerContextRef.websocket.autoReconnect === true && recognizerContextRef.currentReconnectionCount++ <= recognizerContextRef.websocket.maxRetryCount;\n\t}\n\t\n\t/**\n\t * Lost connection message\n\t * @type {{type: string}}\n\t */\n\tvar LOST_CONNEXION_MESSAGE = exports.LOST_CONNEXION_MESSAGE = { type: 'LOST_CONNECTION' };\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.commonRestV3Configuration = undefined;\n\texports.updateModelReceivedPosition = updateModelReceivedPosition;\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Common configuration\n\t * @type {{availableTriggers: Array<String>, preferredTrigger: String}}\n\t */\n\tvar commonRestV3Configuration = exports.commonRestV3Configuration = {\n\t  availableTriggers: [_MyScriptJSConstants2.default.RecognitionTrigger.QUIET_PERIOD, _MyScriptJSConstants2.default.RecognitionTrigger.DEMAND],\n\t  preferredTrigger: _MyScriptJSConstants2.default.RecognitionTrigger.QUIET_PERIOD\n\t};\n\t\n\t/**\n\t * Update model lastReceivedPosition regarding to lastSentPosition\n\t * @param {Model} model\n\t * @return {Model}\n\t */\n\tfunction updateModelReceivedPosition(model) {\n\t  var modelReference = model;\n\t  modelReference.lastRecognitionPositions.lastReceivedPosition = modelReference.lastRecognitionPositions.lastSentPosition;\n\t  return modelReference;\n\t}\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createModel = createModel;\n\texports.needRedraw = needRedraw;\n\texports.addStroke = addStroke;\n\texports.extractPendingStrokes = extractPendingStrokes;\n\texports.initPendingStroke = initPendingStroke;\n\texports.appendToPendingStroke = appendToPendingStroke;\n\texports.endPendingStroke = endPendingStroke;\n\texports.getBorderCoordinates = getBorderCoordinates;\n\texports.extractStrokesFromInkRange = extractStrokesFromInkRange;\n\texports.cloneModel = cloneModel;\n\texports.mergeModels = mergeModels;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _Symbol = __webpack_require__(49);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Recognition positions\n\t * @typedef {Object} RecognitionPositions\n\t * @property {Number} lastSentPosition Index of the last sent stroke.\n\t * @property {Number} lastReceivedPosition Index of the last received stroke.\n\t */\n\t\n\t/**\n\t * InkPaper model\n\t * @typedef {Object} Model\n\t * @property {String} state Current state of the model. Mainly here for debugging purpose.\n\t * @property {Stroke} currentStroke Stroke in building process.\n\t * @property {String} currentRecognitionId Current recognition id.\n\t * @property {Array<Stroke>} rawStrokes List of captured strokes.\n\t * @property {RecognitionPositions} lastRecognitionPositions Last recognition sent/received stroke indexes.\n\t * @property {Array<Object>} defaultSymbols Default symbols, relative to the current recognition type.\n\t * @property {Array<Object>} recognizedSymbols Symbols to render (e.g. stroke, shape primitives, string, characters...).\n\t * @property {Object} rawResult The recognition output as return by the recognition service.\n\t * @property {Number} creationTime Date of creation timestamp.\n\t * @property {Boolean} canUndo True if undo is available, false otherwise.\n\t * @property {Boolean} canRedo True if redo is available, false otherwise.\n\t * @property {Boolean} canClear True if clear is available, false otherwise.\n\t */\n\t\n\t/**\n\t * Bounding box\n\t * @typedef {Object} Bounds\n\t * @property {Number} minX Minimal x coordinate\n\t * @property {Number} maxX Maximal x coordinate\n\t * @property {Number} minY Minimal y coordinate\n\t * @property {Number} maxY Maximal y coordinate\n\t */\n\t\n\t/**\n\t * Create a new model\n\t * @param {Options} [options] Parameters to use to populate default recognition symbols\n\t * @return {Model} New model\n\t */\n\tfunction createModel(options) {\n\t  // see @typedef documentation on top\n\t  return {\n\t    state: _MyScriptJSConstants2.default.ModelState.INITIALIZING,\n\t    currentStroke: undefined,\n\t    currentRecognitionId: undefined,\n\t    rawStrokes: [],\n\t    lastRecognitionPositions: {\n\t      lastSentPosition: -1,\n\t      lastReceivedPosition: -1\n\t    },\n\t    defaultSymbols: options ? (0, _Symbol.getDefaultSymbols)(options) : [],\n\t    recognizedSymbols: undefined,\n\t    rawResult: undefined,\n\t    creationTime: new Date().getTime(),\n\t    canUndo: false,\n\t    canRedo: false,\n\t    canClear: true\n\t  };\n\t}\n\t\n\t/**\n\t * Check if the model needs to be redrawn.\n\t * @param {Model} model Current model\n\t * @return {Boolean} True if the model needs to be redrawn, false otherwise\n\t */\n\tfunction needRedraw(model) {\n\t  return model.recognizedSymbols ? model.rawStrokes.length !== model.recognizedSymbols.filter(function (symbol) {\n\t    return symbol.type === 'stroke';\n\t  }).length : false;\n\t}\n\t\n\t/**\n\t * Mutate the model given in parameter by adding the new strokeToAdd.\n\t * @param {Model} model Current model\n\t * @param {Stroke} stroke Stroke to be added to pending ones\n\t * @return {Model} Updated model\n\t */\n\tfunction addStroke(model, stroke) {\n\t  // We use a reference to the model. The purpose here is to update the pending stroke only.\n\t  var modelReference = model;\n\t  modelReference.rawStrokes.push(stroke);\n\t  return modelReference;\n\t}\n\t\n\t/**\n\t * Get the strokes that needs to be recognized\n\t * @param {Model} model Current model\n\t * @param {Number} [position=lastReceived] Index from where to extract strokes\n\t * @return {Array<Stroke>} Pending strokes\n\t */\n\tfunction extractPendingStrokes(model) {\n\t  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : model.lastRecognitionPositions.lastReceivedPosition + 1;\n\t\n\t  return model.rawStrokes.slice(position);\n\t}\n\t\n\t/**\n\t * Mutate the model by adding a point and close the current stroke.\n\t * @param {Model} model Current model\n\t * @param {{x: Number, y: Number, t: Number}} point Captured point to create current stroke\n\t * @param {Object} properties Properties to be applied to the current stroke\n\t * @return {Model} Updated model\n\t */\n\tfunction initPendingStroke(model, point, properties) {\n\t  var modelReference = model;\n\t  _LoggerConfig.modelLogger.debug('initPendingStroke', point);\n\t  // Setting the current stroke to an empty one\n\t  modelReference.currentStroke = StrokeComponent.createStrokeComponent(properties);\n\t  modelReference.currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n\t  return modelReference;\n\t}\n\t\n\t/**\n\t * Mutate the model by adding a point to the current pending stroke.\n\t * @param {Model} model Current model\n\t * @param {{x: Number, y: Number, t: Number}} point Captured point to be append to the current stroke\n\t * @return {Model} Updated model\n\t */\n\tfunction appendToPendingStroke(model, point) {\n\t  var modelReference = model;\n\t  _LoggerConfig.modelLogger.debug('appendToPendingStroke', point);\n\t  modelReference.currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n\t  return modelReference;\n\t}\n\t\n\t/**\n\t * Mutate the model by adding the new point on a initPendingStroke.\n\t * @param {Model} model Current model\n\t * @param {{x: Number, y: Number, t: Number}} point Captured point to be append to the current stroke\n\t * @return {Model} Updated model\n\t */\n\tfunction endPendingStroke(model, point) {\n\t  var modelReference = model;\n\t  _LoggerConfig.modelLogger.debug('endPendingStroke', point);\n\t  var currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n\t  // Mutating pending strokes\n\t  addStroke(modelReference, currentStroke);\n\t  // Resetting the current stroke to an undefined one\n\t  delete modelReference.currentStroke;\n\t  return modelReference;\n\t}\n\t/**\n\t * Get the bounds of the current model.\n\t * @param {Model} model Current model\n\t * @return {Bounds} Bounding box enclosing the current drawn model\n\t */\n\tfunction getBorderCoordinates(model) {\n\t  var modelBounds = { minX: Number.MAX_VALUE, maxX: Number.MIN_VALUE, minY: Number.MAX_VALUE, maxY: Number.MIN_VALUE };\n\t\n\t  // Default symbols\n\t  if (model.defaultSymbols && model.defaultSymbols.length > 0) {\n\t    modelBounds = (0, _Symbol.getSymbolsBounds)(model.defaultSymbols, modelBounds);\n\t  }\n\t  // Recognized symbols\n\t  if (model.recognizedSymbols && model.recognizedSymbols.length > 0) {\n\t    modelBounds = (0, _Symbol.getSymbolsBounds)(model.recognizedSymbols, modelBounds);\n\t    // Pending strokes\n\t    modelBounds = (0, _Symbol.getSymbolsBounds)(extractPendingStrokes(model), modelBounds);\n\t  } else {\n\t    modelBounds = (0, _Symbol.getSymbolsBounds)(model.rawStrokes, modelBounds);\n\t  }\n\t  return modelBounds;\n\t}\n\t\n\t/**\n\t * Extract strokes from an ink range\n\t * @param {Model} model Current model\n\t * @param {Number} firstStroke First stroke index to extract\n\t * @param {Number} lastStroke Last stroke index to extract\n\t * @param {Number} firstPoint First point index to extract\n\t * @param {Number} lastPoint Last point index to extract\n\t * @return {Array<Stroke>} The extracted strokes\n\t */\n\tfunction extractStrokesFromInkRange(model, firstStroke, lastStroke, firstPoint, lastPoint) {\n\t  return model.rawStrokes.slice(firstStroke, lastStroke + 1).map(function (stroke, index, slicedStrokes) {\n\t    if (slicedStrokes.length < 2) {\n\t      return StrokeComponent.slice(stroke, firstPoint, lastPoint + 1);\n\t    }\n\t    if (index === 0) {\n\t      return StrokeComponent.slice(stroke, firstPoint);\n\t    }\n\t    if (index === slicedStrokes.length - 1) {\n\t      return StrokeComponent.slice(stroke, 0, lastPoint + 1);\n\t    }\n\t    return stroke;\n\t  });\n\t}\n\t\n\t/**\n\t * Clone model\n\t * @param {Model} model Current model\n\t * @return {Model} Clone of the current model\n\t */\n\tfunction cloneModel(model) {\n\t  var clonedModel = Object.assign({}, model);\n\t  // We clone the properties that need to be. Take care of arrays.\n\t  clonedModel.defaultSymbols = [].concat(_toConsumableArray(model.defaultSymbols));\n\t  clonedModel.currentStroke = model.currentStroke ? Object.assign({}, model.currentStroke) : undefined;\n\t  clonedModel.rawStrokes = [].concat(_toConsumableArray(model.rawStrokes));\n\t  clonedModel.lastRecognitionPositions = Object.assign({}, model.lastRecognitionPositions);\n\t  clonedModel.rawResult = model.rawResult ? Object.assign({}, model.rawResult) : undefined;\n\t  clonedModel.recognizedSymbols = model.recognizedSymbols ? [].concat(_toConsumableArray(model.recognizedSymbols)) : undefined;\n\t  return clonedModel;\n\t}\n\t\n\t/**\n\t * Merge models\n\t * @param {Array<Model>} models Models to merge (ordered)\n\t * @return {Model} Updated model\n\t */\n\tfunction mergeModels() {\n\t  for (var _len = arguments.length, models = Array(_len), _key = 0; _key < _len; _key++) {\n\t    models[_key] = arguments[_key];\n\t  }\n\t\n\t  return models.reduce(function (a, b) {\n\t    var modelRef = a;\n\t    modelRef.state = b.state;\n\t    modelRef.recognizedSymbols = b.recognizedSymbols;\n\t    modelRef.lastRecognitionPositions.lastReceivedPosition = b.lastRecognitionPositions.lastReceivedPosition;\n\t    modelRef.rawResult = b.rawResult;\n\t    modelRef.canUndo = b.canUndo;\n\t    modelRef.canRedo = b.canRedo;\n\t    modelRef.canClear = b.canClear;\n\t    return modelRef;\n\t  });\n\t}\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getSymbolsBounds = getSymbolsBounds;\n\texports.getDefaultSymbols = getDefaultSymbols;\n\t\n\tvar _MusicSymbolCanvasRenderer = __webpack_require__(50);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction mergeBounds(boundsA, boundsB) {\n\t  return {\n\t    minX: Math.min(boundsA.minX, boundsB.minX),\n\t    maxX: Math.max(boundsA.maxX, boundsB.maxX),\n\t    minY: Math.min(boundsA.minY, boundsB.minY),\n\t    maxY: Math.max(boundsA.maxY, boundsB.maxY)\n\t  };\n\t}\n\t\n\tfunction getLineBounds(line) {\n\t  return {\n\t    minX: Math.min(line.firstPoint.x, line.lastPoint.x),\n\t    maxX: Math.max(line.firstPoint.x, line.lastPoint.x),\n\t    minY: Math.min(line.firstPoint.y, line.lastPoint.y),\n\t    maxY: Math.max(line.firstPoint.y, line.lastPoint.y)\n\t  };\n\t}\n\t\n\tfunction getEllipseBounds(ellipse) {\n\t  var angleStep = 0.02; // angle delta between interpolated points on the arc, in radian\n\t\n\t  var z1 = Math.cos(ellipse.orientation);\n\t  var z3 = Math.sin(ellipse.orientation);\n\t  var z2 = z1;\n\t  var z4 = z3;\n\t  z1 *= ellipse.maxRadius;\n\t  z2 *= ellipse.minRadius;\n\t  z3 *= ellipse.maxRadius;\n\t  z4 *= ellipse.minRadius;\n\t\n\t  var n = Math.abs(ellipse.sweepAngle) / angleStep;\n\t\n\t  var x = [];\n\t  var y = [];\n\t\n\t  for (var i = 0; i <= n; i++) {\n\t    var angle = ellipse.startAngle + i / n * ellipse.sweepAngle;\n\t    var alpha = Math.atan2(Math.sin(angle) / ellipse.minRadius, Math.cos(angle) / ellipse.maxRadius);\n\t\n\t    var cosAlpha = Math.cos(alpha);\n\t    var sinAlpha = Math.sin(alpha);\n\t\n\t    x.push(ellipse.center.x + (z1 * cosAlpha - z4 * sinAlpha));\n\t    y.push(ellipse.center.y + (z2 * sinAlpha + z3 * cosAlpha));\n\t  }\n\t\n\t  return {\n\t    minX: Math.min.apply(Math, x),\n\t    maxX: Math.max.apply(Math, x),\n\t    minY: Math.min.apply(Math, y),\n\t    maxY: Math.max.apply(Math, y)\n\t  };\n\t}\n\t\n\tfunction getTextLineBounds(textLine) {\n\t  return {\n\t    minX: textLine.data.topLeftPoint.x,\n\t    maxX: textLine.data.topLeftPoint.x + textLine.data.width,\n\t    minY: textLine.data.topLeftPoint.y,\n\t    maxY: textLine.data.topLeftPoint.y + textLine.data.height\n\t  };\n\t}\n\t\n\tfunction getClefBounds(clef) {\n\t  return {\n\t    minX: clef.boundingBox.x,\n\t    maxX: clef.boundingBox.x + clef.boundingBox.width,\n\t    minY: clef.boundingBox.y,\n\t    maxY: clef.boundingBox.y + clef.boundingBox.height\n\t  };\n\t}\n\t\n\tfunction getStrokeBounds(stroke) {\n\t  return {\n\t    minX: Math.min.apply(Math, _toConsumableArray(stroke.x)),\n\t    maxX: Math.max.apply(Math, _toConsumableArray(stroke.x)),\n\t    minY: Math.min.apply(Math, _toConsumableArray(stroke.y)),\n\t    maxY: Math.max.apply(Math, _toConsumableArray(stroke.y))\n\t  };\n\t}\n\t\n\t/**\n\t * Get the box enclosing the given symbols\n\t * @param {Array} symbols Symbols to extract bounds from\n\t * @param {Bounds} [bounds] Starting bounds for recursion\n\t * @return {Bounds} Bounding box enclosing symbols\n\t */\n\tfunction getSymbolsBounds(symbols) {\n\t  var bounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { minX: Number.MAX_VALUE, maxX: Number.MIN_VALUE, minY: Number.MAX_VALUE, maxY: Number.MIN_VALUE };\n\t\n\t  var boundsRef = bounds;\n\t  boundsRef = symbols.filter(function (symbol) {\n\t    return symbol.type === 'stroke';\n\t  }).map(getStrokeBounds).reduce(mergeBounds, boundsRef);\n\t  boundsRef = symbols.filter(function (symbol) {\n\t    return symbol.type === 'clef';\n\t  }).map(getClefBounds).reduce(mergeBounds, boundsRef);\n\t  boundsRef = symbols.filter(function (symbol) {\n\t    return symbol.type === 'line';\n\t  }).map(getLineBounds).reduce(mergeBounds, boundsRef);\n\t  boundsRef = symbols.filter(function (symbol) {\n\t    return symbol.type === 'ellipse';\n\t  }).map(getEllipseBounds).reduce(mergeBounds, boundsRef);\n\t  boundsRef = symbols.filter(function (symbol) {\n\t    return symbol.type === 'textLine';\n\t  }).map(getTextLineBounds).reduce(mergeBounds, boundsRef);\n\t  return boundsRef;\n\t}\n\t\n\tfunction getDefaultMusicSymbols(options) {\n\t  var defaultStaff = Object.assign({}, { type: 'staff' }, options.recognitionParams.musicParameter.staff);\n\t  var defaultClef = {\n\t    type: 'clef',\n\t    value: Object.assign({}, options.recognitionParams.musicParameter.clef)\n\t  };\n\t  defaultClef.value.yAnchor = defaultStaff.top + defaultStaff.gap * (defaultStaff.count - defaultClef.value.line);\n\t  delete defaultClef.value.line;\n\t  defaultClef.boundingBox = _MusicSymbolCanvasRenderer.MusicClefs[defaultClef.value.symbol].getBoundingBox(defaultStaff.gap, 0, defaultClef.value.yAnchor);\n\t  return [defaultStaff, defaultClef];\n\t}\n\t\n\t/**\n\t * Get the default symbols for the current recognition type\n\t * @param {Options} options Current recognition parameters from which extract default symbols\n\t * @return {Array} Symbols matching configuration\n\t */\n\tfunction getDefaultSymbols(options) {\n\t  switch (options.recognitionParams.type) {\n\t    case _MyScriptJSConstants2.default.RecognitionType.MUSIC:\n\t      return getDefaultMusicSymbols(options);\n\t    default:\n\t      return [];\n\t  }\n\t}\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.MusicSymbols = exports.MusicClefs = undefined;\n\texports.preloadMusicSymbols = preloadMusicSymbols;\n\texports.drawMusicSymbol = drawMusicSymbol;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _ShapeSymbolCanvasRenderer = __webpack_require__(51);\n\t\n\t/**\n\t * @type {{F: {svg: String, getBoundingBox: function}, C: {svg: String, getBoundingBox: function}, G: {svg: String, getBoundingBox: function}}}\n\t */\n\tvar MusicClefs = exports.MusicClefs = { // constants was calculated from the svg image, so it should remains together\n\t  F: {\n\t    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"18\" height=\"20\"><g transform=\"translate(6.600000e-3,3.125356e-3)\"><path d=\"M17.3 3.1 C17.3 3.5 17.1 3.8 16.8 4.1 C16.5 4.4 15.9 4.5 15.5 4.3 C15 4.1 14.7 3.7 14.7 3.2 C14.6 2.8 14.8 2.5 15 2.2 C15.3 1.9 15.7 1.8 16 1.8 C16.4 1.8 16.8 2 17 2.3 C17.2 2.5 17.3 2.8 17.3 3.1 z\"/><path d=\"M17.3 8.9 C17.3 9.3 17.1 9.7 16.8 9.9 C16.5 10.3 15.9 10.3 15.5 10.2 C15 10 14.7 9.5 14.7 9.1 C14.6 8.7 14.8 8.3 15 8 C15.3 7.8 15.7 7.6 16 7.6 C16.5 7.7 17 8 17.2 8.4 C17.2 8.6 17.3 8.8 17.3 8.9 z\"/><path d=\"M13 7.2 C13 10 11.8 12.7 9.8 14.7 C7.3 17.2 4 18.8 0.7 19.8 C0.3 20.1 -0.4 19.8 0.3 19.4 C1.6 18.8 3 18.3 4.2 17.5 C7 15.8 9.3 13.1 9.8 9.9 C10.1 8 10.1 5.9 9.6 4 C9.2 2.6 8.2 1.1 6.7 0.9 C5.3 0.7 3.7 1.2 2.7 2.2 C2.5 2.4 2 3.2 2 4 C2.6 3.6 2.6 3.6 3.1 3.4 C4.2 2.9 5.7 3.6 6 4.9 C6.3 6 6.1 7.5 5 8.1 C3.8 8.7 2 8.5 1.4 7.2 C0.3 5.3 0.9 2.6 2.6 1.2 C4.4 -0.3 7.1 -0.3 9.2 0.4 C11.4 1.3 12.7 3.5 12.9 5.8 C13 6.2 13 6.7 13 7.2 z\"/></g></svg>',\n\t    getBoundingBox: function getBoundingBox(gap, xAnchor, yAnchor) {\n\t      return {\n\t        height: gap * 3,\n\t        width: gap * 3 * (18 / 20),\n\t        x: xAnchor,\n\t        y: yAnchor - gap\n\t      };\n\t    }\n\t  },\n\t  C: {\n\t    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"18\" height=\"25\"><g transform=\"matrix(1,0,0,1.030698,-309.364,-543.8647)\"><path d=\"M 325.9 546.8 C 325.8 548.7 324.7 550.7 322.8 551.5 C 321.1 552.1 319.1 552.2 317.6 551 C 316.6 550.2 316.2 548.4 317.3 547.5 C 318.3 546.5 320.4 547.4 320.3 548.9 C 320.7 549.9 318.5 550.5 319.7 551.3 C 321 551.6 322.3 550.5 322.6 549.3 C 323.1 547.5 323.1 545.6 322.7 543.8 C 322.4 542.9 321.9 541.5 320.7 541.9 C 319.2 542.2 318.3 543.8 317.9 545.1 C 317.6 543.2 316.4 541.5 315 540.2 C 315 544.1 315 548 315 551.9 L 314.1 551.9 C 314.1 543.9 314.1 535.7 314.1 527.7 L 315 527.7 C 315 531.5 315 535.5 315 539.4 C 316.4 538.1 317.6 536.4 317.8 534.5 C 318.3 535.9 319.3 537.5 321 537.8 C 322.2 537.8 322.5 536.3 322.8 535.4 C 323.1 533.7 323.1 531.8 322.6 530.1 C 322.2 529 320.9 528 319.6 528.3 C 318.6 529 320.6 529.6 320.3 530.6 C 320.5 532 318.8 533 317.6 532.3 C 316.3 531.6 316.4 529.7 317.4 528.8 C 318 528.1 319.3 527.7 320.3 527.7 C 321.2 527.7 321.8 527.7 322.6 528 C 324.6 528.7 325.7 530.7 325.9 532.7 C 326.2 534.9 324.9 537.3 322.8 538.2 C 321.5 538.7 319.9 538.3 318.8 537.3 C 318.7 538.3 318.2 539.2 317.7 539.9 C 318.1 540.6 318.6 541.8 318.8 542.1 C 320.1 540.9 322.5 540.8 323.8 542 C 325.2 543.1 326.1 545 325.9 546.8 z \"/></g><g transform=\"matrix(1,0,0,1.030928,-309.364,-543.9805)\"><path d=\"M 312.2 551.9 L 309.4 551.9 L 309.4 527.7 L 312.2 527.7 L 312.2 551.9 z \"/></g></svg>',\n\t    getBoundingBox: function getBoundingBox(gap, xAnchor, yAnchor) {\n\t      return {\n\t        height: gap * 3,\n\t        width: gap * 3 * (18 / 25),\n\t        x: xAnchor,\n\t        y: yAnchor - gap * (3 / 2)\n\t      };\n\t    }\n\t  },\n\t  G: {\n\t    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"15\" height=\"40\"><g><path d=\"m 12 3.4 c 0.3 3.1 -2 5.6 -4.1 7.6 -0.9 0.9 -0.2 0.1 -0.6 0.6 -0.1 -0.5 -0.3 -1.7 -0.3 -2.1 0.1 -2.6 2.3 -6.5 4.2 -7.9 0.3 0.6 0.6 0.6 0.8 1.8 z m 0.7 15.9 c -1.2 -0.9 -2.8 -1.1 -4.3 -0.9 -0.2 -1.2 -0.4 -2.5 -0.6 -3.7 2.4 -2.3 4.9 -4.9 5 -8.4 0.1 -2.2 -0.3 -4.6 -1.7 -6.4 C 9.5 0.1 8.3 2.1 7.4 3.3 c -1.5 2.6 -1.1 5.8 -0.6 8.6 -0.8 0.9 -1.9 1.7 -2.7 2.7 -2.4 2.3 -4.4 5.3 -4 8.7 0.2 3.3 2.6 6.3 5.9 7.1 1.2 0.3 2.6 0.3 3.8 0.1 0.2 2.2 1 4.5 0.1 6.7 -0.7 1.6 -2.8 2.9 -4.3 2.2 -0.6 -0.3 -0.1 -0.1 -0.5 -0.2 1.1 -0.3 2 -1 2.3 -1.5 0.8 -1.4 -0.4 -3.6 -2.2 -3.3 -2.3 0 -3.2 3.1 -1.7 4.6 1.3 1.5 3.8 1.3 5.4 0.3 1.8 -1.2 2 -3.5 1.8 -5.5 -0.1 -0.7 -0.4 -2.6 -0.4 -3.3 0.7 -0.2 0.2 -0.1 1.2 -0.4 2.7 -1 4.4 -4.2 3.6 -7 -0.3 -1.4 -1 -2.9 -2.3 -3.7 z m 0.6 5.7 c 0.2 2 -1.1 4.2 -3.1 4.9 -0.1 -0.8 -0.2 -1 -0.3 -1.4 -0.5 -2.4 -0.7 -4.9 -1.1 -7.3 1.6 -0.2 3.5 0.5 4 2.1 0.2 0.6 0.3 1.2 0.4 1.8 z m -5.1 5.1 c -2.5 0.1 -5 -1.6 -5.6 -4 -0.7 -2.1 -0.5 -4.5 0.8 -6.4 1.1 -1.7 2.6 -3 4 -4.5 0.2 1.1 0.4 2.2 0.5 3.3 -3 0.8 -5 4.6 -3.2 7.3 0.5 0.8 2 2.2 2.8 1.6 -1.1 -0.7 -2 -1.8 -1.8 -3.2 -0.1 -1.3 1.4 -2.9 2.7 -3.1 0.4 2.8 0.9 6 1.4 8.8 -0.5 0.1 -1 0.1 -1.5 0.1 z\"/></g></svg>',\n\t    getBoundingBox: function getBoundingBox(gap, xAnchor, yAnchor) {\n\t      return {\n\t        height: gap * (15 / 2),\n\t        width: gap * (15 / 2) * (15 / 40),\n\t        x: xAnchor,\n\t        y: yAnchor - gap * (9 / 2)\n\t      };\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * @type {{accidental: String, arpeggiate: String, bar: String, beam: String, clef: String, decoration: String, dots: String, head: String, ledgerLine: String, rest: String, staff: String, stem: String, tieOrSlur: String, timeSignature: String}}\n\t */\n\tvar MusicSymbols = exports.MusicSymbols = {\n\t  accidental: 'accidental',\n\t  arpeggiate: 'arpeggiate',\n\t  bar: 'bar',\n\t  beam: 'beam',\n\t  clef: 'clef',\n\t  decoration: 'decoration',\n\t  dots: 'dots',\n\t  head: 'head',\n\t  ledgerLine: 'ledgerLine',\n\t  rest: 'rest',\n\t  staff: 'staff',\n\t  stem: 'stem',\n\t  tieOrSlur: 'tieOrSlur',\n\t  timeSignature: 'timeSignature'\n\t};\n\t\n\tfunction createImage(clef, src) {\n\t  // eslint-disable-next-line no-undef\n\t  var browserDocument = document;\n\t  var img = browserDocument.createElement('img');\n\t  img.dataset.clef = clef;\n\t  img.src = src;\n\t  img.style.display = 'none';\n\t  return img;\n\t}\n\t\n\t/**\n\t * Attach resources to be used to render symbol\n\t * @param {Element} element DOM element to attach resources\n\t */\n\tfunction preloadMusicSymbols(element) {\n\t  Object.keys(MusicClefs).forEach(function (key) {\n\t    element.appendChild(createImage(key, 'data:image/svg+xml,' + MusicClefs[key].svg));\n\t  });\n\t}\n\t\n\tfunction drawStaff(context, staff) {\n\t  for (var i = 0; i < staff.count; i++) {\n\t    var p1 = { x: 0, y: staff.top + i * staff.gap };\n\t    var p2 = { x: context.canvas.width, y: staff.top + i * staff.gap };\n\t    (0, _ShapeSymbolCanvasRenderer.drawLine)(context, p1, p2);\n\t  }\n\t}\n\t\n\tfunction drawClef(context, clef) {\n\t  // eslint-disable-next-line no-undef\n\t  context.drawImage(document.querySelector('img[data-clef=' + clef.value.symbol + ']'), clef.boundingBox.x, clef.boundingBox.y, clef.boundingBox.width, clef.boundingBox.height);\n\t}\n\t\n\t/**\n\t * Draw a music symbol\n\t * @param {Object} context Current rendering context\n\t * @param {Object} symbol Symbol to draw\n\t */\n\tfunction drawMusicSymbol(context, symbol) {\n\t  _LoggerConfig.rendererLogger.debug('draw ' + symbol.type + ' symbol');\n\t  switch (symbol.type) {\n\t    case MusicSymbols.clef:\n\t      drawClef(context, symbol);\n\t      break;\n\t    case MusicSymbols.staff:\n\t      drawStaff(context, symbol);\n\t      break;\n\t    default:\n\t      _LoggerConfig.rendererLogger.error(symbol.type + ' not implemented');\n\t  }\n\t}\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ShapeSymbols = undefined;\n\texports.drawLine = drawLine;\n\texports.drawShapeSymbol = drawShapeSymbol;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * @type {{table: String, shape: String, recognizedShape: String, ellipse: String, line: String}}\n\t */\n\tvar ShapeSymbols = exports.ShapeSymbols = {\n\t  table: 'table',\n\t  shape: 'shape',\n\t  recognizedShape: 'recognizedShape',\n\t  ellipse: 'ellipse',\n\t  line: 'line'\n\t};\n\t\n\tfunction phi(angle) {\n\t  var returnedAngle = (angle + Math.PI) % (Math.PI * 2) - Math.PI;\n\t  if (returnedAngle < -Math.PI) {\n\t    returnedAngle += Math.PI * 2;\n\t  }\n\t  return returnedAngle;\n\t}\n\t\n\tfunction drawEllipseArc(context, centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle) {\n\t  var angleStep = 0.02; // angle delta between interpolated\n\t\n\t  var z1 = Math.cos(orientation);\n\t  var z3 = Math.sin(orientation);\n\t  var z2 = z1;\n\t  var z4 = z3;\n\t  z1 *= maxRadius;\n\t  z2 *= minRadius;\n\t  z3 *= maxRadius;\n\t  z4 *= minRadius;\n\t\n\t  var n = Math.floor(Math.abs(sweepAngle) / angleStep);\n\t\n\t  var boundariesPoints = [];\n\t\n\t  context.save();\n\t  try {\n\t    context.beginPath();\n\t\n\t    for (var i = 0; i <= n; i++) {\n\t      var angle = startAngle + i / n * sweepAngle; // points on the arc, in radian\n\t      var alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius);\n\t\n\t      var cosAlpha = Math.cos(alpha);\n\t      var sinAlpha = Math.sin(alpha);\n\t\n\t      // current point\n\t      var x = centerPoint.x + z1 * cosAlpha - z4 * sinAlpha;\n\t      var y = centerPoint.y + z2 * sinAlpha + z3 * cosAlpha;\n\t      if (i === 0) {\n\t        context.moveTo(x, y);\n\t      } else {\n\t        context.lineTo(x, y);\n\t      }\n\t\n\t      if (i === 0 || i === n) {\n\t        boundariesPoints.push({ x: x, y: y });\n\t      }\n\t    }\n\t\n\t    context.stroke();\n\t  } finally {\n\t    context.restore();\n\t  }\n\t\n\t  return boundariesPoints;\n\t}\n\t\n\tfunction drawArrowHead(context, headPoint, angle, length) {\n\t  var alpha = phi(angle + Math.PI * (7 / 8));\n\t  var beta = phi(angle - Math.PI * (7 / 8));\n\t\n\t  var contextReference = context;\n\t  contextReference.save();\n\t  try {\n\t    contextReference.fillStyle = contextReference.strokeStyle;\n\t\n\t    contextReference.moveTo(headPoint.x, headPoint.y);\n\t    contextReference.beginPath();\n\t    contextReference.lineTo(headPoint.x + length * Math.cos(alpha), headPoint.y + length * Math.sin(alpha));\n\t    contextReference.lineTo(headPoint.x + length * Math.cos(beta), headPoint.y + length * Math.sin(beta));\n\t    contextReference.lineTo(headPoint.x, headPoint.y);\n\t    contextReference.fill();\n\t  } finally {\n\t    contextReference.restore();\n\t  }\n\t}\n\t\n\tfunction drawShapeEllipse(context, shapeEllipse) {\n\t  var points = drawEllipseArc(context, shapeEllipse.center, shapeEllipse.maxRadius, shapeEllipse.minRadius, shapeEllipse.orientation, shapeEllipse.startAngle, shapeEllipse.sweepAngle);\n\t\n\t  if (shapeEllipse.beginDecoration && shapeEllipse.beginDecoration === 'ARROW_HEAD') {\n\t    drawArrowHead(context, points[0], shapeEllipse.beginTangentAngle, 12.0);\n\t  }\n\t  if (shapeEllipse.endDecoration && shapeEllipse.endDecoration === 'ARROW_HEAD') {\n\t    drawArrowHead(context, points[1], shapeEllipse.endTangentAngle, 12.0);\n\t  }\n\t}\n\t\n\t/**\n\t * Draw a line\n\t * @param {Object} context Current rendering context\n\t * @param {{x: Number, y: Number}} p1 Origin point\n\t * @param {{x: Number, y: Number}} p2 Destination point\n\t */\n\tfunction drawLine(context, p1, p2) {\n\t  context.save();\n\t  try {\n\t    context.beginPath();\n\t    context.moveTo(p1.x, p1.y);\n\t    context.lineTo(p2.x, p2.y);\n\t    context.stroke();\n\t  } finally {\n\t    context.restore();\n\t  }\n\t}\n\t\n\tfunction drawShapeLine(context, shapeLine) {\n\t  drawLine(context, shapeLine.firstPoint, shapeLine.lastPoint);\n\t  if (shapeLine.beginDecoration === 'ARROW_HEAD') {\n\t    drawArrowHead(context, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0);\n\t  }\n\t  if (shapeLine.endDecoration === 'ARROW_HEAD') {\n\t    drawArrowHead(context, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0);\n\t  }\n\t}\n\t\n\t/**\n\t * Draw a shape symbol\n\t * @param {Object} context Current rendering context\n\t * @param {Object} symbol Symbol to draw\n\t */\n\tfunction drawShapeSymbol(context, symbol) {\n\t  _LoggerConfig.rendererLogger.debug('draw ' + symbol.type + ' symbol');\n\t  var contextReference = context;\n\t  contextReference.save();\n\t  try {\n\t    contextReference.lineWidth = symbol.width;\n\t    contextReference.strokeStyle = symbol.color;\n\t\n\t    if (symbol.elementType) {\n\t      switch (symbol.elementType) {\n\t        case ShapeSymbols.shape:\n\t          drawShapeSymbol(contextReference, symbol.candidates[symbol.selectedCandidateIndex]);\n\t          break;\n\t        case ShapeSymbols.table:\n\t          symbol.lines.forEach(function (line) {\n\t            return drawShapeSymbol(contextReference, line);\n\t          });\n\t          break;\n\t        case ShapeSymbols.line:\n\t          drawLine(contextReference, symbol.data.p1, symbol.data.p2);\n\t          break;\n\t        default:\n\t          _LoggerConfig.rendererLogger.error(symbol.elementType + ' not implemented');\n\t          break;\n\t      }\n\t    } else {\n\t      switch (symbol.type) {\n\t        case ShapeSymbols.ellipse:\n\t          drawShapeEllipse(contextReference, symbol);\n\t          break;\n\t        case ShapeSymbols.line:\n\t          drawShapeLine(contextReference, symbol);\n\t          break;\n\t        case ShapeSymbols.recognizedShape:\n\t          symbol.primitives.forEach(function (primitive) {\n\t            return drawShapeSymbol(contextReference, primitive);\n\t          });\n\t          break;\n\t        default:\n\t          _LoggerConfig.rendererLogger.error(symbol.type + ' not implemented');\n\t          break;\n\t      }\n\t    }\n\t  } finally {\n\t    contextReference.restore();\n\t  }\n\t}\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.processRenderingResult = processRenderingResult;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Enrich the model with recognized symbols\n\t * @param {Model} model Current model\n\t * @return {Model} Updated model\n\t */\n\tfunction processRenderingResult(model) {\n\t  _LoggerConfig.recognizerLogger.debug('Building the rendering model', model);\n\t  return model;\n\t}\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.overrideDefaultOptions = overrideDefaultOptions;\n\t\n\tvar _assignDeep = __webpack_require__(54);\n\t\n\tvar _assignDeep2 = _interopRequireDefault(_assignDeep);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @typedef {Object} ServerParameters\n\t * @property {String} scheme\n\t * @property {String} host\n\t * @property {String} applicationKey\n\t * @property {String} hmacKey\n\t */\n\t\n\t/**\n\t * Parameters to be used for rendering\n\t * @typedef {Object} RenderingParameters\n\t * @property {String} renderer Renderer type to used\n\t * @property {String} stroker Stroker name to used\n\t */\n\t\n\t/**\n\t * Parameters to be used for recognition\n\t * @typedef {Object} RecognitionParameters\n\t * @property {String} triggerRecognitionOn\n\t * @property {Number} triggerRecognitionQuietPeriod\n\t * @property {Number} triggerCallbacksAndRenderingQuietPeriod\n\t * @property {String} type Recognition type (TEXT, MATH, SHAPE, MUSIC, ANALYZER).\n\t * @property {String} protocol REST or WEBSOCKET to choose the API to use.\n\t * @property {String} apiVersion Version of the api to use.\n\t * @property {ServerParameters} server\n\t * @property {Number} nbRetry\n\t * @property {Number} xyFloatPrecision Precision of x and y from 0 to 10 (integer). More the value is high more precise will be the point capture but object in memory and send to the server will be heavier.\n\t * @property {Number} timestampFloatPrecision\n\t * @property {Object} mathParameter Parameters of the math recognition if in use.\n\t * @property {Object} textParameter Parameters of the text recognition if in use.\n\t * @property {Object} shapeParameter Parameters of the shape recognition if in use.\n\t * @property {Object} musicParameter Parameters of the music recognition if in use.\n\t * @property {Object} analyzerParameter Parameters of the analyzer recognition if in use.\n\t */\n\t\n\t/**\n\t * {@link InkPaper} options\n\t * @typedef {Object} Options\n\t * @property {Number} undoRedoMaxStackSize Number of strokes keep in undo redo stack.\n\t * @property {RenderingParameters} renderingParams Rendering parameters.\n\t * @property {RecognitionParameters} recognitionParams Recognition parameters.\n\t */\n\t\n\t/**\n\t * Default options\n\t * @type {Options}\n\t */\n\tvar defaultOptions = {\n\t  // see @typedef documentation on top\n\t  undoRedoMaxStackSize: 20,\n\t  renderingParams: {\n\t    renderer: 'canvas',\n\t    stroker: 'quadratic'\n\t  },\n\t  recognitionParams: {\n\t    // Configure when the recognition is trigger.\n\t    // PEN_UP : Recognition is triggered on every PenUP. This is the recommended mode for CDK V3 WebSocket recognitions.\n\t    // QUIET_PERIOD : Recognition is triggered after a quiet period in milli-seconds on every pen up. I value is set to 2000 for example the recognition will be fired  when user stop writing 2 seconds. This is the recommended mode for all REST recognitions.\n\t    triggerRecognitionOn: _MyScriptJSConstants2.default.RecognitionTrigger.PEN_UP,\n\t    triggerRecognitionQuietPeriod: 2000,\n\t    // When recognition is in PEN_UP mode, quiet period duration in millisecond while inkPaper wait for another recognition before triggering the display and the call to configured callbacks.\n\t    triggerCallbacksAndRenderingQuietPeriod: 1000,\n\t    type: _MyScriptJSConstants2.default.RecognitionType.TEXT,\n\t    protocol: _MyScriptJSConstants2.default.Protocol.WEBSOCKET,\n\t    apiVersion: 'V3',\n\t    server: {\n\t      scheme: 'https',\n\t      host: 'cloud-internal-stable.visionobjects.com',\n\t      applicationKey: '64e1afbf-f3a7-4d04-bce1-24b05ee0b2d6',\n\t      hmacKey: '88d81b71-13cd-41a0-9206-ba367c21900f',\n\t      maxRetryCount: 2,\n\t      websocket: {\n\t        maxPingLostCount: 10,\n\t        pingIntervalMillis: 1500,\n\t        // Will try to reconnect when websocket is close or when a timeout is detected. Do not handle the case when user change network on his device.\n\t        autoReconnect: true\n\t      }\n\t    },\n\t    xyFloatPrecision: 0,\n\t    timestampFloatPrecision: 0,\n\t    mathParameter: {\n\t      resultTypes: [],\n\t      columnarOperation: false,\n\t      userResources: [],\n\t      scratchOutDetectionSensitivity: 1\n\t    },\n\t    textParameter: {\n\t      language: 'en_US',\n\t      textInputMode: _MyScriptJSConstants2.default.InputMode.CURSIVE,\n\t      resultDetail: _MyScriptJSConstants2.default.ResultDetail.TEXT,\n\t      textProperties: {\n\t        textCandidateListSize: 3\n\t      }\n\t    },\n\t    shapeParameter: {\n\t      rejectDetectionSensitivity: 1,\n\t      doBeautification: true\n\t    },\n\t    musicParameter: {\n\t      divisions: 480,\n\t      resultTypes: ['MUSICXML', 'SCORETREE'],\n\t      userResources: [],\n\t      staff: {\n\t        top: 100,\n\t        count: 5,\n\t        gap: 20\n\t      },\n\t      clef: {\n\t        symbol: 'G',\n\t        octave: 0,\n\t        line: 2\n\t      }\n\t    },\n\t    analyzerParameter: {\n\t      textParameter: {\n\t        textProperties: {},\n\t        language: 'en_US',\n\t        textInputMode: _MyScriptJSConstants2.default.InputMode.CURSIVE\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Generate parameters\n\t * @param {Options} options Configuration to be used\n\t * @return {Options} Overridden configuration\n\t */\n\tfunction overrideDefaultOptions(options) {\n\t  return (0, _assignDeep2.default)({}, defaultOptions, options === undefined ? {} : options);\n\t}\n\t\n\texports.default = defaultOptions;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * assign-deep <https://github.com/jonschlinkert/assign-deep>\n\t *\n\t * Copyright (c) 2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tvar isPrimitive = __webpack_require__(55);\n\tvar assignSymbols = __webpack_require__(56);\n\tvar typeOf = __webpack_require__(57);\n\t\n\tfunction assign(target/*, objects*/) {\n\t  target = target || {};\n\t  var len = arguments.length, i = 0;\n\t  if (len === 1) {\n\t    return target;\n\t  }\n\t  while (++i < len) {\n\t    var val = arguments[i];\n\t    if (isPrimitive(target)) {\n\t      target = val;\n\t    }\n\t    if (isObject(val)) {\n\t      extend(target, val);\n\t    }\n\t  }\n\t  return target;\n\t}\n\t\n\t/**\n\t * Shallow extend\n\t */\n\t\n\tfunction extend(target, obj) {\n\t  assignSymbols(target, obj);\n\t\n\t  for (var key in obj) {\n\t    if (hasOwn(obj, key)) {\n\t      var val = obj[key];\n\t      if (isObject(val)) {\n\t        if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\n\t          target[key] = val;\n\t        }\n\t        target[key] = assign(target[key] || {}, val);\n\t      } else {\n\t        target[key] = val;\n\t      }\n\t    }\n\t  }\n\t  return target;\n\t}\n\t\n\t/**\n\t * Returns true if the object is a plain object or a function.\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return typeOf(obj) === 'object' || typeOf(obj) === 'function';\n\t}\n\t\n\t/**\n\t * Returns true if the given `key` is an own property of `obj`.\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return Object.prototype.hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Expose `assign`\n\t */\n\t\n\tmodule.exports = assign;\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * is-primitive <https://github.com/jonschlinkert/is-primitive>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\t// see http://jsperf.com/testing-value-is-primitive/7\n\tmodule.exports = function isPrimitive(value) {\n\t  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n\t};\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n\t *\n\t * Copyright (c) 2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n\t\n\t'use strict';\n\t\n\tmodule.exports = function(receiver, objects) {\n\t  if (receiver === null || typeof receiver === 'undefined') {\n\t    throw new TypeError('expected first argument to be an object.');\n\t  }\n\t\n\t  if (typeof objects === 'undefined' || typeof Symbol === 'undefined') {\n\t    return receiver;\n\t  }\n\t\n\t  if (typeof Object.getOwnPropertySymbols !== 'function') {\n\t    return receiver;\n\t  }\n\t\n\t  var isEnumerable = Object.prototype.propertyIsEnumerable;\n\t  var target = Object(receiver);\n\t  var len = arguments.length, i = 0;\n\t\n\t  while (++i < len) {\n\t    var provider = Object(arguments[i]);\n\t    var names = Object.getOwnPropertySymbols(provider);\n\t\n\t    for (var j = 0; j < names.length; j++) {\n\t      var key = names[j];\n\t\n\t      if (isEnumerable.call(provider, key)) {\n\t        target[key] = provider[key];\n\t      }\n\t    }\n\t  }\n\t  return target;\n\t};\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer) {var isBuffer = __webpack_require__(62);\n\tvar toString = Object.prototype.toString;\n\t\n\t/**\n\t * Get the native `typeof` a value.\n\t *\n\t * @param  {*} `val`\n\t * @return {*} Native javascript type\n\t */\n\t\n\tmodule.exports = function kindOf(val) {\n\t  // primitivies\n\t  if (typeof val === 'undefined') {\n\t    return 'undefined';\n\t  }\n\t  if (val === null) {\n\t    return 'null';\n\t  }\n\t  if (val === true || val === false || val instanceof Boolean) {\n\t    return 'boolean';\n\t  }\n\t  if (typeof val === 'string' || val instanceof String) {\n\t    return 'string';\n\t  }\n\t  if (typeof val === 'number' || val instanceof Number) {\n\t    return 'number';\n\t  }\n\t\n\t  // functions\n\t  if (typeof val === 'function' || val instanceof Function) {\n\t    return 'function';\n\t  }\n\t\n\t  // array\n\t  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n\t    return 'array';\n\t  }\n\t\n\t  // check for instances of RegExp and Date before calling `toString`\n\t  if (val instanceof RegExp) {\n\t    return 'regexp';\n\t  }\n\t  if (val instanceof Date) {\n\t    return 'date';\n\t  }\n\t\n\t  // other objects\n\t  var type = toString.call(val);\n\t\n\t  if (type === '[object RegExp]') {\n\t    return 'regexp';\n\t  }\n\t  if (type === '[object Date]') {\n\t    return 'date';\n\t  }\n\t  if (type === '[object Arguments]') {\n\t    return 'arguments';\n\t  }\n\t  if (type === '[object Error]') {\n\t    return 'error';\n\t  }\n\t\n\t  // buffer\n\t  if (typeof Buffer !== 'undefined' && isBuffer(val)) {\n\t    return 'buffer';\n\t  }\n\t\n\t  // es6: Map, WeakMap, Set, WeakSet\n\t  if (type === '[object Set]') {\n\t    return 'set';\n\t  }\n\t  if (type === '[object WeakSet]') {\n\t    return 'weakset';\n\t  }\n\t  if (type === '[object Map]') {\n\t    return 'map';\n\t  }\n\t  if (type === '[object WeakMap]') {\n\t    return 'weakmap';\n\t  }\n\t  if (type === '[object Symbol]') {\n\t    return 'symbol';\n\t  }\n\t\n\t  // typed arrays\n\t  if (type === '[object Int8Array]') {\n\t    return 'int8array';\n\t  }\n\t  if (type === '[object Uint8Array]') {\n\t    return 'uint8array';\n\t  }\n\t  if (type === '[object Uint8ClampedArray]') {\n\t    return 'uint8clampedarray';\n\t  }\n\t  if (type === '[object Int16Array]') {\n\t    return 'int16array';\n\t  }\n\t  if (type === '[object Uint16Array]') {\n\t    return 'uint16array';\n\t  }\n\t  if (type === '[object Int32Array]') {\n\t    return 'int32array';\n\t  }\n\t  if (type === '[object Uint32Array]') {\n\t    return 'uint32array';\n\t  }\n\t  if (type === '[object Float32Array]') {\n\t    return 'float32array';\n\t  }\n\t  if (type === '[object Float64Array]') {\n\t    return 'float64array';\n\t  }\n\t\n\t  // must be a plain object\n\t  return 'object';\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(58).Buffer))\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\t'use strict'\n\t\n\tvar base64 = __webpack_require__(59)\n\tvar ieee754 = __webpack_require__(60)\n\tvar isArray = __webpack_require__(61)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\t/*\n\t * Export kMaxLength after typed array support is determined.\n\t */\n\texports.kMaxLength = kMaxLength()\n\t\n\tfunction typedArraySupport () {\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\tfunction createBuffer (that, length) {\n\t  if (kMaxLength() < length) {\n\t    throw new RangeError('Invalid typed array length')\n\t  }\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = new Uint8Array(length)\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    if (that === null) {\n\t      that = new Buffer(length)\n\t    }\n\t    that.length = length\n\t  }\n\t\n\t  return that\n\t}\n\t\n\t/**\n\t * The Buffer constructor returns instances of `Uint8Array` that have their\n\t * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n\t * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n\t * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n\t * returns a single octet.\n\t *\n\t * The `Uint8Array` prototype remains unmodified.\n\t */\n\t\n\tfunction Buffer (arg, encodingOrOffset, length) {\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n\t    return new Buffer(arg, encodingOrOffset, length)\n\t  }\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    if (typeof encodingOrOffset === 'string') {\n\t      throw new Error(\n\t        'If encoding is specified then the first argument must be a string'\n\t      )\n\t    }\n\t    return allocUnsafe(this, arg)\n\t  }\n\t  return from(this, arg, encodingOrOffset, length)\n\t}\n\t\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\t// TODO: Legacy, not needed anymore. Remove in next major version.\n\tBuffer._augment = function (arr) {\n\t  arr.__proto__ = Buffer.prototype\n\t  return arr\n\t}\n\t\n\tfunction from (that, value, encodingOrOffset, length) {\n\t  if (typeof value === 'number') {\n\t    throw new TypeError('\"value\" argument must not be a number')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n\t    return fromArrayBuffer(that, value, encodingOrOffset, length)\n\t  }\n\t\n\t  if (typeof value === 'string') {\n\t    return fromString(that, value, encodingOrOffset)\n\t  }\n\t\n\t  return fromObject(that, value)\n\t}\n\t\n\t/**\n\t * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n\t * if value is a number.\n\t * Buffer.from(str[, encoding])\n\t * Buffer.from(array)\n\t * Buffer.from(buffer)\n\t * Buffer.from(arrayBuffer[, byteOffset[, length]])\n\t **/\n\tBuffer.from = function (value, encodingOrOffset, length) {\n\t  return from(null, value, encodingOrOffset, length)\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t  if (typeof Symbol !== 'undefined' && Symbol.species &&\n\t      Buffer[Symbol.species] === Buffer) {\n\t    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n\t    Object.defineProperty(Buffer, Symbol.species, {\n\t      value: null,\n\t      configurable: true\n\t    })\n\t  }\n\t}\n\t\n\tfunction assertSize (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('\"size\" argument must be a number')\n\t  } else if (size < 0) {\n\t    throw new RangeError('\"size\" argument must not be negative')\n\t  }\n\t}\n\t\n\tfunction alloc (that, size, fill, encoding) {\n\t  assertSize(size)\n\t  if (size <= 0) {\n\t    return createBuffer(that, size)\n\t  }\n\t  if (fill !== undefined) {\n\t    // Only pay attention to encoding if it's a string. This\n\t    // prevents accidentally sending in a number that would\n\t    // be interpretted as a start offset.\n\t    return typeof encoding === 'string'\n\t      ? createBuffer(that, size).fill(fill, encoding)\n\t      : createBuffer(that, size).fill(fill)\n\t  }\n\t  return createBuffer(that, size)\n\t}\n\t\n\t/**\n\t * Creates a new filled Buffer instance.\n\t * alloc(size[, fill[, encoding]])\n\t **/\n\tBuffer.alloc = function (size, fill, encoding) {\n\t  return alloc(null, size, fill, encoding)\n\t}\n\t\n\tfunction allocUnsafe (that, size) {\n\t  assertSize(size)\n\t  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < size; ++i) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\t/**\n\t * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n\t * */\n\tBuffer.allocUnsafe = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t/**\n\t * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n\t */\n\tBuffer.allocUnsafeSlow = function (size) {\n\t  return allocUnsafe(null, size)\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') {\n\t    encoding = 'utf8'\n\t  }\n\t\n\t  if (!Buffer.isEncoding(encoding)) {\n\t    throw new TypeError('\"encoding\" must be a valid string encoding')\n\t  }\n\t\n\t  var length = byteLength(string, encoding) | 0\n\t  that = createBuffer(that, length)\n\t\n\t  var actual = that.write(string, encoding)\n\t\n\t  if (actual !== length) {\n\t    // Writing a hex string, for example, that contains invalid characters will\n\t    // cause everything after the first invalid character to be ignored. (e.g.\n\t    // 'abxxcd' will be treated as 'ab')\n\t    that = that.slice(0, actual)\n\t  }\n\t\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = array.length < 0 ? 0 : checked(array.length) | 0\n\t  that = createBuffer(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array, byteOffset, length) {\n\t  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\t\n\t  if (byteOffset < 0 || array.byteLength < byteOffset) {\n\t    throw new RangeError('\\'offset\\' is out of bounds')\n\t  }\n\t\n\t  if (array.byteLength < byteOffset + (length || 0)) {\n\t    throw new RangeError('\\'length\\' is out of bounds')\n\t  }\n\t\n\t  if (byteOffset === undefined && length === undefined) {\n\t    array = new Uint8Array(array)\n\t  } else if (length === undefined) {\n\t    array = new Uint8Array(array, byteOffset)\n\t  } else {\n\t    array = new Uint8Array(array, byteOffset, length)\n\t  }\n\t\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = array\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromArrayLike(that, array)\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, obj) {\n\t  if (Buffer.isBuffer(obj)) {\n\t    var len = checked(obj.length) | 0\n\t    that = createBuffer(that, len)\n\t\n\t    if (that.length === 0) {\n\t      return that\n\t    }\n\t\n\t    obj.copy(that, 0, 0, len)\n\t    return that\n\t  }\n\t\n\t  if (obj) {\n\t    if ((typeof ArrayBuffer !== 'undefined' &&\n\t        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n\t      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n\t        return createBuffer(that, 0)\n\t      }\n\t      return fromArrayLike(that, obj)\n\t    }\n\t\n\t    if (obj.type === 'Buffer' && isArray(obj.data)) {\n\t      return fromArrayLike(that, obj.data)\n\t    }\n\t  }\n\t\n\t  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength()` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (length) {\n\t  if (+length != length) { // eslint-disable-line eqeqeq\n\t    length = 0\n\t  }\n\t  return Buffer.alloc(+length)\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n\t    if (a[i] !== b[i]) {\n\t      x = a[i]\n\t      y = b[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'latin1':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) {\n\t    throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t  }\n\t\n\t  if (list.length === 0) {\n\t    return Buffer.alloc(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; ++i) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buffer = Buffer.allocUnsafe(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; ++i) {\n\t    var buf = list[i]\n\t    if (!Buffer.isBuffer(buf)) {\n\t      throw new TypeError('\"list\" argument must be an Array of Buffers')\n\t    }\n\t    buf.copy(buffer, pos)\n\t    pos += buf.length\n\t  }\n\t  return buffer\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (Buffer.isBuffer(string)) {\n\t    return string.length\n\t  }\n\t  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n\t      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n\t    return string.byteLength\n\t  }\n\t  if (typeof string !== 'string') {\n\t    string = '' + string\n\t  }\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'latin1':\n\t      case 'binary':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t      case undefined:\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n\t  // property of a typed array.\n\t\n\t  // This behaves neither like String nor Uint8Array in that we set start/end\n\t  // to their upper/lower bounds if the value passed is out of range.\n\t  // undefined is handled specially as per ECMA-262 6th Edition,\n\t  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\t  if (start === undefined || start < 0) {\n\t    start = 0\n\t  }\n\t  // Return early if start > this.length. Done here to prevent potential uint32\n\t  // coercion fail below.\n\t  if (start > this.length) {\n\t    return ''\n\t  }\n\t\n\t  if (end === undefined || end > this.length) {\n\t    end = this.length\n\t  }\n\t\n\t  if (end <= 0) {\n\t    return ''\n\t  }\n\t\n\t  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\t  end >>>= 0\n\t  start >>>= 0\n\t\n\t  if (end <= start) {\n\t    return ''\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Slice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\t// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n\t// Buffer instances.\n\tBuffer.prototype._isBuffer = true\n\t\n\tfunction swap (b, n, m) {\n\t  var i = b[n]\n\t  b[n] = b[m]\n\t  b[m] = i\n\t}\n\t\n\tBuffer.prototype.swap16 = function swap16 () {\n\t  var len = this.length\n\t  if (len % 2 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 16-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 2) {\n\t    swap(this, i, i + 1)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap32 = function swap32 () {\n\t  var len = this.length\n\t  if (len % 4 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 32-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 4) {\n\t    swap(this, i, i + 3)\n\t    swap(this, i + 1, i + 2)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.swap64 = function swap64 () {\n\t  var len = this.length\n\t  if (len % 8 !== 0) {\n\t    throw new RangeError('Buffer size must be a multiple of 64-bits')\n\t  }\n\t  for (var i = 0; i < len; i += 8) {\n\t    swap(this, i, i + 7)\n\t    swap(this, i + 1, i + 6)\n\t    swap(this, i + 2, i + 5)\n\t    swap(this, i + 3, i + 4)\n\t  }\n\t  return this\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n\t  if (!Buffer.isBuffer(target)) {\n\t    throw new TypeError('Argument must be a Buffer')\n\t  }\n\t\n\t  if (start === undefined) {\n\t    start = 0\n\t  }\n\t  if (end === undefined) {\n\t    end = target ? target.length : 0\n\t  }\n\t  if (thisStart === undefined) {\n\t    thisStart = 0\n\t  }\n\t  if (thisEnd === undefined) {\n\t    thisEnd = this.length\n\t  }\n\t\n\t  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n\t    throw new RangeError('out of range index')\n\t  }\n\t\n\t  if (thisStart >= thisEnd && start >= end) {\n\t    return 0\n\t  }\n\t  if (thisStart >= thisEnd) {\n\t    return -1\n\t  }\n\t  if (start >= end) {\n\t    return 1\n\t  }\n\t\n\t  start >>>= 0\n\t  end >>>= 0\n\t  thisStart >>>= 0\n\t  thisEnd >>>= 0\n\t\n\t  if (this === target) return 0\n\t\n\t  var x = thisEnd - thisStart\n\t  var y = end - start\n\t  var len = Math.min(x, y)\n\t\n\t  var thisCopy = this.slice(thisStart, thisEnd)\n\t  var targetCopy = target.slice(start, end)\n\t\n\t  for (var i = 0; i < len; ++i) {\n\t    if (thisCopy[i] !== targetCopy[i]) {\n\t      x = thisCopy[i]\n\t      y = targetCopy[i]\n\t      break\n\t    }\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\t// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n\t// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n\t//\n\t// Arguments:\n\t// - buffer - a Buffer to search\n\t// - val - a string, Buffer, or number\n\t// - byteOffset - an index into `buffer`; will be clamped to an int32\n\t// - encoding - an optional encoding, relevant is val is a string\n\t// - dir - true for indexOf, false for lastIndexOf\n\tfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n\t  // Empty buffer means no match\n\t  if (buffer.length === 0) return -1\n\t\n\t  // Normalize byteOffset\n\t  if (typeof byteOffset === 'string') {\n\t    encoding = byteOffset\n\t    byteOffset = 0\n\t  } else if (byteOffset > 0x7fffffff) {\n\t    byteOffset = 0x7fffffff\n\t  } else if (byteOffset < -0x80000000) {\n\t    byteOffset = -0x80000000\n\t  }\n\t  byteOffset = +byteOffset  // Coerce to Number.\n\t  if (isNaN(byteOffset)) {\n\t    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n\t    byteOffset = dir ? 0 : (buffer.length - 1)\n\t  }\n\t\n\t  // Normalize byteOffset: negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n\t  if (byteOffset >= buffer.length) {\n\t    if (dir) return -1\n\t    else byteOffset = buffer.length - 1\n\t  } else if (byteOffset < 0) {\n\t    if (dir) byteOffset = 0\n\t    else return -1\n\t  }\n\t\n\t  // Normalize val\n\t  if (typeof val === 'string') {\n\t    val = Buffer.from(val, encoding)\n\t  }\n\t\n\t  // Finally, search either indexOf (if dir is true) or lastIndexOf\n\t  if (Buffer.isBuffer(val)) {\n\t    // Special case: looking for empty string/buffer always fails\n\t    if (val.length === 0) {\n\t      return -1\n\t    }\n\t    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n\t  } else if (typeof val === 'number') {\n\t    val = val & 0xFF // Search for a byte value [0-255]\n\t    if (Buffer.TYPED_ARRAY_SUPPORT &&\n\t        typeof Uint8Array.prototype.indexOf === 'function') {\n\t      if (dir) {\n\t        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n\t      } else {\n\t        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n\t      }\n\t    }\n\t    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\tfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n\t  var indexSize = 1\n\t  var arrLength = arr.length\n\t  var valLength = val.length\n\t\n\t  if (encoding !== undefined) {\n\t    encoding = String(encoding).toLowerCase()\n\t    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n\t        encoding === 'utf16le' || encoding === 'utf-16le') {\n\t      if (arr.length < 2 || val.length < 2) {\n\t        return -1\n\t      }\n\t      indexSize = 2\n\t      arrLength /= 2\n\t      valLength /= 2\n\t      byteOffset /= 2\n\t    }\n\t  }\n\t\n\t  function read (buf, i) {\n\t    if (indexSize === 1) {\n\t      return buf[i]\n\t    } else {\n\t      return buf.readUInt16BE(i * indexSize)\n\t    }\n\t  }\n\t\n\t  var i\n\t  if (dir) {\n\t    var foundIndex = -1\n\t    for (i = byteOffset; i < arrLength; i++) {\n\t      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n\t      } else {\n\t        if (foundIndex !== -1) i -= i - foundIndex\n\t        foundIndex = -1\n\t      }\n\t    }\n\t  } else {\n\t    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n\t    for (i = byteOffset; i >= 0; i--) {\n\t      var found = true\n\t      for (var j = 0; j < valLength; j++) {\n\t        if (read(arr, i + j) !== read(val, j)) {\n\t          found = false\n\t          break\n\t        }\n\t      }\n\t      if (found) return i\n\t    }\n\t  }\n\t\n\t  return -1\n\t}\n\t\n\tBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n\t  return this.indexOf(val, byteOffset, encoding) !== -1\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n\t}\n\t\n\tBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n\t  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; ++i) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) return i\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction latin1Write (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    throw new Error(\n\t      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n\t    )\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('Attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'latin1':\n\t      case 'binary':\n\t        return latin1Write(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction latin1Slice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; ++i) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; ++i) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = this.subarray(start, end)\n\t    newBuf.__proto__ = Buffer.prototype\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; ++i) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n\t    checkInt(this, value, offset, byteLength, maxBytes, 0)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n\t      sub = 1\n\t    }\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n\t  if (offset < 0) throw new RangeError('Index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; --i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; ++i) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    Uint8Array.prototype.set.call(\n\t      target,\n\t      this.subarray(start, start + len),\n\t      targetStart\n\t    )\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// Usage:\n\t//    buffer.fill(number[, offset[, end]])\n\t//    buffer.fill(buffer[, offset[, end]])\n\t//    buffer.fill(string[, offset[, end]][, encoding])\n\tBuffer.prototype.fill = function fill (val, start, end, encoding) {\n\t  // Handle string cases:\n\t  if (typeof val === 'string') {\n\t    if (typeof start === 'string') {\n\t      encoding = start\n\t      start = 0\n\t      end = this.length\n\t    } else if (typeof end === 'string') {\n\t      encoding = end\n\t      end = this.length\n\t    }\n\t    if (val.length === 1) {\n\t      var code = val.charCodeAt(0)\n\t      if (code < 256) {\n\t        val = code\n\t      }\n\t    }\n\t    if (encoding !== undefined && typeof encoding !== 'string') {\n\t      throw new TypeError('encoding must be a string')\n\t    }\n\t    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n\t      throw new TypeError('Unknown encoding: ' + encoding)\n\t    }\n\t  } else if (typeof val === 'number') {\n\t    val = val & 255\n\t  }\n\t\n\t  // Invalid ranges are not set to a default, so can range check early.\n\t  if (start < 0 || this.length < start || this.length < end) {\n\t    throw new RangeError('Out of range index')\n\t  }\n\t\n\t  if (end <= start) {\n\t    return this\n\t  }\n\t\n\t  start = start >>> 0\n\t  end = end === undefined ? this.length : end >>> 0\n\t\n\t  if (!val) val = 0\n\t\n\t  var i\n\t  if (typeof val === 'number') {\n\t    for (i = start; i < end; ++i) {\n\t      this[i] = val\n\t    }\n\t  } else {\n\t    var bytes = Buffer.isBuffer(val)\n\t      ? val\n\t      : utf8ToBytes(new Buffer(val, encoding).toString())\n\t    var len = bytes.length\n\t    for (i = 0; i < end - start; ++i) {\n\t      this[i + start] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; ++i) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; ++i) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; ++i) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\tfunction isnan (val) {\n\t  return val !== val // eslint-disable-line no-self-compare\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t'use strict'\n\t\n\texports.byteLength = byteLength\n\texports.toByteArray = toByteArray\n\texports.fromByteArray = fromByteArray\n\t\n\tvar lookup = []\n\tvar revLookup = []\n\tvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\t\n\tvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\tfor (var i = 0, len = code.length; i < len; ++i) {\n\t  lookup[i] = code[i]\n\t  revLookup[code.charCodeAt(i)] = i\n\t}\n\t\n\trevLookup['-'.charCodeAt(0)] = 62\n\trevLookup['_'.charCodeAt(0)] = 63\n\t\n\tfunction placeHoldersCount (b64) {\n\t  var len = b64.length\n\t  if (len % 4 > 0) {\n\t    throw new Error('Invalid string. Length must be a multiple of 4')\n\t  }\n\t\n\t  // the number of equal signs (place holders)\n\t  // if there are two placeholders, than the two characters before it\n\t  // represent one byte\n\t  // if there is only one, then the three characters before it represent 2 bytes\n\t  // this is just a cheap hack to not do indexOf twice\n\t  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\t}\n\t\n\tfunction byteLength (b64) {\n\t  // base64 is 4/3 + up to two characters of the original data\n\t  return b64.length * 3 / 4 - placeHoldersCount(b64)\n\t}\n\t\n\tfunction toByteArray (b64) {\n\t  var i, j, l, tmp, placeHolders, arr\n\t  var len = b64.length\n\t  placeHolders = placeHoldersCount(b64)\n\t\n\t  arr = new Arr(len * 3 / 4 - placeHolders)\n\t\n\t  // if there are placeholders, only get up to the last complete 4 chars\n\t  l = placeHolders > 0 ? len - 4 : len\n\t\n\t  var L = 0\n\t\n\t  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n\t    arr[L++] = (tmp >> 16) & 0xFF\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  if (placeHolders === 2) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n\t    arr[L++] = tmp & 0xFF\n\t  } else if (placeHolders === 1) {\n\t    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n\t    arr[L++] = (tmp >> 8) & 0xFF\n\t    arr[L++] = tmp & 0xFF\n\t  }\n\t\n\t  return arr\n\t}\n\t\n\tfunction tripletToBase64 (num) {\n\t  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n\t}\n\t\n\tfunction encodeChunk (uint8, start, end) {\n\t  var tmp\n\t  var output = []\n\t  for (var i = start; i < end; i += 3) {\n\t    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t    output.push(tripletToBase64(tmp))\n\t  }\n\t  return output.join('')\n\t}\n\t\n\tfunction fromByteArray (uint8) {\n\t  var tmp\n\t  var len = uint8.length\n\t  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n\t  var output = ''\n\t  var parts = []\n\t  var maxChunkLength = 16383 // must be multiple of 3\n\t\n\t  // go through the array every three bytes, we'll deal with trailing stuff later\n\t  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n\t    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n\t  }\n\t\n\t  // pad the end with zeros, but make sure to not forget the extra bytes\n\t  if (extraBytes === 1) {\n\t    tmp = uint8[len - 1]\n\t    output += lookup[tmp >> 2]\n\t    output += lookup[(tmp << 4) & 0x3F]\n\t    output += '=='\n\t  } else if (extraBytes === 2) {\n\t    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n\t    output += lookup[tmp >> 10]\n\t    output += lookup[(tmp >> 4) & 0x3F]\n\t    output += lookup[(tmp << 2) & 0x3F]\n\t    output += '='\n\t  }\n\t\n\t  parts.push(output)\n\t\n\t  return parts.join('')\n\t}\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Determine if an object is a Buffer\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t\n\t// The _isBuffer check is for Safari 5-7 support, because it's missing\n\t// Object.prototype.constructor. Remove this eventually\n\tmodule.exports = function (obj) {\n\t  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n\t}\n\t\n\tfunction isBuffer (obj) {\n\t  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n\t}\n\t\n\t// For Node v0.10 support. Remove this eventually.\n\tfunction isSlowBuffer (obj) {\n\t  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n\t}\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.InkPaper = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSBehaviors = __webpack_require__(64);\n\t\n\tvar MyScriptJSBehaviors = _interopRequireWildcard(_MyScriptJSBehaviors);\n\t\n\tvar _MyScriptJSOptions = __webpack_require__(53);\n\t\n\tvar MyScriptJSOptions = _interopRequireWildcard(_MyScriptJSOptions);\n\t\n\tvar _MyScriptJSStyles = __webpack_require__(84);\n\t\n\tvar MyScriptJSStyles = _interopRequireWildcard(_MyScriptJSStyles);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tvar _UndoRedoContext = __webpack_require__(85);\n\t\n\tvar UndoRedoContext = _interopRequireWildcard(_UndoRedoContext);\n\t\n\tvar _UndoRedoManager = __webpack_require__(86);\n\t\n\tvar UndoRedoManager = _interopRequireWildcard(_UndoRedoManager);\n\t\n\tvar _ModelStats = __webpack_require__(4);\n\t\n\tvar ModelStats = _interopRequireWildcard(_ModelStats);\n\t\n\tvar _ImageRenderer = __webpack_require__(87);\n\t\n\tvar ImageRenderer = _interopRequireWildcard(_ImageRenderer);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar RecognizerContext = _interopRequireWildcard(_RecognizerContext);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Check if a reset is required, and does it if it is\n\t * @param {Recognizer} recognizer Current recognizer\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction manageResetState(recognizer, options, model, recognizerContext) {\n\t  var isResetRequired = function isResetRequired() {\n\t    if (recognizerContext.lastRecognitionPositions) {\n\t      return recognizerContext.lastRecognitionPositions.lastSentPosition >= model.rawStrokes.length - 1;\n\t    }\n\t    return false;\n\t  };\n\t\n\t  if (isResetRequired()) {\n\t    _LoggerConfig.inkpaperLogger.debug('Reset is needed');\n\t    return recognizer.reset(options, model, recognizerContext);\n\t  }\n\t  return Promise.resolve(model);\n\t}\n\t\n\t/**\n\t * Check if the recognition mode in parameter is the one configured.\n\t * @param {InkPaper} inkPaper\n\t * @param {String} recognitionMode\n\t * @return {Boolean}\n\t */\n\tfunction isRecognitionModeConfigured(inkPaper, recognitionMode) {\n\t  return inkPaper.recognizer && inkPaper.options.recognitionParams.triggerRecognitionOn === _MyScriptJSConstants2.default.RecognitionTrigger[recognitionMode] && inkPaper.recognizer.getInfo().availableTriggers.includes(_MyScriptJSConstants2.default.RecognitionTrigger[recognitionMode]);\n\t}\n\t\n\t/**\n\t * Trigger an error event\n\t * @param {Object} error\n\t * @param {Element} domElement\n\t * @return {Object}\n\t */\n\tfunction raiseError(error, domElement) {\n\t  _LoggerConfig.inkpaperLogger.debug('emitting error event', error);\n\t  // We are making usage of a browser provided class\n\t  // eslint-disable-next-line no-undef\n\t  domElement.dispatchEvent(new CustomEvent('error', { detail: error }));\n\t  return error;\n\t}\n\t\n\t/**\n\t * Trigger callbacks\n\t * @param {Array} callbacks\n\t * @param {Model} model\n\t * @param {Element} element\n\t * @return {Model}\n\t */\n\tfunction triggerCallBacks(callbacks, model, element) {\n\t  callbacks.forEach(function (callback) {\n\t    return callback.call(element, model);\n\t  });\n\t  return model;\n\t}\n\t\n\t/**\n\t * Handle model change\n\t * @param {InkPaper} inkPaper\n\t * @param {Model} model\n\t * @return {Model}\n\t */\n\tfunction modelChangedCallback(inkPaper, model) {\n\t  _LoggerConfig.inkpaperLogger.info('model changed callback', model);\n\t  inkPaper.renderer.drawModel(inkPaper.rendererContext, model, inkPaper.stroker);\n\t  return triggerCallBacks(inkPaper.callbacks, model, inkPaper.domElement);\n\t}\n\t\n\t/**\n\t * Trigger rendering after delay\n\t * @param {InkPaper} inkPaper\n\t * @param {Model} model\n\t * @return {Promise.<Model>}\n\t */\n\tfunction triggerRenderingAndCallbackAfterDelay(inkPaper, model) {\n\t  var inkPaperRef = inkPaper;\n\t  return new Promise(function (resolve) {\n\t    /* eslint-disable no-undef*/\n\t    window.clearTimeout(inkPaper.resulttimer);\n\t    inkPaperRef.resulttimer = window.setTimeout(function () {\n\t      resolve(modelChangedCallback(inkPaperRef, model));\n\t    }, inkPaperRef.options.recognitionParams.triggerCallbacksAndRenderingQuietPeriod);\n\t    /* eslint-enable no-undef */\n\t  });\n\t}\n\t\n\t/**\n\t * Launch the recognition with all inkPaper relative configuration and state.\n\t * @param {InkPaper} inkPaper\n\t * @param {Model} modelToRecognize\n\t * @return {Promise.<Model>}\n\t */\n\tfunction launchRecognition(inkPaper, modelToRecognize) {\n\t  // In websocket mode as we are sending strokes on every pen up it, recognition events comes to often and degrade the user experience. options allows to set up a timeout. When recognition is in PEN_UP mode, quiet period duration in millisecond while inkPaper wait for anoter recognition before triggering the display and the call to configured callbacks.\n\t  var renderAndFireAfterTimeoutIfRequired = function renderAndFireAfterTimeoutIfRequired(model) {\n\t    if (isRecognitionModeConfigured(inkPaper, _MyScriptJSConstants2.default.RecognitionTrigger.PEN_UP) && inkPaper.options.recognitionParams.triggerCallbacksAndRenderingQuietPeriod > 0) {\n\t      return triggerRenderingAndCallbackAfterDelay(inkPaper, model);\n\t    } // else\n\t    return modelChangedCallback(inkPaper, model);\n\t  };\n\t\n\t  var mergeModelsCallback = function mergeModelsCallback(modelRecognized) {\n\t    _LoggerConfig.inkpaperLogger.debug('recognition callback', modelRecognized);\n\t    var modelRef = modelRecognized;\n\t    modelRef.state = _MyScriptJSConstants2.default.ModelState.PROCESSING_RECOGNITION_RESULT;\n\t\n\t    // Merge recognized model if relevant and return current inkPaper model\n\t    if (modelRef.creationTime === inkPaper.model.creationTime && modelRef.rawStrokes.length === inkPaper.model.rawStrokes.length && modelRef.lastRecognitionPositions.lastSentPosition >= inkPaper.model.lastRecognitionPositions.lastReceivedPosition) {\n\t      modelRef.state = _MyScriptJSConstants2.default.ModelState.RECOGNITION_OVER;\n\t      var inkPaperRef = inkPaper;\n\t      inkPaperRef.model = InkModel.mergeModels(inkPaperRef.model, modelRef);\n\t      return renderAndFireAfterTimeoutIfRequired(inkPaperRef.model);\n\t    }\n\t    return modelRef;\n\t  };\n\t\n\t  // If strokes moved in the undo redo stack then a reset is mandatory before sending strokes.\n\t  return manageResetState(inkPaper.recognizer, inkPaper.options, modelToRecognize, inkPaper.recognizerContext).then(function (managedModel) {\n\t    return inkPaper.recognizer.recognize(inkPaper.options, managedModel, inkPaper.recognizerContext).then(mergeModelsCallback).catch(function (error) {\n\t      var modelRef = managedModel;\n\t      // Handle any error from all above steps\n\t      modelRef.state = _MyScriptJSConstants2.default.ModelState.RECOGNITION_ERROR;\n\t      // TODO Manage a retry\n\t      // TODO Send different callbacks on error\n\t      modelChangedCallback(inkPaper, modelRef);\n\t      _LoggerConfig.inkpaperLogger.error('Error while firing  the recognition');\n\t      _LoggerConfig.inkpaperLogger.info(error.stack);\n\t      raiseError(error, inkPaper.domElement);\n\t    });\n\t  }).catch(function (connexionError) {\n\t    _LoggerConfig.inkpaperLogger.info('Unable to manage recognizer state', connexionError.stack);\n\t    raiseError(connexionError, inkPaper.domElement);\n\t  });\n\t}\n\t\n\t/**\n\t * Do all the stuff required to launch a timeout recognition.\n\t * @param {InkPaper} inkPaper\n\t * @param {Model} modelToRecognize\n\t * @return {Promise.<Model>}\n\t */\n\tfunction askForTimeOutRecognition(inkPaper, modelToRecognize) {\n\t  var inkPaperRef = inkPaper;\n\t  return new Promise(function (resolve) {\n\t    /* eslint-disable no-undef*/\n\t    window.clearTimeout(inkPaperRef.recotimer);\n\t    inkPaperRef.recotimer = window.setTimeout(function () {\n\t      resolve(launchRecognition(inkPaperRef, modelToRecognize));\n\t    }, inkPaperRef.options.recognitionParams.triggerRecognitionQuietPeriod);\n\t    /* eslint-enable no-undef */\n\t  });\n\t}\n\t\n\t/**\n\t * Update model in inkPaper and ask for timeout recognition if it is the mode configured.\n\t * @param {InkPaper} inkPaper\n\t * @param {Model} model\n\t * @return {Promise.<Model>}\n\t */\n\tfunction updateModelAndAskForRecognition(inkPaper, model) {\n\t  return new Promise(function (resolve) {\n\t    modelChangedCallback(inkPaper, model);\n\t    if (InkModel.extractPendingStrokes(model).length > 0 && isRecognitionModeConfigured(inkPaper, _MyScriptJSConstants2.default.RecognitionTrigger.QUIET_PERIOD)) {\n\t      resolve(askForTimeOutRecognition(inkPaper, model));\n\t    } else {\n\t      resolve(model);\n\t    }\n\t  });\n\t}\n\t\n\t/**\n\t * Inner function with all the logic on penUp.\n\t * @param {InkPaper} inkPaper\n\t * @return {Model}\n\t */\n\tfunction managePenUp(inkPaper) {\n\t  var modelRef = inkPaper.model;\n\t  modelRef.state = _MyScriptJSConstants2.default.ModelState.ASKING_FOR_RECOGNITION;\n\t  // Push model in undo redo manager\n\t  UndoRedoManager.pushModel(inkPaper.undoRedoContext, modelRef).then(function (modelClone) {\n\t    // Firing recognition only if recognizer is configure to do it\n\t    if (isRecognitionModeConfigured(inkPaper, _MyScriptJSConstants2.default.RecognitionTrigger.PEN_UP)) {\n\t      launchRecognition(inkPaper, modelClone);\n\t    } else if (isRecognitionModeConfigured(inkPaper, _MyScriptJSConstants2.default.RecognitionTrigger.QUIET_PERIOD)) {\n\t      askForTimeOutRecognition(inkPaper, modelClone);\n\t    } else {\n\t      // FIXME We may raise a error event\n\t      _LoggerConfig.inkpaperLogger.error('No valid recognition trigger configured');\n\t    }\n\t  });\n\t  return modelRef;\n\t}\n\t\n\t/**\n\t * Inner function with all the logic on resize.\n\t * @param {InkPaper} inkPaper\n\t * @return {Model}\n\t */\n\tfunction manageResize(inkPaper) {\n\t  return inkPaper.renderer.resize(inkPaper.rendererContext, inkPaper.model, inkPaper.stroker);\n\t}\n\t\n\t/**\n\t * Do all the stuff required to resize the inkPaper.\n\t * @param {InkPaper} inkPaper\n\t * @return {Promise.<Model>}\n\t */\n\tfunction askForResize(inkPaper) {\n\t  var inkPaperRef = inkPaper;\n\t  return new Promise(function (resolve) {\n\t    /* eslint-disable no-undef */\n\t    window.clearTimeout(inkPaperRef.timer);\n\t    inkPaperRef.timer = window.setTimeout(function () {\n\t      resolve(manageResize(inkPaperRef));\n\t    }, 20);\n\t    /* eslint-disable no-undef*/\n\t  });\n\t}\n\t\n\t/**\n\t * InkPaper\n\t */\n\t\n\tvar InkPaper = exports.InkPaper = function () {\n\t\n\t  /**\n\t   * @param {Element} element DOM element to attach this inkPaper\n\t   * @param {Options} [options] Configuration to apply\n\t   * @param {Styles} [customStyle] Custom style to apply\n\t   * @param {Behaviors} [behaviors] Custom behaviors to apply\n\t   */\n\t  function InkPaper(element, options, customStyle, behaviors) {\n\t    _classCallCheck(this, InkPaper);\n\t\n\t    /**\n\t     * Inner reference to the DOM Element\n\t     * @type {Element}\n\t     */\n\t    this.domElement = element;\n\t    this.domElement.classList.add('ms-ink-paper');\n\t    /**\n\t     * @private\n\t     * @type {Behaviors}\n\t     */\n\t    this.innerBehaviors = MyScriptJSBehaviors.overrideDefaultBehaviors(behaviors);\n\t    this.options = options;\n\t    this.customStyle = customStyle;\n\t\n\t    // As we are manipulating a dom element no other way to change one of it's attribute without writing an impure function\n\t    // eslint-disable-next-line no-param-reassign\n\t    this.domElement['data-myscript-ink-paper'] = this;\n\t  }\n\t\n\t  /**\n\t   * Set the recognition parameters\n\t   * WARNING : Need to fire a clear if user have already input some strokes.\n\t   * @param {Options} options\n\t   */\n\t\n\t\n\t  _createClass(InkPaper, [{\n\t    key: 'penDown',\n\t\n\t\n\t    /**\n\t     * Handle a pen down\n\t     * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n\t     */\n\t    value: function penDown(point) {\n\t      _LoggerConfig.inkpaperLogger.debug('Pen down', point);\n\t      this.model = InkModel.initPendingStroke(this.model, point, this.customStyle.strokeStyle);\n\t      this.renderer.drawCurrentStroke(this.rendererContext, this.model, this.stroker);\n\t      // Currently no recognition on pen down\n\t    }\n\t\n\t    /**\n\t     * Handle a pen move\n\t     * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n\t     */\n\t\n\t  }, {\n\t    key: 'penMove',\n\t    value: function penMove(point) {\n\t      _LoggerConfig.inkpaperLogger.debug('Pen move', point);\n\t      this.model = InkModel.appendToPendingStroke(this.model, point);\n\t      this.renderer.drawCurrentStroke(this.rendererContext, this.model, this.stroker);\n\t      // Currently no recognition on pen move\n\t    }\n\t\n\t    /**\n\t     * Handle a pen up\n\t     * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n\t     */\n\t\n\t  }, {\n\t    key: 'penUp',\n\t    value: function penUp(point) {\n\t      _LoggerConfig.inkpaperLogger.debug('Pen up', point);\n\t      this.model = InkModel.endPendingStroke(this.model, point);\n\t      this.renderer.drawModel(this.rendererContext, this.model, this.stroker);\n\t      managePenUp(this);\n\t    }\n\t\n\t    /**\n\t     * Undo the last action.\n\t     */\n\t\n\t  }, {\n\t    key: 'undo',\n\t    value: function undo() {\n\t      var _this = this;\n\t\n\t      _LoggerConfig.inkpaperLogger.debug('Undo current model', this.model);\n\t      UndoRedoManager.undo(this.undoRedoContext).then(function (model) {\n\t        return updateModelAndAskForRecognition(_this, model);\n\t      }).then(function (model) {\n\t        _this.model = InkModel.cloneModel(model);\n\t        return _this.model;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Redo the last action.\n\t     */\n\t\n\t  }, {\n\t    key: 'redo',\n\t    value: function redo() {\n\t      var _this2 = this;\n\t\n\t      _LoggerConfig.inkpaperLogger.debug('Redo current model', this.model);\n\t      UndoRedoManager.redo(this.undoRedoContext).then(function (model) {\n\t        return updateModelAndAskForRecognition(_this2, model);\n\t      }).then(function (model) {\n\t        _this2.model = InkModel.cloneModel(model);\n\t        return _this2.model;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Clear the output and the recognition result.\n\t     */\n\t\n\t  }, {\n\t    key: 'clear',\n\t    value: function clear() {\n\t      var _this3 = this;\n\t\n\t      _LoggerConfig.inkpaperLogger.debug('Clear current model', this.model);\n\t      this.recognizer.reset(this.options, this.model, this.recognizerContext).then(function (model) {\n\t        return UndoRedoManager.clear(_this3.undoRedoContext, model, _this3.options);\n\t      }).then(function (model) {\n\t        return updateModelAndAskForRecognition(_this3, model);\n\t      }).then(function (model) {\n\t        _this3.model = InkModel.cloneModel(model);\n\t        return _this3.model;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Explicitly ask to perform a recognition of input.\n\t     */\n\t\n\t  }, {\n\t    key: 'askForRecognition',\n\t    value: function askForRecognition() {\n\t      if (this.recognizer && _MyScriptJSConstants2.default.RecognitionTrigger.DEMAND in this.recognizer.getInfo().availableTriggers) {\n\t        launchRecognition(this, this.model);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Function to call when the dom element link to the current ink paper has been resize.\n\t     */\n\t\n\t  }, {\n\t    key: 'resize',\n\t    value: function resize() {\n\t      _LoggerConfig.inkpaperLogger.debug('Resizing inkPaper');\n\t      askForResize(this);\n\t    }\n\t  }, {\n\t    key: 'options',\n\t    set: function set(options) {\n\t      /** @private **/\n\t      this.innerOptions = MyScriptJSOptions.overrideDefaultOptions(options);\n\t      this.behavior = this.behaviors.getBehaviorFromOptions(this.behaviors, this.innerOptions);\n\t\n\t      /**\n\t       * Current model\n\t       * @type {Model}\n\t       */\n\t      this.model = InkModel.createModel(this.innerOptions);\n\t\n\t      /**\n\t       * Current undo/redo context\n\t       * @type {UndoRedoContext}\n\t       */\n\t      this.undoRedoContext = UndoRedoContext.createUndoRedoContext(this.innerOptions);\n\t      // Pushing the initial state in the undo redo manager\n\t      UndoRedoManager.pushModel(this.undoRedoContext, this.model).then(function (model) {\n\t        return _LoggerConfig.inkpaperLogger.debug('Model pushed for undo/redo', model);\n\t      });\n\t\n\t      modelChangedCallback(this, this.model);\n\t    }\n\t\n\t    /**\n\t     * Get the current recognition parameters\n\t     * @return {Options}\n\t     */\n\t    ,\n\t    get: function get() {\n\t      return this.innerOptions;\n\t    }\n\t\n\t    /**\n\t     * Set the custom style\n\t     * @param {Styles} customStyle\n\t     */\n\t\n\t  }, {\n\t    key: 'customStyle',\n\t    set: function set(customStyle) {\n\t      /** @private **/\n\t      this.innerCustomStyle = MyScriptJSStyles.overrideDefaultStyle(customStyle);\n\t    }\n\t\n\t    /**\n\t     * Get the current custom style\n\t     * @return {Styles}\n\t     */\n\t    ,\n\t    get: function get() {\n\t      return this.innerCustomStyle;\n\t    }\n\t\n\t    /**\n\t     * Get behaviors\n\t     * @return {Behaviors}\n\t     */\n\t\n\t  }, {\n\t    key: 'behaviors',\n\t    get: function get() {\n\t      return this.innerBehaviors;\n\t    }\n\t\n\t    /**\n\t     * @private\n\t     * @param {Behavior} behavior\n\t     */\n\t\n\t  }, {\n\t    key: 'behavior',\n\t    set: function set(behavior) {\n\t      var _this4 = this;\n\t\n\t      if (behavior) {\n\t        if (this.grabberContext) {\n\t          // Remove event handlers to avoid multiplication (detach grabber)\n\t          Object.keys(this.grabberContext).forEach(function (type) {\n\t            return _this4.domElement.removeEventListener(type, _this4.grabberContext[type], false);\n\t          });\n\t        }\n\t        /** @private **/\n\t        this.innerBehavior = behavior;\n\t        this.recognizer = this.innerBehavior.recognizer;\n\t        this.renderer = this.innerBehavior.renderer;\n\t        /**\n\t         * Current grabber context\n\t         * @type {GrabberContext}\n\t         */\n\t        this.grabberContext = this.grabber.attachEvents(this, this.domElement);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Get current behavior\n\t     * @return {Behavior}\n\t     */\n\t    ,\n\t    get: function get() {\n\t      return this.innerBehavior;\n\t    }\n\t\n\t    /**\n\t     * Set the current recognizer\n\t     * @private\n\t     * @param {Recognizer} recognizer\n\t     */\n\t\n\t  }, {\n\t    key: 'recognizer',\n\t    set: function set(recognizer) {\n\t      if (recognizer) {\n\t        if (this.innerRecognizer) {\n\t          this.innerRecognizer.close(this.options, this.model, this.recognizerContext).then(function () {\n\t            return _LoggerConfig.inkpaperLogger.info('Recognizer closed');\n\t          });\n\t        }\n\t        /** @private **/\n\t        this.innerRecognizer = recognizer;\n\t        if (this.innerRecognizer) {\n\t          /**\n\t           * Current recognition context\n\t           * @type {RecognizerContext}\n\t           */\n\t          this.recognizerContext = RecognizerContext.createEmptyRecognizerContext();\n\t          this.innerRecognizer.init(this.options, this.model, this.recognizerContext).then(function () {\n\t            return _LoggerConfig.inkpaperLogger.info('Recognizer initialized');\n\t          });\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Get current recognizer\n\t     * @return {Recognizer}\n\t     */\n\t    ,\n\t    get: function get() {\n\t      return this.innerRecognizer;\n\t    }\n\t\n\t    /**\n\t     * Set the current renderer\n\t     * @private\n\t     * @param {Renderer} renderer\n\t     */\n\t\n\t  }, {\n\t    key: 'renderer',\n\t    set: function set(renderer) {\n\t      if (renderer) {\n\t        if (this.innerRenderer) {\n\t          while (this.domElement.hasChildNodes()) {\n\t            this.domElement.removeChild(this.domElement.firstChild);\n\t          }\n\t        }\n\t        /** @private **/\n\t        this.innerRenderer = renderer;\n\t        if (this.innerRenderer) {\n\t          /**\n\t           * Current rendering context\n\t           * @type {Object}\n\t           */\n\t          this.rendererContext = this.innerRenderer.populateDomElement(this.domElement);\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Get current renderer\n\t     * @return {Renderer}\n\t     */\n\t    ,\n\t    get: function get() {\n\t      return this.innerRenderer;\n\t    }\n\t\n\t    /**\n\t     * Get current grabber\n\t     * @return {Grabber}\n\t     */\n\t\n\t  }, {\n\t    key: 'grabber',\n\t    get: function get() {\n\t      return this.behavior ? this.behavior.grabber : undefined;\n\t    }\n\t\n\t    /**\n\t     * Get current stroker\n\t     * @return {Stroker}\n\t     */\n\t\n\t  }, {\n\t    key: 'stroker',\n\t    get: function get() {\n\t      return this.behavior ? this.behavior.stroker : undefined;\n\t    }\n\t\n\t    /**\n\t     * Get current callbacks\n\t     * @return {Array}\n\t     */\n\t\n\t  }, {\n\t    key: 'callbacks',\n\t    get: function get() {\n\t      return this.behavior ? this.behavior.callbacks : undefined;\n\t    }\n\t\n\t    /**\n\t     * Get a PNG image data url from the data model\n\t     * @return {String}\n\t     */\n\t\n\t  }, {\n\t    key: 'png',\n\t    get: function get() {\n\t      return ImageRenderer.getImage(this.model, this.stroker);\n\t    }\n\t\n\t    /**\n\t     * Get statistics\n\t     * @return {Stats}\n\t     */\n\t\n\t  }, {\n\t    key: 'stats',\n\t    get: function get() {\n\t      return ModelStats.computeStats(this.model);\n\t    }\n\t  }]);\n\n\t  return InkPaper;\n\t}();\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.defaultBehaviors = undefined;\n\texports.overrideDefaultBehaviors = overrideDefaultBehaviors;\n\t\n\tvar _PointerEventGrabber = __webpack_require__(65);\n\t\n\tvar PointerEventGrabber = _interopRequireWildcard(_PointerEventGrabber);\n\t\n\tvar _CanvasRenderer = __webpack_require__(66);\n\t\n\tvar CanvasRenderer = _interopRequireWildcard(_CanvasRenderer);\n\t\n\tvar _QuadraticCanvasStroker = __webpack_require__(69);\n\t\n\tvar QuadraticCanvasStroker = _interopRequireWildcard(_QuadraticCanvasStroker);\n\t\n\tvar _Cdkv3RestTextRecognizer = __webpack_require__(5);\n\t\n\tvar Cdkv3RestTextRecognizer = _interopRequireWildcard(_Cdkv3RestTextRecognizer);\n\t\n\tvar _Cdkv3RestMathRecognizer = __webpack_require__(71);\n\t\n\tvar Cdkv3RestMathRecognizer = _interopRequireWildcard(_Cdkv3RestMathRecognizer);\n\t\n\tvar _Cdkv3RestAnalyzerRecognizer = __webpack_require__(73);\n\t\n\tvar Cdkv3RestAnalyzerRecognizer = _interopRequireWildcard(_Cdkv3RestAnalyzerRecognizer);\n\t\n\tvar _Cdkv3RestShapeRecognizer = __webpack_require__(75);\n\t\n\tvar Cdkv3RestShapeRecognizer = _interopRequireWildcard(_Cdkv3RestShapeRecognizer);\n\t\n\tvar _Cdkv3RestMusicRecognizer = __webpack_require__(77);\n\t\n\tvar Cdkv3RestMusicRecognizer = _interopRequireWildcard(_Cdkv3RestMusicRecognizer);\n\t\n\tvar _Cdkv3WSMathRecognizer = __webpack_require__(78);\n\t\n\tvar Cdkv3WSMathRecognizer = _interopRequireWildcard(_Cdkv3WSMathRecognizer);\n\t\n\tvar _Cdkv3WSTextRecognizer = __webpack_require__(82);\n\t\n\tvar Cdkv3WSTextRecognizer = _interopRequireWildcard(_Cdkv3WSTextRecognizer);\n\t\n\tvar _EventCallback = __webpack_require__(83);\n\t\n\tvar _EventCallback2 = _interopRequireDefault(_EventCallback);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Current behavior\n\t * @typedef {Object} Behavior\n\t * @property {Grabber} grabber Grabber to capture strokes\n\t * @property {Stroker} stroker Stroker to draw stroke\n\t * @property {Renderer} renderer Renderer to draw on the inkPaper\n\t * @property {Recognizer} recognizer Recognizer to call the recognition service\n\t * @property {Array} callbacks Functions to handle model changes\n\t */\n\t\n\t/**\n\t * Set of behaviors to be used by the {@link InkPaper}\n\t * @typedef {Object} Behaviors\n\t * @property {Grabber} grabber Grabber to capture strokes\n\t * @property {Array<Stroker>} strokerList List of stroker to draw stroke\n\t * @property {Array<Renderer>} rendererList List of renderer to draw on the inkPaper\n\t * @property {Array<Recognizer>} recognizerList Recognizers to call the recognition service\n\t * @property {function(behaviors: Behaviors, options: Options): Behavior} getBehaviorFromOptions Get the current behavior to use regarding the current configuration\n\t * @property {Array} callbacks Functions to handle model changes\n\t */\n\t\n\t/**\n\t * Default behaviors\n\t * @type {Behaviors}\n\t */\n\tvar defaultBehaviors = exports.defaultBehaviors = {\n\t  grabber: PointerEventGrabber,\n\t  strokerList: [QuadraticCanvasStroker],\n\t  rendererList: [CanvasRenderer],\n\t  recognizerList: [Cdkv3RestTextRecognizer, Cdkv3RestMathRecognizer, Cdkv3RestAnalyzerRecognizer, Cdkv3RestShapeRecognizer, Cdkv3RestMusicRecognizer, Cdkv3WSTextRecognizer, Cdkv3WSMathRecognizer],\n\t  callbacks: [_EventCallback2.default],\n\t  getBehaviorFromOptions: function getBehaviorFromOptions(behaviors, options) {\n\t    var behavior = {};\n\t    behavior.grabber = behaviors.grabber;\n\t    if (options) {\n\t      behavior.stroker = behaviors.strokerList.find(function (item) {\n\t        return item.getInfo().type === options.renderingParams.renderer && item.getInfo().name === options.renderingParams.stroker;\n\t      });\n\t      behavior.renderer = behaviors.rendererList.find(function (item) {\n\t        return item.getInfo().type === options.renderingParams.renderer;\n\t      });\n\t      behavior.recognizer = behaviors.recognizerList.find(function (item) {\n\t        return item.getInfo().type === options.recognitionParams.type && item.getInfo().protocol === options.recognitionParams.protocol && item.getInfo().apiVersion === options.recognitionParams.apiVersion;\n\t      });\n\t    }\n\t    behavior.callbacks = behaviors.callbacks;\n\t    return behavior;\n\t  }\n\t};\n\t\n\t/**\n\t * Generate behaviors\n\t * @param {Behaviors} behaviors Behaviors to be used\n\t * @return {Behaviors} Overridden behaviors\n\t */\n\tfunction overrideDefaultBehaviors(behaviors) {\n\t  if (behaviors) {\n\t    return {\n\t      grabber: behaviors.grabber || defaultBehaviors.grabber,\n\t      rendererList: behaviors.rendererList || defaultBehaviors.rendererList,\n\t      strokerList: behaviors.strokerList || defaultBehaviors.strokerList,\n\t      recognizerList: behaviors.recognizerList || defaultBehaviors.recognizerList,\n\t      callbacks: behaviors.callbacks || defaultBehaviors.callbacks,\n\t      getBehaviorFromOptions: behaviors.getBehaviorFromOptions || defaultBehaviors.getBehaviorFromOptions\n\t    };\n\t  }\n\t  return defaultBehaviors;\n\t}\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.attachEvents = attachEvents;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Grab penDown, penMove and penUp events\n\t * @typedef {Object} Grabber\n\t * @property {function(inkPaper: InkPaper, element: Element): GrabberContext} attachEvents Attach events and decide when to call inkPaper penDown/Move/Up methods\n\t */\n\t\n\t/**\n\t * Grabber context\n\t * @typedef {Object} GrabberContext\n\t * @property {function(event: Event)} upEvent Handling function for 'upEvent' event listener\n\t * @property {function(event: Event)} downEvent Handling function for 'downEvent' event listener\n\t * @property {function(event: Event)} moveEvent Handling function for 'moveEvent' event listener\n\t */\n\t\n\tfunction stopPropagation(event) {\n\t  event.preventDefault();\n\t  event.stopPropagation();\n\t}\n\t\n\tvar floatPrecisionArray = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000];\n\tfunction roundFloat(oneFloat, requestedFloatPrecision) {\n\t  if (requestedFloatPrecision || requestedFloatPrecision === 0) {\n\t    var floatPrecision = void 0;\n\t    if (requestedFloatPrecision > 10) {\n\t      floatPrecision = floatPrecisionArray[10];\n\t    } else {\n\t      floatPrecision = floatPrecisionArray[requestedFloatPrecision];\n\t    }\n\t    return Math.round(oneFloat * floatPrecision) / floatPrecision;\n\t  }\n\t  return oneFloat;\n\t}\n\t\n\tfunction extractPoint(event, domElement, options) {\n\t  var eventRef = event;\n\t  if (eventRef.changedTouches) {\n\t    eventRef = eventRef.changedTouches[0];\n\t  }\n\t  var rect = domElement.getBoundingClientRect();\n\t  return {\n\t    x: roundFloat(eventRef.clientX - rect.left - domElement.clientLeft, options.recognitionParams.xyFloatPrecision),\n\t    y: roundFloat(eventRef.clientY - rect.top - domElement.clientTop, options.recognitionParams.xyFloatPrecision),\n\t    t: roundFloat(eventRef.timeStamp, options.recognitionParams.timestampFloatPrecision)\n\t  };\n\t}\n\t\n\t/**\n\t * Listen for the desired events\n\t * @param {InkPaper} inkPaper InkPaper to received down/move/up events\n\t * @param {Element} element DOM element to attach events listeners\n\t * @return {GrabberContext} Grabber context\n\t * @listens {Event} pointermove: a pointer moves, similar to touchmove or mousemove.\n\t * @listens {Event} pointerdown: a pointer is activated, or a device button held.\n\t * @listens {Event} pointerup: a pointer is deactivated, or a device button released.\n\t * @listens {Event} pointerover: a pointer has moved onto an element.\n\t * @listens {Event} pointerout: a pointer is no longer on an element it once was.\n\t * @listens {Event} pointerenter: a pointer enters the bounding box of an element.\n\t * @listens {Event} pointerleave: a pointer leaves the bounding box of an element.\n\t * @listens {Event} pointercancel: a pointer will no longer generate events.\n\t */\n\tfunction attachEvents(inkPaper, element) {\n\t  _LoggerConfig.grabberLogger.debug('attaching events');\n\t\n\t  function ignoreHandler(evt) {\n\t    _LoggerConfig.grabberLogger.debug(evt.type + ' event', evt.pointerId);\n\t    stopPropagation(evt);\n\t    return false;\n\t  }\n\t\n\t  function penDownHandler(evt) {\n\t    // Trigger a penDown\n\t    _LoggerConfig.grabberLogger.debug(evt.type + ' event', evt.pointerId);\n\t    if (this.activePointerId) {\n\t      _LoggerConfig.grabberLogger.debug('Already in capture mode. No need to activate a new capture');\n\t      if (this.activePointerId === evt.pointerId) {\n\t        _LoggerConfig.grabberLogger.error('PenDown detect with the same id without any pen up');\n\t      }\n\t    } else {\n\t      this.activePointerId = evt.pointerId;\n\t      stopPropagation(evt);\n\t      inkPaper.penDown(extractPoint(evt, element, inkPaper.options));\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function penMoveHandler(evt) {\n\t    // Trigger a penMove\n\t    _LoggerConfig.grabberLogger.debug(evt.type + ' event', evt.pointerId);\n\t    // Only considering the active pointer\n\t    if (this.activePointerId && this.activePointerId === evt.pointerId) {\n\t      stopPropagation(evt);\n\t      inkPaper.penMove(extractPoint(evt, element, inkPaper.options));\n\t    } else {\n\t      _LoggerConfig.grabberLogger.debug('PenMove detect from another pointerid (' + evt.pointerId + '), active id is ' + this.activePointerId);\n\t    }\n\t    return false;\n\t  }\n\t\n\t  function penUpHandler(evt) {\n\t    // Trigger a penUp\n\t    _LoggerConfig.grabberLogger.debug(evt.type + ' event', evt.pointerId);\n\t    // Only considering the active pointer\n\t    if (this.activePointerId && this.activePointerId === evt.pointerId) {\n\t      this.activePointerId = undefined; // Managing the active pointer\n\t      stopPropagation(evt);\n\t      inkPaper.penUp(extractPoint(evt, element, inkPaper.options));\n\t    } else {\n\t      _LoggerConfig.grabberLogger.debug('PenUp detect from another pointerid (' + evt.pointerId + '), active id is ' + this.activePointerId);\n\t    }\n\t    return false;\n\t  }\n\t\n\t  var events = {};\n\t  // Disable contextmenu to prevent safari to fire pointerdown only once, and ignore pointerover\n\t  ['contextmenu', 'pointerover'].forEach(function (type) {\n\t    events[type] = ignoreHandler;\n\t  });\n\t  ['pointerdown'].forEach(function (type) {\n\t    events[type] = penDownHandler;\n\t  });\n\t  ['pointermove'].forEach(function (type) {\n\t    events[type] = penMoveHandler;\n\t  });\n\t  ['pointerup', 'pointerout', 'pointerleave', 'pointercancel'].forEach(function (type) {\n\t    events[type] = penUpHandler;\n\t  });\n\t\n\t  Object.keys(events).forEach(function (type) {\n\t    return element.addEventListener(type, events[type], false);\n\t  });\n\t\n\t  return events;\n\t}\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getInfo = getInfo;\n\texports.populateDomElement = populateDomElement;\n\texports.resize = resize;\n\texports.drawCurrentStroke = drawCurrentStroke;\n\texports.drawModel = drawModel;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _StrokeSymbolCanvasRenderer = __webpack_require__(67);\n\t\n\tvar _TextSymbolCanvasRenderer = __webpack_require__(68);\n\t\n\tvar _ShapeSymbolCanvasRenderer = __webpack_require__(51);\n\t\n\tvar _MusicSymbolCanvasRenderer = __webpack_require__(50);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t/**\n\t * Renderer info\n\t * @typedef {Object} RendererInfo\n\t * @property {String} type Renderer type.\n\t */\n\t\n\t/**\n\t * Default renderer\n\t * @typedef {Object} Renderer\n\t * @property {function(): RendererInfo} getInfo Get some information about this renderer\n\t * @property {function(element: Element): Object} populateDomElement Populate the DOM element to create rendering area.\n\t * @property {function(context: Object, model: Model, stroker: Stroker)} resize Explicitly resize the rendering area.\n\t * @property {function(context: Object, model: Model, stroker: Stroker): Model} drawCurrentStroke Draw the model currentStroke.\n\t * @property {function(context: Object, model: Model, stroker: Stroker): Model} drawModel Draw the model defaultSymbols and recognizedSymbols.\n\t */\n\t\n\t/**\n\t * Get info\n\t * @return {RendererInfo} Information about this renderer\n\t */\n\tfunction getInfo() {\n\t  return {\n\t    type: 'canvas'\n\t  };\n\t}\n\t\n\tfunction getPixelRatio(canvas) {\n\t  if (canvas) {\n\t    var context = canvas.getContext('2d');\n\t    // we are using a browser object\n\t    // eslint-disable-next-line no-undef\n\t    var devicePixelRatio = window.devicePixelRatio || 1;\n\t    var backingStoreRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n\t    return devicePixelRatio / backingStoreRatio;\n\t  }\n\t  return 1;\n\t}\n\t\n\tfunction detectPixelRatio(element) {\n\t  // we are using a browser object\n\t  // eslint-disable-next-line no-undef\n\t  var tempCanvas = document.createElement('canvas');\n\t  var canvasRatio = getPixelRatio(tempCanvas);\n\t  // document.removeChild(tempCanvas);\n\t  return canvasRatio;\n\t}\n\t\n\tfunction createCanvas(element, type) {\n\t  // eslint-disable-next-line no-undef\n\t  var browserDocument = document;\n\t  var canvas = browserDocument.createElement('canvas');\n\t  _LoggerConfig.rendererLogger.debug(element.clientWidth);\n\t  canvas.classList.add(type);\n\t  canvas.classList.add('ms-canvas');\n\t  canvas.style.width = element.clientWidth + 'px';\n\t  canvas.style.height = element.clientHeight + 'px';\n\t  element.appendChild(canvas);\n\t  return canvas;\n\t}\n\t\n\tfunction resizeCanvas(canvas, pixelRatio) {\n\t  var domElement = canvas.parentNode;\n\t  _LoggerConfig.rendererLogger.debug('Updating canvasSize ' + canvas.id + ' in ' + domElement.id);\n\t  /* eslint-disable no-param-reassign */\n\t  canvas.width = domElement.clientWidth * pixelRatio;\n\t  canvas.height = domElement.clientHeight * pixelRatio;\n\t  canvas.style.width = domElement.clientWidth + 'px';\n\t  canvas.style.height = domElement.clientHeight + 'px';\n\t  /* eslint-enable no-param-reassign */\n\t  canvas.getContext('2d').scale(pixelRatio, pixelRatio);\n\t}\n\t\n\t/**\n\t * Populate the dom element\n\t * @param {Element} element DOM element to attach the rendering elements\n\t * @return {Object} The renderer context to give as parameter when a draw model will be call\n\t */\n\tfunction populateDomElement(element) {\n\t  _LoggerConfig.rendererLogger.debug('Populate dom elements for rendering inside ' + element.id);\n\t  var pixelRatio = detectPixelRatio(element);\n\t  (0, _MusicSymbolCanvasRenderer.preloadMusicSymbols)(element);\n\t\n\t  var renderingCanvas = createCanvas(element, 'ms-rendering-canvas');\n\t  resizeCanvas(renderingCanvas, pixelRatio);\n\t  var capturingCanvas = createCanvas(element, 'ms-capture-canvas');\n\t  resizeCanvas(capturingCanvas, pixelRatio);\n\t\n\t  return {\n\t    pixelRatio: pixelRatio,\n\t    renderingCanvas: renderingCanvas,\n\t    renderingCanvasContext: renderingCanvas.getContext('2d'),\n\t    capturingCanvas: capturingCanvas,\n\t    capturingCanvasContext: capturingCanvas.getContext('2d')\n\t  };\n\t}\n\t\n\t/**\n\t * Update the rendering context size\n\t * @param {Object} context Current rendering context\n\t * @param {Model} model Current model\n\t * @param {Stroker} stroker Current stroker\n\t * @return {Model}\n\t */\n\tfunction resize(context, model, stroker) {\n\t  resizeCanvas(context.renderingCanvas, context.pixelRatio);\n\t  resizeCanvas(context.capturingCanvas, context.pixelRatio);\n\t  return this.drawModel(context, model, stroker);\n\t}\n\t\n\tfunction drawSymbol(context, symbol, stroker) {\n\t  var type = symbol.elementType ? symbol.elementType : symbol.type;\n\t  _LoggerConfig.rendererLogger.debug('Attempting to draw ' + type + ' symbol');\n\t  if (type === 'stroke') {\n\t    (0, _StrokeSymbolCanvasRenderer.drawStroke)(context, symbol, stroker);\n\t  } else if (_TextSymbolCanvasRenderer.TextSymbols[type]) {\n\t    (0, _TextSymbolCanvasRenderer.drawTextSymbol)(context, symbol);\n\t  } else if (_ShapeSymbolCanvasRenderer.ShapeSymbols[type]) {\n\t    (0, _ShapeSymbolCanvasRenderer.drawShapeSymbol)(context, symbol);\n\t  } else if (_MusicSymbolCanvasRenderer.MusicSymbols[type]) {\n\t    (0, _MusicSymbolCanvasRenderer.drawMusicSymbol)(context, symbol);\n\t  } else {\n\t    _LoggerConfig.rendererLogger.warn('Impossible to draw ' + type + ' symbol');\n\t  }\n\t}\n\t\n\t/**\n\t * Draw the current stroke from the model\n\t * @param {Object} context Current rendering context\n\t * @param {Model} model Current model\n\t * @param {Stroker} stroker Current stroker\n\t * @return {Model}\n\t */\n\tfunction drawCurrentStroke(context, model, stroker) {\n\t  // Render the current stroke\n\t  context.capturingCanvasContext.clearRect(0, 0, context.capturingCanvas.width, context.capturingCanvas.height);\n\t  _LoggerConfig.rendererLogger.debug('drawing current stroke ', model.currentStroke);\n\t  (0, _StrokeSymbolCanvasRenderer.drawStroke)(context.capturingCanvasContext, model.currentStroke, stroker);\n\t  return model;\n\t}\n\t\n\t/**\n\t * Draw all symbols contained into the model\n\t * @param {Object} context Current rendering context\n\t * @param {Model} model Current model\n\t * @param {Stroker} stroker Current stroker\n\t * @return {Model}\n\t */\n\tfunction drawModel(context, model, stroker) {\n\t  context.renderingCanvasContext.clearRect(0, 0, context.renderingCanvas.width, context.renderingCanvas.height);\n\t  // Displaying the default symbols and pending strokes\n\t  var symbols = [].concat(_toConsumableArray(model.defaultSymbols));\n\t  // Displaying the recognition symbols or raw strokes\n\t  if (model.recognizedSymbols) {\n\t    symbols.push.apply(symbols, _toConsumableArray(model.recognizedSymbols));\n\t    symbols.push.apply(symbols, _toConsumableArray(InkModel.extractPendingStrokes(model)));\n\t  } else {\n\t    symbols.push.apply(symbols, _toConsumableArray(model.rawStrokes));\n\t  }\n\t  symbols.forEach(function (symbol) {\n\t    return drawSymbol(context.renderingCanvasContext, symbol, stroker);\n\t  });\n\t  context.capturingCanvasContext.clearRect(0, 0, context.capturingCanvas.width, context.capturingCanvas.height);\n\t  return model;\n\t}\n\n/***/ },\n/* 67 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.drawStroke = drawStroke;\n\t/**\n\t * Draw a stroke symbol\n\t * @param {Object} context Current rendering context\n\t * @param {Stroke} stroke Stroke to be drawn\n\t * @param {Stroker} stroker Stroker to use to render a stroke\n\t */\n\tfunction drawStroke(context, stroke, stroker) {\n\t  if (stroker) {\n\t    stroker.drawStroke(context, stroke);\n\t  }\n\t}\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.TextSymbols = undefined;\n\texports.drawTextSymbol = drawTextSymbol;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _ShapeSymbolCanvasRenderer = __webpack_require__(51);\n\t\n\t/**\n\t * @type {{inputCharacter: String, char: String, string: String, textLine: String}}\n\t */\n\tvar TextSymbols = exports.TextSymbols = {\n\t  inputCharacter: 'inputCharacter',\n\t  char: 'char',\n\t  string: 'string',\n\t  textLine: 'textLine'\n\t};\n\t\n\tfunction drawUnderline(context, underline, label, data) {\n\t  var delta = data.width / label.length;\n\t  var p1 = {\n\t    x: data.topLeftPoint.x + underline.data.firstCharacter * delta,\n\t    y: data.topLeftPoint.y + data.height\n\t  };\n\t  var p2 = {\n\t    x: data.topLeftPoint.x + underline.data.lastCharacter * delta,\n\t    y: data.topLeftPoint.y + data.height\n\t  };\n\t  (0, _ShapeSymbolCanvasRenderer.drawLine)(context, p1, p2);\n\t}\n\t\n\tfunction drawText(context, label, data) {\n\t  var contextReference = context;\n\t  contextReference.save();\n\t  try {\n\t    contextReference.font = data.textHeight + 'px serif';\n\t    contextReference.textAlign = data.justificationType === 'CENTER' ? 'center' : 'left';\n\t    contextReference.textBaseline = 'bottom';\n\t    contextReference.fillStyle = contextReference.strokeStyle;\n\t    contextReference.fillText(label, data.topLeftPoint.x, data.topLeftPoint.y + data.height);\n\t  } finally {\n\t    contextReference.restore();\n\t  }\n\t}\n\t\n\tfunction drawTextLine(context, textLine) {\n\t  drawText(context, textLine.label, textLine.data);\n\t  textLine.underlineList.forEach(function (underline) {\n\t    drawUnderline(context, underline, textLine.label, textLine.data);\n\t  });\n\t}\n\t\n\t/**\n\t * Draw a text symbol\n\t * @param {Object} context Current rendering context\n\t * @param {Object} symbol Symbol to draw\n\t */\n\tfunction drawTextSymbol(context, symbol) {\n\t  _LoggerConfig.rendererLogger.debug('draw ' + symbol.type + ' symbol');\n\t  var contextReference = context;\n\t  contextReference.save();\n\t  try {\n\t    contextReference.lineWidth = symbol.width;\n\t    contextReference.strokeStyle = symbol.color;\n\t\n\t    if (symbol.elementType) {\n\t      switch (symbol.elementType) {\n\t        case TextSymbols.textLine:\n\t          drawTextLine(contextReference, symbol);\n\t          break;\n\t        default:\n\t          _LoggerConfig.rendererLogger.error(symbol.elementType + ' not implemented');\n\t          break;\n\t      }\n\t    } else {\n\t      switch (symbol.type) {\n\t        case TextSymbols.textLine:\n\t          drawTextLine(contextReference, symbol);\n\t          break;\n\t        default:\n\t          _LoggerConfig.rendererLogger.error(symbol.type + ' not implemented');\n\t      }\n\t    }\n\t  } finally {\n\t    contextReference.restore();\n\t  }\n\t}\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getInfo = getInfo;\n\texports.drawStroke = drawStroke;\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _QuadraticUtils = __webpack_require__(70);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Stroker info\n\t * @typedef {Object} StrokerInfo\n\t * @property {String} type Renderer type.\n\t * @property {String} name Stroker name.\n\t */\n\t\n\t/**\n\t * Define how a stroke should be drawn\n\t * @typedef {Object} Stroker\n\t * @property {function(): StrokerInfo} getInfo Get some information about this stroker\n\t * @property {function(context: Object, stroke: Stroke)} drawStroke Render a stroke on the current context.\n\t */\n\t\n\t/**\n\t * Get info\n\t * @return {StrokerInfo} Information about this stroker\n\t */\n\tfunction getInfo() {\n\t  return {\n\t    type: 'canvas',\n\t    name: 'quadratic'\n\t  };\n\t}\n\t\n\tfunction renderArc(context, center, radius) {\n\t  context.arc(center.x, center.y, radius, 0, Math.PI * 2, true);\n\t}\n\t\n\tfunction renderLine(context, begin, end, width) {\n\t  var linkPoints1 = (0, _QuadraticUtils.computeLinksPoints)(begin, (0, _QuadraticUtils.computeAxeAngle)(begin, end), width);\n\t  var linkPoints2 = (0, _QuadraticUtils.computeLinksPoints)(end, (0, _QuadraticUtils.computeAxeAngle)(begin, end), width);\n\t\n\t  context.moveTo(linkPoints1[0].x, linkPoints1[0].y);\n\t  context.lineTo(linkPoints2[0].x, linkPoints2[0].y);\n\t  context.lineTo(linkPoints2[1].x, linkPoints2[1].y);\n\t  context.lineTo(linkPoints1[1].x, linkPoints1[1].y);\n\t}\n\t\n\tfunction renderFinal(context, begin, end, width) {\n\t  var ARCSPLIT = 6;\n\t  var angle = (0, _QuadraticUtils.computeAxeAngle)(begin, end);\n\t  var linkPoints = (0, _QuadraticUtils.computeLinksPoints)(end, angle, width);\n\t  context.moveTo(linkPoints[0].x, linkPoints[0].y);\n\t  for (var i = 1; i <= ARCSPLIT; i++) {\n\t    var newAngle = angle - i * Math.PI / ARCSPLIT;\n\t    context.lineTo(end.x - end.p * width * Math.sin(newAngle), end.y + end.p * width * Math.cos(newAngle));\n\t  }\n\t}\n\t\n\tfunction renderQuadratic(context, begin, end, ctrl, width) {\n\t  var linkPoints1 = (0, _QuadraticUtils.computeLinksPoints)(begin, (0, _QuadraticUtils.computeAxeAngle)(begin, ctrl), width);\n\t  var linkPoints2 = (0, _QuadraticUtils.computeLinksPoints)(end, (0, _QuadraticUtils.computeAxeAngle)(ctrl, end), width);\n\t  var linkPoints3 = (0, _QuadraticUtils.computeLinksPoints)(ctrl, (0, _QuadraticUtils.computeAxeAngle)(begin, end), width);\n\t\n\t  context.moveTo(linkPoints1[0].x, linkPoints1[0].y);\n\t  context.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y);\n\t  context.lineTo(linkPoints2[1].x, linkPoints2[1].y);\n\t  context.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y);\n\t}\n\t\n\t/**\n\t * Draw a stroke on a canvas, using quadratics\n\t * @param {Object} context Current rendering context\n\t * @param {Stroke} stroke Current stroke to be drawn\n\t */\n\tfunction drawStroke(context, stroke) {\n\t  var contextReference = context;\n\t  var length = stroke.x.length;\n\t  var width = stroke.width > 0 ? stroke.width : contextReference.lineWidth;\n\t  var color = stroke.color ? stroke.color : contextReference.strokeStyle;\n\t  var firstPoint = StrokeComponent.getPointByIndex(stroke, 0);\n\t  var nbquadratics = length - 2;\n\t\n\t  contextReference.save();\n\t  try {\n\t    contextReference.beginPath();\n\t    if (length < 3) {\n\t      renderArc(contextReference, firstPoint, width * 0.6);\n\t    } else {\n\t      renderArc(contextReference, firstPoint, width * firstPoint.p);\n\t      renderLine(contextReference, firstPoint, (0, _QuadraticUtils.computeMiddlePoint)(firstPoint, StrokeComponent.getPointByIndex(stroke, 1)), width);\n\t\n\t      // Possibility to try this (the start looks better when the ink is large)\n\t      // var first = computeMiddlePoint(stroke[0], stroke[1]);\n\t      // contextReference.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\t\n\t      for (var i = 0; i < nbquadratics; i++) {\n\t        renderQuadratic(contextReference, (0, _QuadraticUtils.computeMiddlePoint)(StrokeComponent.getPointByIndex(stroke, i), StrokeComponent.getPointByIndex(stroke, i + 1)), (0, _QuadraticUtils.computeMiddlePoint)(StrokeComponent.getPointByIndex(stroke, i + 1), StrokeComponent.getPointByIndex(stroke, i + 2)), StrokeComponent.getPointByIndex(stroke, i + 1), width);\n\t      }\n\t      renderLine(contextReference, (0, _QuadraticUtils.computeMiddlePoint)(StrokeComponent.getPointByIndex(stroke, length - 2), StrokeComponent.getPointByIndex(stroke, length - 1)), StrokeComponent.getPointByIndex(stroke, length - 1), width);\n\t      renderFinal(contextReference, StrokeComponent.getPointByIndex(stroke, length - 2), StrokeComponent.getPointByIndex(stroke, length - 1), width);\n\t    }\n\t    contextReference.closePath();\n\t    if (color !== undefined) {\n\t      contextReference.fillStyle = color;\n\t      contextReference.fill();\n\t    }\n\t  } finally {\n\t    contextReference.restore();\n\t  }\n\t}\n\n/***/ },\n/* 70 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.computeLinksPoints = computeLinksPoints;\n\texports.computeMiddlePoint = computeMiddlePoint;\n\texports.computeAxeAngle = computeAxeAngle;\n\t/** ===============================================================================================\n\t * Compute quadratics control points\n\t * ============================================================================================= */\n\t\n\t/**\n\t *\n\t * @param {{x: Number, y: Number, p: Number}} point\n\t * @param angle\n\t * @param width\n\t * @return {[{x: Number, y: Number},{x: Number, y: Number}]}\n\t */\n\tfunction computeLinksPoints(point, angle, width) {\n\t  var radius = point.p * width;\n\t  return [{\n\t    x: point.x - Math.sin(angle) * radius,\n\t    y: point.y + Math.cos(angle) * radius\n\t  }, {\n\t    x: point.x + Math.sin(angle) * radius,\n\t    y: point.y - Math.cos(angle) * radius\n\t  }];\n\t}\n\t\n\t/**\n\t *\n\t * @param {{x: Number, y: Number, p: Number}} point1\n\t * @param {{x: Number, y: Number, p: Number}} point2\n\t * @return {{x: Number, y: Number, p: Number}}\n\t */\n\tfunction computeMiddlePoint(point1, point2) {\n\t  return {\n\t    x: (point2.x + point1.x) / 2,\n\t    y: (point2.y + point1.y) / 2,\n\t    p: (point2.p + point1.p) / 2\n\t  };\n\t}\n\t\n\t/**\n\t *\n\t * @param {{x: Number, y: Number}} begin\n\t * @param {{x: Number, y: Number}} end\n\t * @return {Number}\n\t */\n\tfunction computeAxeAngle(begin, end) {\n\t  return Math.atan2(end.y - begin.y, end.x - begin.x);\n\t}\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mathRestV3Configuration = exports.close = exports.init = undefined;\n\t\n\tvar _DefaultRecognizer = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'init', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.init;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.recognize = recognize;\n\texports.reset = reset;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar _Cdkv3CommonRestRecognizer = __webpack_require__(47);\n\t\n\tvar _Cdkv3CommonMathRecognizer = __webpack_require__(72);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar mathRestV3Configuration = exports.mathRestV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.MATH,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.REST,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, _Cdkv3CommonRestRecognizer.commonRestV3Configuration, mathRestV3Configuration);\n\t}\n\t\n\tfunction buildInput(options, model, instanceId) {\n\t  var input = {\n\t    // As Rest MATH recognition is non incremental we add the already recognized strokes\n\t    components: model.rawStrokes.map(function (stroke) {\n\t      return StrokeComponent.toJSON(stroke);\n\t    })\n\t  };\n\t  Object.assign(input, options.recognitionParams.mathParameter); // Building the input with the suitable parameters\n\t\n\t  _LoggerConfig.recognizerLogger.debug('input.components size is ' + input.components.length);\n\t\n\t  var data = {\n\t    instanceId: instanceId,\n\t    applicationKey: options.recognitionParams.server.applicationKey,\n\t    mathInput: JSON.stringify(input)\n\t  };\n\t\n\t  if (options.recognitionParams.server.hmacKey) {\n\t    data.hmac = CryptoHelper.computeHmac(data.mathInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  var modelReference = model;\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  var data = buildInput(options, model, recognizerContextReference.mathInstanceId);\n\t  (0, _RecognizerContext.updateSentRecognitionPositions)(recognizerContextReference, modelReference);\n\t  return NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/math/doSimpleRecognition.json', data).then(\n\t  // logResponseOnSuccess\n\t  function (response) {\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestMathRecognizer success', response);\n\t    recognizerContextReference.mathInstanceId = response.instanceId;\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestMathRecognizer update model', response);\n\t    modelReference.rawResult = response;\n\t    modelReference.rawResult.type = mathRestV3Configuration.type.toLowerCase() + 'Result';\n\t    return modelReference;\n\t  }).then(_Cdkv3CommonMathRecognizer.processRenderingResult).then(_Cdkv3CommonRestRecognizer.updateModelReceivedPosition);\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  (0, _RecognizerContext.resetRecognitionPositions)(recognizerContext, model);\n\t  // We are explicitly manipulating a reference here.\n\t  // eslint-disable-next-line no-param-reassign\n\t  delete recognizerContext.mathInstanceId;\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\texports.processRenderingResult = processRenderingResult;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction extractRecognizedSymbolsFromMathResult(model) {\n\t  // We recopy the recognized strokes to flag them as toBeRemove if they are scratched out or map with a symbol\n\t  var strokeList = [].concat(_toConsumableArray(model.rawStrokes));\n\t\n\t  var result = model.rawResult.result;\n\t  if (result && result.scratchOutResults && result.scratchOutResults.length > 0) {\n\t    var _ret = function () {\n\t      var inkRanges = result.scratchOutResults.map(function (scratchOutResult) {\n\t        return scratchOutResult.erasedInkRanges.concat(scratchOutResult.inkRanges);\n\t      }).reduce(function (a, b) {\n\t        return a.concat(b);\n\t      });\n\t      return {\n\t        v: strokeList.filter(function (stroke, index) {\n\t          return !inkRanges.find(function (inkRange) {\n\t            return inkRange.component === index;\n\t          });\n\t        })\n\t      };\n\t    }();\n\t\n\t    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t  }\n\t  return strokeList;\n\t}\n\t\n\t/**\n\t * Enrich the model with recognized symbols\n\t * @param {Model} model Current model\n\t * @return {Model} Updated model\n\t */\n\tfunction processRenderingResult(model) {\n\t  var modelReference = model;\n\t  _LoggerConfig.recognizerLogger.debug('Building the rendering model', modelReference);\n\t  modelReference.recognizedSymbols = extractRecognizedSymbolsFromMathResult(model);\n\t  return modelReference;\n\t}\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.analyzerRestV3Configuration = exports.close = exports.init = undefined;\n\t\n\tvar _DefaultRecognizer = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'init', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.init;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.recognize = recognize;\n\texports.reset = reset;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar _Cdkv3CommonRestRecognizer = __webpack_require__(47);\n\t\n\tvar _Cdkv3CommonShapeRecognizer = __webpack_require__(74);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } // Configuring recognition trigger\n\t\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar analyzerRestV3Configuration = exports.analyzerRestV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.ANALYZER,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.REST,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, _Cdkv3CommonRestRecognizer.commonRestV3Configuration, analyzerRestV3Configuration);\n\t}\n\t\n\tfunction buildInput(options, model, instanceId) {\n\t  var input = {\n\t    // Incremental\n\t    components: model.rawStrokes.map(function (stroke) {\n\t      return StrokeComponent.toJSON(stroke);\n\t    })\n\t  };\n\t  Object.assign(input, { parameter: options.recognitionParams.analyzerParameter }); // Building the input with the suitable parameters\n\t\n\t  _LoggerConfig.recognizerLogger.debug('input.components size is ' + input.components.length);\n\t\n\t  var data = {\n\t    instanceId: instanceId,\n\t    applicationKey: options.recognitionParams.server.applicationKey,\n\t    analyzerInput: JSON.stringify(input)\n\t  };\n\t\n\t  if (options.recognitionParams.server.hmacKey) {\n\t    data.hmac = CryptoHelper.computeHmac(data.analyzerInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n\t  }\n\t  return data;\n\t}\n\t\n\tfunction extractSymbols(model, element) {\n\t  var style = (0, _Cdkv3CommonShapeRecognizer.getStyleFromInkRanges)(model, element.inkRanges);\n\t  switch (element.elementType) {\n\t    case 'table':\n\t      return element.lines.map(function (line) {\n\t        return Object.assign(line, style);\n\t      });\n\t    case 'textLine':\n\t      return [element].map(function (textLine) {\n\t        return Object.assign(textLine, textLine.result.textSegmentResult.candidates[textLine.result.textSegmentResult.selectedCandidateIdx], style);\n\t      });\n\t    case 'shape':\n\t      return (0, _Cdkv3CommonShapeRecognizer.extractShapeSymbols)(model, element).map(function (primitive) {\n\t        return Object.assign(primitive, style);\n\t      });\n\t    default:\n\t      return [];\n\t  }\n\t}\n\t\n\tfunction extractRecognizedSymbolsFromAnalyzerResult(model) {\n\t  var result = model.rawResult.result;\n\t  if (result) {\n\t    return [].concat(_toConsumableArray(result.shapes), _toConsumableArray(result.tables), _toConsumableArray(result.textLines)).map(function (element) {\n\t      return extractSymbols(model, element);\n\t    }).reduce(function (a, b) {\n\t      return a.concat(b);\n\t    });\n\t  }\n\t  return [];\n\t}\n\t\n\t/**\n\t * Enrich the model with recognized symbols\n\t * @param {Model} model Current model\n\t * @return {Model} Updated model\n\t */\n\tfunction processRenderingResult(model) {\n\t  var modelReference = model;\n\t  _LoggerConfig.recognizerLogger.debug('Building the rendering model', modelReference);\n\t  modelReference.recognizedSymbols = extractRecognizedSymbolsFromAnalyzerResult(model);\n\t  return modelReference;\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  var modelReference = model;\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  var data = buildInput(options, model, recognizerContextReference.analyzerInstanceId);\n\t  (0, _RecognizerContext.updateSentRecognitionPositions)(recognizerContextReference, modelReference);\n\t  return NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/analyzer/doSimpleRecognition.json', data).then(\n\t  // logResponseOnSuccess\n\t  function (response) {\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestAnalyzerRecognizer success', response);\n\t    // memorizeInstanceId\n\t    recognizerContextReference.analyzerInstanceId = response.instanceId;\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestAnalyzerRecognizer update model', response);\n\t    modelReference.rawResult = response;\n\t    modelReference.rawResult.type = analyzerRestV3Configuration.type.toLowerCase() + 'Result';\n\t    return modelReference;\n\t  }).then(processRenderingResult).then(_Cdkv3CommonRestRecognizer.updateModelReceivedPosition);\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  (0, _RecognizerContext.resetRecognitionPositions)(recognizerContext, model);\n\t  // We are explicitly manipulating a reference here.\n\t  // eslint-disable-next-line no-param-reassign\n\t  delete recognizerContext.analyzerInstanceId;\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getStyleFromInkRanges = getStyleFromInkRanges;\n\texports.extractShapeSymbols = extractShapeSymbols;\n\texports.processRenderingResult = processRenderingResult;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Get style for the strokes matching the ink ranges\n\t * @param {Model} model\n\t * @param {Array<Object>} inkRanges\n\t * @return {{color: String, width: Number}} Style to apply\n\t */\n\tfunction getStyleFromInkRanges(model, inkRanges) {\n\t  var strokes = model.rawStrokes;\n\t  if (inkRanges && inkRanges.length > 0) {\n\t    strokes = inkRanges.map(function (inkRange) {\n\t      return InkModel.extractStrokesFromInkRange(model, inkRange.stroke ? inkRange.stroke : inkRange.firstStroke, inkRange.stroke ? inkRange.stroke : inkRange.lastStroke, inkRange.firstPoint, inkRange.lastPoint);\n\t    }).reduce(function (a, b) {\n\t      return a.concat(b);\n\t    });\n\t  }\n\t  // FIXME hack to apply the rendering param of the first element' stroke\n\t  return {\n\t    color: strokes[0].color,\n\t    width: strokes[0].width\n\t  };\n\t}\n\t\n\t/**\n\t * Extract recognized symbols from recognition output\n\t * @param {Model} model Current model\n\t * @param {Object} segment Shape recognition output\n\t * @return {Array<Object>} Recognized symbols\n\t */\n\tfunction extractShapeSymbols(model, segment) {\n\t  if (segment.candidates && segment.candidates.length > 0) {\n\t    var selectedCandidate = segment.candidates[segment.selectedCandidateIndex];\n\t    switch (selectedCandidate.type) {\n\t      case 'notRecognized':\n\t        if (segment.inkRanges && segment.inkRanges.length > 0) {\n\t          return segment.inkRanges.map(function (inkRange) {\n\t            return InkModel.extractStrokesFromInkRange(model, inkRange.firstStroke, inkRange.lastStroke, inkRange.firstPoint, inkRange.lastPoint);\n\t          }).reduce(function (a, b) {\n\t            return a.concat(b);\n\t          });\n\t        }\n\t        return [];\n\t      case 'recognizedShape':\n\t        return selectedCandidate.primitives;\n\t      default:\n\t        return [];\n\t    }\n\t  }\n\t  return [];\n\t}\n\t\n\tfunction extractRecognizedSymbolsFromShapeResult(model) {\n\t  var result = model.rawResult.result;\n\t  if (result && result.segments) {\n\t    return result.segments.map(function (segment) {\n\t      var style = getStyleFromInkRanges(model, segment.inkRanges);\n\t      return extractShapeSymbols(model, segment).map(function (primitive) {\n\t        return Object.assign(primitive, style);\n\t      });\n\t    }).reduce(function (a, b) {\n\t      return a.concat(b);\n\t    });\n\t  }\n\t  return [];\n\t}\n\t\n\t/**\n\t * Enrich the model with recognized symbols\n\t * @param {Model} model Current model\n\t * @return {Model} Updated model\n\t */\n\tfunction processRenderingResult(model) {\n\t  var modelReference = model;\n\t  _LoggerConfig.recognizerLogger.debug('Building the rendering model', modelReference);\n\t  modelReference.recognizedSymbols = extractRecognizedSymbolsFromShapeResult(model);\n\t  return modelReference;\n\t}\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.shapeRestV3Configuration = exports.init = undefined;\n\t\n\tvar _DefaultRecognizer = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'init', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.init;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.recognize = recognize;\n\texports.reset = reset;\n\texports.close = close;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tvar _PromiseHelper = __webpack_require__(76);\n\t\n\tvar PromiseHelper = _interopRequireWildcard(_PromiseHelper);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar _Cdkv3CommonRestRecognizer = __webpack_require__(47);\n\t\n\tvar _Cdkv3CommonShapeRecognizer = __webpack_require__(74);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar shapeRestV3Configuration = exports.shapeRestV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.SHAPE,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.REST,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, _Cdkv3CommonRestRecognizer.commonRestV3Configuration, shapeRestV3Configuration);\n\t}\n\t\n\tfunction buildInput(options, model, instanceId) {\n\t  var input = {\n\t    components: InkModel.extractPendingStrokes(model).map(function (stroke) {\n\t      return StrokeComponent.toJSON(stroke);\n\t    })\n\t  };\n\t  Object.assign(input, options.recognitionParams.shapeParameter); // Building the input with the suitable parameters\n\t\n\t  _LoggerConfig.recognizerLogger.debug('input.components size is ' + input.components.length);\n\t\n\t  var data = {\n\t    instanceId: instanceId,\n\t    applicationKey: options.recognitionParams.server.applicationKey,\n\t    shapeInput: JSON.stringify(input)\n\t  };\n\t\n\t  if (options.recognitionParams.server.hmacKey) {\n\t    data.hmac = CryptoHelper.computeHmac(data.shapeInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  var modelReference = model;\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  var data = buildInput(options, model, recognizerContextReference.shapeInstanceId);\n\t  (0, _RecognizerContext.updateSentRecognitionPositions)(recognizerContextReference, modelReference);\n\t  return NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/shape/doSimpleRecognition.json', data).then(\n\t  // logResponseOnSuccess\n\t  function (response) {\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestShapeRecognizer success', response);\n\t    recognizerContextReference.shapeInstanceId = response.instanceId;\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestShapeRecognizer update model', response);\n\t    modelReference.rawResult = response;\n\t    modelReference.rawResult.type = shapeRestV3Configuration.type.toLowerCase() + 'Result';\n\t    return modelReference;\n\t  }).then(_Cdkv3CommonShapeRecognizer.processRenderingResult).then(_Cdkv3CommonRestRecognizer.updateModelReceivedPosition);\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  var recognizerContextReference = recognizerContext;\n\t  var ret = PromiseHelper.destructurePromise();\n\t\n\t  if (recognizerContextReference && recognizerContextReference.shapeInstanceId) {\n\t    var data = {\n\t      instanceSessionId: recognizerContextReference.shapeInstanceId\n\t    };\n\t    NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/shape/clearSessionId.json', data).then(ret.resolve);\n\t    delete recognizerContextReference.shapeInstanceId;\n\t  }\n\t  return ret.promise.then(function (res) {\n\t    var modelRef = model;\n\t    (0, _RecognizerContext.resetRecognitionPositions)(recognizerContext, modelRef);\n\t    modelRef.rawResult = res;\n\t    return modelRef;\n\t  });\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction close(options, model, recognizerContext) {\n\t  return reset(options, model, recognizerContext);\n\t}\n\n/***/ },\n/* 76 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.destructurePromise = destructurePromise;\n\t/**\n\t * @typedef {Object} DestructuredPromise\n\t * @property {Promise} promise\n\t * @property {function(value: Object)} resolve\n\t * @property {function(reason: Object)} reject\n\t */\n\t\n\t/**\n\t * @return {DestructuredPromise}\n\t */\n\tfunction destructurePromise() {\n\t  var resolve = void 0;\n\t  var reject = void 0;\n\t  var initPromise = new Promise(function (resolveParam, rejectParam) {\n\t    resolve = resolveParam;\n\t    reject = rejectParam;\n\t  });\n\t  return { promise: initPromise, resolve: resolve, reject: reject };\n\t}\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.musicRestV3Configuration = exports.close = exports.init = undefined;\n\t\n\tvar _DefaultRecognizer = __webpack_require__(6);\n\t\n\tObject.defineProperty(exports, 'init', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.init;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _DefaultRecognizer.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.recognize = recognize;\n\texports.reset = reset;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar _Cdkv3CommonRestRecognizer = __webpack_require__(47);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar musicRestV3Configuration = exports.musicRestV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.MUSIC,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.REST,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, _Cdkv3CommonRestRecognizer.commonRestV3Configuration, musicRestV3Configuration);\n\t}\n\t\n\tfunction buildInput(options, model, instanceId) {\n\t  var input = {\n\t    // As Rest MUSIC recognition is non incremental wa add the already recognized strokes\n\t    components: [].concat(model.defaultSymbols, model.rawStrokes).filter(function (symbol) {\n\t      return symbol.type !== 'staff';\n\t    }).map(function (symbol) {\n\t      if (symbol.type === 'stroke') {\n\t        return StrokeComponent.toJSON(symbol);\n\t      }\n\t      return symbol;\n\t    })\n\t  };\n\t  var musicParameter = Object.assign({}, options.recognitionParams.musicParameter);\n\t  delete musicParameter.clef; // FIXME find a way to avoid this ugly hack\n\t  Object.assign(input, musicParameter); // Building the input with the suitable parameters\n\t\n\t  _LoggerConfig.recognizerLogger.debug('input.components size is ' + input.components.length);\n\t\n\t  var data = {\n\t    instanceId: instanceId,\n\t    applicationKey: options.recognitionParams.server.applicationKey,\n\t    musicInput: JSON.stringify(input)\n\t  };\n\t\n\t  if (options.recognitionParams.server.hmacKey) {\n\t    data.hmac = CryptoHelper.computeHmac(data.musicInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Enrich the model with recognized symbols\n\t * @param {Model} model Current model\n\t * @return {Model} Updated model\n\t */\n\tfunction processRenderingResult(model) {\n\t  _LoggerConfig.recognizerLogger.debug('Building the rendering model', model);\n\t  return model;\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  var modelReference = model;\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  var data = buildInput(options, model, recognizerContextReference.musicInstanceId);\n\t  (0, _RecognizerContext.updateSentRecognitionPositions)(recognizerContextReference, modelReference);\n\t  return NetworkInterface.post(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/music/doSimpleRecognition.json', data).then(function (response) {\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestMusicRecognizer success', response);\n\t    recognizerContextReference.musicInstanceId = response.instanceId;\n\t    _LoggerConfig.recognizerLogger.debug('Cdkv3RestMusicRecognizer update model', response);\n\t    modelReference.rawResult = response;\n\t    modelReference.rawResult.type = musicRestV3Configuration.type.toLowerCase() + 'Result';\n\t    return modelReference;\n\t  }).then(processRenderingResult).then(_Cdkv3CommonRestRecognizer.updateModelReceivedPosition);\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  (0, _RecognizerContext.resetRecognitionPositions)(recognizerContext, model);\n\t  // We are explicitly manipulating a reference here.\n\t  // eslint-disable-next-line no-param-reassign\n\t  delete recognizerContext.musicInstanceId;\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mathWebSocketV3Configuration = exports.close = exports.reset = undefined;\n\t\n\tvar _Cdkv3WSRecognizerUtil = __webpack_require__(79);\n\t\n\tObject.defineProperty(exports, 'reset', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _Cdkv3WSRecognizerUtil.reset;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _Cdkv3WSRecognizerUtil.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.init = init;\n\texports.recognize = recognize;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar Cdkv3WSRecognizerUtil = _interopRequireWildcard(_Cdkv3WSRecognizerUtil);\n\t\n\tvar _Cdkv3CommonMathRecognizer = __webpack_require__(72);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar mathWebSocketV3Configuration = exports.mathWebSocketV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.MATH,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.WEBSOCKET,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, Cdkv3WSRecognizerUtil.commonWebSocketV3Configuration, mathWebSocketV3Configuration);\n\t}\n\t\n\tfunction buildMathInput(recognizerContext, model, options) {\n\t  if (recognizerContext.lastRecognitionPositions.lastSentPosition < 0) {\n\t    return {\n\t      type: 'start',\n\t      parameters: options.recognitionParams.mathParameter,\n\t      components: model.rawStrokes.map(function (stroke) {\n\t        return StrokeComponent.toJSON(stroke);\n\t      })\n\t    };\n\t  }\n\t\n\t  return {\n\t    type: 'continue',\n\t    components: InkModel.extractPendingStrokes(model, -1).map(function (stroke) {\n\t      return StrokeComponent.toJSON(stroke);\n\t    })\n\t  };\n\t}\n\t\n\t/**\n\t * Initialize recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Fulfilled when the init phase is over.\n\t */\n\tfunction init(options, model, recognizerContext) {\n\t  var suffixUrl = '/api/v3.0/recognition/ws/math';\n\t  return Cdkv3WSRecognizerUtil.init(suffixUrl, options, model, recognizerContext);\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  return Cdkv3WSRecognizerUtil.recognize(options, recognizerContext, model, buildMathInput).then(_Cdkv3CommonMathRecognizer.processRenderingResult).then(Cdkv3WSRecognizerUtil.updateModelReceivedPosition);\n\t}\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.commonWebSocketV3Configuration = undefined;\n\texports.updateModelReceivedPosition = updateModelReceivedPosition;\n\texports.init = init;\n\texports.reset = reset;\n\texports.recognize = recognize;\n\texports.close = close;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _networkWSInterface = __webpack_require__(80);\n\t\n\tvar NetworkWSInterface = _interopRequireWildcard(_networkWSInterface);\n\t\n\tvar _Cdkv3WSBuilder = __webpack_require__(81);\n\t\n\tvar Cdkv3WSWebsocketBuilder = _interopRequireWildcard(_Cdkv3WSBuilder);\n\t\n\tvar _PromiseHelper = __webpack_require__(76);\n\t\n\tvar PromiseHelper = _interopRequireWildcard(_PromiseHelper);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar RecognizerContext = _interopRequireWildcard(_RecognizerContext);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Common configuration\n\t * @type {{availableTriggers: Array<String>, preferredTrigger: String}}\n\t */\n\tvar commonWebSocketV3Configuration = exports.commonWebSocketV3Configuration = {\n\t  availableTriggers: [_MyScriptJSConstants2.default.RecognitionTrigger.PEN_UP],\n\t  preferredTrigger: _MyScriptJSConstants2.default.RecognitionTrigger.PEN_UP\n\t};\n\t\n\tfunction buildUrl(options, suffixUrl) {\n\t  var scheme = options.recognitionParams.server.scheme === 'https' ? 'wss' : 'ws';\n\t  return scheme + '://' + options.recognitionParams.server.host + suffixUrl;\n\t}\n\t\n\t/**\n\t * Update model lastReceivedPosition regarding to lastSentPosition\n\t * @param {Model} model\n\t * @return {Model}\n\t */\n\tfunction updateModelReceivedPosition(model) {\n\t  var modelReference = model;\n\t  modelReference.lastRecognitionPositions.lastReceivedPosition = modelReference.lastRecognitionPositions.lastSentPosition;\n\t  return modelReference;\n\t}\n\t\n\t/**\n\t * Init the websocket recognizer.\n\t * Open the connexion and proceed to the hmac challenge.\n\t * A recognizer context is build as such :\n\t * @param {String} suffixUrl\n\t * @param {Options} options\n\t * @param {Model} model\n\t * @param {RecognizerContext} recognizerContext\n\t * @return {Promise.<Model>} Fulfilled when the init phase is over.\n\t */\n\tfunction init(suffixUrl, options, model, recognizerContext) {\n\t  var recognizerContextReference = recognizerContext;\n\t  recognizerContextReference.suffixUrl = suffixUrl;\n\t  recognizerContextReference.options = options;\n\t  var url = buildUrl(options, suffixUrl);\n\t  var destructuredInitPromise = PromiseHelper.destructurePromise();\n\t\n\t  _LoggerConfig.recognizerLogger.debug('Opening the websocket for context ', recognizerContextReference);\n\t  var initCallback = Cdkv3WSWebsocketBuilder.buildWebSocketCallback(destructuredInitPromise, recognizerContextReference, options);\n\t  recognizerContextReference.url = url;\n\t  recognizerContextReference.callback = initCallback;\n\t  recognizerContextReference.options = options;\n\t  recognizerContextReference.currentReconnectionCount = 0;\n\t  recognizerContextReference.websocket = NetworkWSInterface.openWebSocket(recognizerContextReference);\n\t  recognizerContextReference.recognitionContexts = [];\n\t\n\t  // Feeding the recognitionContext\n\t  recognizerContextReference.initPromise = destructuredInitPromise.promise;\n\t\n\t  return recognizerContextReference.initPromise.then(function (value) {\n\t    return _LoggerConfig.recognizerLogger.debug('Init over ' + value);\n\t  }).then(function () {\n\t    return model;\n\t  }).catch(function (error) {\n\t    return _LoggerConfig.recognizerLogger.error('fatal error while loading recognizer');\n\t  });\n\t}\n\t\n\tfunction send(recognizerContext, recognitionContext) {\n\t  var recognizerContextReference = recognizerContext;\n\t  var recognitionContextReference = recognitionContext;\n\t\n\t  _LoggerConfig.recognizerLogger.debug('Recognizer is alive. Sending last stroke');\n\t  recognizerContextReference.recognitionContexts.push(recognitionContextReference);\n\t  try {\n\t    NetworkWSInterface.send(recognizerContextReference, recognitionContext.buildInputFunction(recognizerContextReference, recognitionContextReference.model, recognitionContextReference.options));\n\t    RecognizerContext.updateSentRecognitionPositions(recognizerContextReference, recognitionContextReference.model);\n\t  } catch (sendException) {\n\t    if (RecognizerContext.shouldAttemptImmediateReconnect(recognizerContextReference)) {\n\t      init(recognizerContextReference.suffixUrl, recognizerContextReference.options, recognizerContextReference.model, recognizerContextReference).then(function () {\n\t        _LoggerConfig.recognizerLogger.info('Attempting a retry', recognizerContextReference.currentReconnectionCount);\n\t        recognizerContextReference.lastRecognitionPositions.lastSentPosition = -1;\n\t        send(recognizerContextReference, recognitionContext);\n\t      });\n\t    } else {\n\t      throw RecognizerContext.LOST_CONNEXION_MESSAGE;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Do what is needed to clean the server context.\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction reset(options, model, recognizerContext) {\n\t  var recognizerContextReference = recognizerContext;\n\t  RecognizerContext.resetRecognitionPositions(recognizerContext, model);\n\t  if (recognizerContextReference && recognizerContextReference.websocket) {\n\t    // We have to send again all strokes after a reset.\n\t    delete recognizerContextReference.instanceId;\n\t    try {\n\t      NetworkWSInterface.send(recognizerContextReference, { type: 'reset' });\n\t    } catch (sendFailedException) {\n\t      // To force failure without breaking the flow\n\t      Cdkv3WSWebsocketBuilder.buildWebSocketCallback(PromiseHelper.destructurePromise(), recognizerContextReference, options);\n\t    }\n\t  }\n\t  // We do not keep track of the success of reset.\n\t  return Promise.resolve(model);\n\t}\n\t\n\t/**\n\t * @param {Options} options\n\t * @param {RecognizerContext} recognizerContext\n\t * @param {Model} model\n\t * @param {function(recognizerContext: RecognizerContext, model: Model, options: Options): Object} buildInputFunction\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, recognizerContext, model, buildInputFunction) {\n\t  var destructuredRecognitionPromise = PromiseHelper.destructurePromise();\n\t  var recognizerContextReference = recognizerContext;\n\t\n\t  // Building an object with all mandatory fields to feed the recognition queue.\n\t  var recognitionContext = {\n\t    buildInputFunction: buildInputFunction,\n\t    model: model,\n\t    options: options,\n\t    recognitionPromiseCallbacks: destructuredRecognitionPromise\n\t  };\n\t\n\t  recognizerContextReference.initPromise.then(function () {\n\t    _LoggerConfig.recognizerLogger.debug('Init was done feeding the recognition queue');\n\t    try {\n\t      send(recognizerContextReference, recognitionContext);\n\t    } catch (recognitionError) {\n\t      _LoggerConfig.recognizerLogger.info('Unable to process recognition');\n\t      recognitionContext.recognitionPromiseCallbacks.reject(recognitionError);\n\t    }\n\t  }, /* rejection */function () {\n\t    // TODO Manage this error\n\t    _LoggerConfig.recognizerLogger.info('Unable to init');\n\t    recognitionContext.recognitionPromiseCallbacks.reject('Unable to init');\n\t  });\n\t\n\t  return destructuredRecognitionPromise.promise;\n\t}\n\t\n\t/**\n\t * Close and free all resources that will no longer be used by the recognizer.\n\t * @param {Options} options\n\t * @param {Model} model\n\t * @param {RecognizerContext} recognizerContext\n\t * @return {Promise.<Model>}\n\t */\n\tfunction close(options, model, recognizerContext) {\n\t  if (recognizerContext && recognizerContext.websocket) {\n\t    NetworkWSInterface.close(recognizerContext.websocket, 1000, 'CLOSE BY USER');\n\t  }\n\t  return Promise.resolve(model);\n\t}\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.close = close;\n\texports.openWebSocket = openWebSocket;\n\texports.send = send;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _RecognizerContext = __webpack_require__(46);\n\t\n\tvar RecognizerContext = _interopRequireWildcard(_RecognizerContext);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Close the websocket\n\t * @param {WebSocket} websocket Current WebSocket\n\t * @param {Number} code Exit code\n\t * @param {String} reason Exit reason\n\t */\n\tfunction close(websocket, code, reason) {\n\t  if (websocket && websocket.readyState < 2) {\n\t    websocket.close(code, reason);\n\t  }\n\t}\n\t\n\tfunction infinitPing(websocket) {\n\t  var websocketRef = websocket;\n\t  websocketRef.pingCount++;\n\t  if (websocketRef.pingCount > websocketRef.maxPingLost) {\n\t    websocket.close(1000, 'PING_LOST');\n\t  } else if (websocketRef.readyState <= 1) {\n\t    setTimeout(function () {\n\t      websocketRef.send(JSON.stringify({ type: 'ping' }));\n\t      infinitPing(websocketRef);\n\t    }, websocketRef.pingIntervalMillis);\n\t  }\n\t}\n\t\n\t/**\n\t * Attach all socket attributes helping managing server connexion\n\t * @param {WebSocket} websocket Current WebSocket\n\t * @param {RecognizerContext} recognizerContext\n\t */\n\tfunction addWebsocketAttributes(websocket, recognizerContext) {\n\t  var socket = websocket;\n\t  socket.start = new Date();\n\t  socket.pingCount = 0;\n\t  socket.pingIntervalMillis = recognizerContext.options.recognitionParams.server.websocket.pingIntervalMillis;\n\t  socket.maxPingLost = recognizerContext.options.recognitionParams.server.websocket.maxPingLostCount;\n\t  socket.autoReconnect = recognizerContext.options.recognitionParams.server.websocket.autoReconnect;\n\t  socket.maxRetryCount = recognizerContext.options.recognitionParams.server.maxRetryCount;\n\t  socket.recognizerContext = recognizerContext;\n\t}\n\t\n\t/**\n\t * @param {RecognizerContext} recognizerContext Recognizer context\n\t * @return {WebSocket} Opened WebSocket\n\t */\n\tfunction openWebSocket(recognizerContext) {\n\t  // eslint-disable-next-line no-undef\n\t  var socket = new WebSocket(recognizerContext.url);\n\t  addWebsocketAttributes(socket, recognizerContext);\n\t  infinitPing(socket);\n\t\n\t  socket.onopen = function (e) {\n\t    _LoggerConfig.recognizerLogger.debug('onOpen');\n\t    recognizerContext.callback(e);\n\t  };\n\t\n\t  socket.onclose = function (e) {\n\t    _LoggerConfig.recognizerLogger.debug('onClose', new Date() - socket.start);\n\t    recognizerContext.callback(e);\n\t  };\n\t\n\t  socket.onerror = function (e) {\n\t    _LoggerConfig.recognizerLogger.debug('onError');\n\t    recognizerContext.callback(e);\n\t  };\n\t\n\t  socket.onmessage = function (e) {\n\t    _LoggerConfig.recognizerLogger.debug('onMessage');\n\t    socket.pingCount = 0;\n\t    socket.maxRetryCount = 0;\n\t    var parsedMessage = JSON.parse(e.data);\n\t    if (parsedMessage.type !== 'pong') {\n\t      var callBackParam = {\n\t        type: e.type,\n\t        data: JSON.parse(e.data)\n\t      };\n\t      recognizerContext.callback(callBackParam);\n\t    }\n\t  };\n\t\n\t  return socket;\n\t}\n\t\n\t/**\n\t * Send data message\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @param {Object} message Data message\n\t */\n\tfunction send(recognizerContext, message) {\n\t  var websocket = recognizerContext.websocket;\n\t  var state = websocket.readyState;\n\t  if (state <= 1) {\n\t    websocket.send(JSON.stringify(message));\n\t  } else {\n\t    throw RecognizerContext.LOST_CONNEXION_MESSAGE;\n\t  }\n\t}\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.buildWebSocketCallback = buildWebSocketCallback;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _networkWSInterface = __webpack_require__(80);\n\t\n\tvar NetworkWSInterface = _interopRequireWildcard(_networkWSInterface);\n\t\n\tvar _CryptoHelper = __webpack_require__(10);\n\t\n\tvar CryptoHelper = _interopRequireWildcard(_CryptoHelper);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * A CDK v3 websocket dialog have this sequence :\n\t * ---------- Client ------------------------------------- Server ----------------------------------\n\t * init (send the applicationKey) ================>\n\t *                                       <=========== hmacChallenge\n\t * answerToHmacChallenge (send the hmac) =========>\n\t *                                       <=========== init\n\t * start (send the parameters and first strokes ) ===============>\n\t *                                       <=========== recognition with instance id\n\t * continue (send the other strokes ) ============>\n\t *                                       <=========== recognition\n\t */\n\t\n\tfunction buildInitInput(options) {\n\t  return {\n\t    type: 'applicationKey',\n\t    applicationKey: options.recognitionParams.server.applicationKey\n\t  };\n\t}\n\t\n\tfunction answerToHmacChallengeCallback(serverMessage, options, applicationKey) {\n\t  return {\n\t    type: 'hmac',\n\t    applicationKey: applicationKey,\n\t    challenge: serverMessage.data.challenge,\n\t    hmac: CryptoHelper.computeHmac(serverMessage.data.challenge, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey)\n\t  };\n\t}\n\t\n\tfunction simpleCallBack(payload, error) {\n\t  _LoggerConfig.recognizerLogger.error('This is something unexpected in current recognizer. Not the type of message we should have here.');\n\t  _LoggerConfig.recognizerLogger.debug('payload', payload);\n\t  _LoggerConfig.recognizerLogger.debug('error', error);\n\t}\n\t\n\tfunction updateInstanceId(recognizerContext, message) {\n\t  var recognizerContextReference = recognizerContext;\n\t  if (recognizerContextReference.instanceId && recognizerContextReference.instanceId !== message.data.instanceId) {\n\t    _LoggerConfig.recognizerLogger.debug('Instance id switch from ' + recognizerContextReference.instanceId + ' to ' + message.data.instanceId + ' this is suspicious');\n\t  }\n\t  recognizerContextReference.instanceId = message.data.instanceId;\n\t  _LoggerConfig.recognizerLogger.debug('Cdkv3WSRecognizer memorizing instance id', message.data.instanceId);\n\t}\n\t\n\tfunction onResult(recognizerContext, message) {\n\t  _LoggerConfig.recognizerLogger.debug('Cdkv3WSRecognizer success', message);\n\t  var recognitionContext = recognizerContext.recognitionContexts.shift();\n\t  var modelReference = recognitionContext.model;\n\t  _LoggerConfig.recognizerLogger.debug('Cdkv3WSRecognizer update model', message);\n\t  modelReference.rawResult = message.data;\n\t  // Giving back the hand to the InkPaper by resolving the promise.\n\t  recognitionContext.recognitionPromiseCallbacks.resolve(modelReference);\n\t}\n\t\n\t/**\n\t * This function bind the right behaviour when a message is receive by the websocket.\n\t * @param {DestructuredPromise} destructuredPromise\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @param {Options} options Current configuration\n\t * @return {function} Callback to handle WebSocket results\n\t */\n\tfunction buildWebSocketCallback(destructuredPromise, recognizerContext, options) {\n\t  return function (message) {\n\t    // Handle websocket messages\n\t    var applicationKey = options.recognitionParams.server.applicationKey;\n\t    _LoggerConfig.recognizerLogger.debug('Handling', message.type, message);\n\t\n\t    switch (message.type) {\n\t      case 'open':\n\t        NetworkWSInterface.send(recognizerContext, buildInitInput(options));\n\t        break;\n\t      case 'message':\n\t        _LoggerConfig.recognizerLogger.debug('Receiving message', message.data.type);\n\t        switch (message.data.type) {\n\t          case 'hmacChallenge':\n\t            NetworkWSInterface.send(recognizerContext, answerToHmacChallengeCallback(message, options, applicationKey));\n\t            break;\n\t          case 'init':\n\t            destructuredPromise.resolve('Init done');\n\t            break;\n\t          case 'reset':\n\t            _LoggerConfig.recognizerLogger.debug('Websocket reset done');\n\t            break;\n\t          case 'mathResult':\n\t          case 'textResult':\n\t            updateInstanceId(recognizerContext, message);\n\t            onResult(recognizerContext, message);\n\t            break;\n\t          default:\n\t            simpleCallBack(message);\n\t            destructuredPromise.reject('Unknown message');\n\t        }\n\t        break;\n\t      case 'close':\n\t        _LoggerConfig.recognizerLogger.debug('Websocket close done');\n\t        break;\n\t      default:\n\t        simpleCallBack(message);\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.textWebSocketV3Configuration = exports.close = exports.reset = undefined;\n\t\n\tvar _Cdkv3WSRecognizerUtil = __webpack_require__(79);\n\t\n\tObject.defineProperty(exports, 'reset', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _Cdkv3WSRecognizerUtil.reset;\n\t  }\n\t});\n\tObject.defineProperty(exports, 'close', {\n\t  enumerable: true,\n\t  get: function get() {\n\t    return _Cdkv3WSRecognizerUtil.close;\n\t  }\n\t});\n\texports.getInfo = getInfo;\n\texports.init = init;\n\texports.recognize = recognize;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tvar _StrokeComponent = __webpack_require__(8);\n\t\n\tvar StrokeComponent = _interopRequireWildcard(_StrokeComponent);\n\t\n\tvar Cdkv3WSRecognizerUtil = _interopRequireWildcard(_Cdkv3WSRecognizerUtil);\n\t\n\tvar _Cdkv3CommonTextRecognizer = __webpack_require__(52);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Recognizer configuration\n\t * @type {{type: String, protocol: String, apiVersion: String}}\n\t */\n\tvar textWebSocketV3Configuration = exports.textWebSocketV3Configuration = {\n\t  type: _MyScriptJSConstants2.default.RecognitionType.TEXT,\n\t  protocol: _MyScriptJSConstants2.default.Protocol.WEBSOCKET,\n\t  apiVersion: 'V3'\n\t};\n\t\n\t/**\n\t * Get the configuration supported by this recognizer\n\t * @return {RecognizerInfo}\n\t */\n\tfunction getInfo() {\n\t  return Object.assign({}, Cdkv3WSRecognizerUtil.commonWebSocketV3Configuration, textWebSocketV3Configuration);\n\t}\n\t\n\tfunction buildTextInput(recognizerContext, model, options) {\n\t  if (recognizerContext.lastRecognitionPositions.lastSentPosition < 0) {\n\t    return {\n\t      type: 'start',\n\t      textParameter: options.recognitionParams.textParameter,\n\t      inputUnits: [{\n\t        textInputType: _MyScriptJSConstants2.default.InputType.MULTI_LINE_TEXT,\n\t        components: model.rawStrokes.map(function (stroke) {\n\t          return StrokeComponent.toJSON(stroke);\n\t        })\n\t      }]\n\t    };\n\t  }\n\t\n\t  return {\n\t    type: 'continue',\n\t    inputUnits: [{\n\t      textInputType: _MyScriptJSConstants2.default.InputType.MULTI_LINE_TEXT,\n\t      components: InkModel.extractPendingStrokes(model, -1).map(function (stroke) {\n\t        return StrokeComponent.toJSON(stroke);\n\t      })\n\t    }]\n\t  };\n\t}\n\t\n\t/**\n\t * Initialize recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Fulfilled when the init phase is over.\n\t */\n\tfunction init(options, model, recognizerContext) {\n\t  var suffixUrl = '/api/v3.0/recognition/ws/text';\n\t  return Cdkv3WSRecognizerUtil.init(suffixUrl, options, model, recognizerContext);\n\t}\n\t\n\t/**\n\t * Do the recognition\n\t * @param {Options} options Current configuration\n\t * @param {Model} model Current model\n\t * @param {RecognizerContext} recognizerContext Current recognizer context\n\t * @return {Promise.<Model>} Promise that return an updated model as a result\n\t */\n\tfunction recognize(options, model, recognizerContext) {\n\t  return Cdkv3WSRecognizerUtil.recognize(options, recognizerContext, model, buildTextInput).then(_Cdkv3CommonTextRecognizer.processRenderingResult).then(Cdkv3WSRecognizerUtil.updateModelReceivedPosition);\n\t}\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = eventCallback;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Emits 'change' event when model change occurs\n\t * @param {Model} data The current model data that have changed.\n\t * @emits {Event} when the model changes.\n\t */\n\tfunction eventCallback(data) {\n\t  _LoggerConfig.inkpaperLogger.debug('emitting change event', data);\n\t  // We are making usage of a browser provided class\n\t  // eslint-disable-next-line no-undef\n\t  this.dispatchEvent(new CustomEvent('change', { detail: data }));\n\t}\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.overrideDefaultStyle = overrideDefaultStyle;\n\t\n\tvar _assignDeep = __webpack_require__(54);\n\t\n\tvar _assignDeep2 = _interopRequireDefault(_assignDeep);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * @typedef {Object} Styles\n\t * @property {{color: String, width: Number}} strokeStyle\n\t */\n\t\n\t/**\n\t * Default style\n\t * @type {Styles}\n\t */\n\tvar defaultStyle = {\n\t  strokeStyle: {\n\t    color: '#1580CD',\n\t    width: 4\n\t  }\n\t};\n\t\n\t/**\n\t * Generate style\n\t * @param {Styles} style Custom style to be applied\n\t * @return {Styles} Overridden style\n\t */\n\tfunction overrideDefaultStyle(style) {\n\t  return (0, _assignDeep2.default)({}, defaultStyle, style === undefined ? {} : style);\n\t}\n\t\n\texports.default = defaultStyle;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.createUndoRedoContext = createUndoRedoContext;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\t/**\n\t * Undo/redo context\n\t * @typedef {Object} UndoRedoContext\n\t * @property {Array<Model>} stack List of processed models.\n\t * @property {Number} currentPosition Current model index into the stack.\n\t * @property {Number} maxSize Max size of the stack.\n\t */\n\t\n\t/**\n\t * Create a new undo/redo context\n\t * @param {Options} options Current configuration\n\t * @return {UndoRedoContext} New undo/redo context\n\t */\n\tfunction createUndoRedoContext(options) {\n\t  return {\n\t    stack: [],\n\t    currentPosition: -1,\n\t    maxSize: options.undoRedoMaxStackSize\n\t  };\n\t}\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.pushModel = pushModel;\n\texports.undo = undo;\n\texports.redo = redo;\n\texports.clear = clear;\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\t/**\n\t * Undo/redo manager\n\t * @typedef {Object} UndoRedoManager\n\t * @property {function(undoRedoContext: UndoRedoContext, model: Model): Promise.<Model>} pushModel Push the current model into the undo/redo context.\n\t * @property {function(undoRedoContext: UndoRedoContext): Promise.<Model>} undo Undo.\n\t * @property {function(undoRedoContext: UndoRedoContext): Promise.<Model>} redo Redo.\n\t * @property {function(undoRedoContext: UndoRedoContext, model: Model, options: Options): Promise.<Model>} clear Clear.\n\t */\n\t\n\tfunction getModel(undoRedoContext) {\n\t  var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undoRedoContext.currentPosition;\n\t\n\t  var model = undoRedoContext.stack[position];\n\t  model.canUndo = position > 0;\n\t  model.canRedo = position < undoRedoContext.stack.length - 1;\n\t  return Promise.resolve(model);\n\t}\n\t\n\t/**\n\t * Mutate the undoRedo stack by adding a new model to it.\n\t * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n\t * @param {Model} model Current model\n\t * @return {Promise.<Model>} Pushed model\n\t */\n\tfunction pushModel(undoRedoContext, model) {\n\t  var modelReference = InkModel.cloneModel(model);\n\t  var undoRedoContextReference = undoRedoContext;\n\t  undoRedoContextReference.currentPosition += 1;\n\t  undoRedoContextReference.stack = undoRedoContextReference.stack.slice(0, undoRedoContextReference.currentPosition);\n\t  undoRedoContextReference.stack.push(modelReference);\n\t  if (undoRedoContextReference.stack.length > undoRedoContextReference.maxSize) {\n\t    undoRedoContextReference.stack.shift();\n\t    undoRedoContextReference.currentPosition--;\n\t  }\n\t  return getModel(undoRedoContext);\n\t}\n\t\n\t/**\n\t * Undo\n\t * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction undo(undoRedoContext) {\n\t  var undoRedoContextReference = undoRedoContext;\n\t  if (undoRedoContextReference.currentPosition > 0) {\n\t    undoRedoContextReference.currentPosition -= 1;\n\t    _LoggerConfig.modelLogger.debug('undo index', undoRedoContextReference.currentPosition);\n\t  }\n\t  return getModel(undoRedoContext);\n\t}\n\t\n\t/**\n\t * Redo\n\t * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n\t * @return {Promise.<Model>}\n\t */\n\tfunction redo(undoRedoContext) {\n\t  var undoRedoContextReference = undoRedoContext;\n\t  if (undoRedoContextReference.currentPosition < undoRedoContextReference.stack.length - 1) {\n\t    undoRedoContextReference.currentPosition += 1;\n\t    _LoggerConfig.modelLogger.debug('redo index', undoRedoContextReference.currentPosition);\n\t  }\n\t  return getModel(undoRedoContext);\n\t}\n\t\n\t/**\n\t * Clear\n\t * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n\t * @param {Model} model Current model\n\t * @param {Options} options Current options\n\t * @return {Promise.<Model>}\n\t */\n\tfunction clear(undoRedoContext, model, options) {\n\t  return pushModel(undoRedoContext, InkModel.createModel(options));\n\t}\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getImage = getImage;\n\t\n\tvar _CanvasRenderer = __webpack_require__(66);\n\t\n\tvar _InkModel = __webpack_require__(48);\n\t\n\tvar InkModel = _interopRequireWildcard(_InkModel);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction createCanvas(borderCoordinates) {\n\t  var margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n\t\n\t  // eslint-disable-next-line no-undef\n\t  var browserDocument = document;\n\t  var canvas = browserDocument.createElement('canvas');\n\t  canvas.width = Math.abs(borderCoordinates.maxX - borderCoordinates.minX) + 2 * margin;\n\t  canvas.style.width = canvas.width + 'px';\n\t  canvas.height = Math.abs(borderCoordinates.maxY - borderCoordinates.minY) + 2 * margin;\n\t  canvas.style.height = canvas.height + 'px';\n\t  return canvas;\n\t}\n\t\n\t/**\n\t * Generate a PNG image data url from the model\n\t * @param {Model} model Current model\n\t * @param {Stroker} stroker Current stroker\n\t * @param {Number} [margin=10] Margins to apply around the image\n\t * @return {String} Image data string result\n\t */\n\tfunction getImage(model, stroker) {\n\t  var margin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n\t\n\t  var borderCoordinates = InkModel.getBorderCoordinates(model);\n\t  var capturingCanvas = createCanvas(borderCoordinates, margin);\n\t  var renderingCanvas = createCanvas(borderCoordinates, margin);\n\t  var renderStructure = {\n\t    renderingCanvas: renderingCanvas,\n\t    renderingCanvasContext: renderingCanvas.getContext('2d'),\n\t    capturingCanvas: capturingCanvas,\n\t    capturingCanvasContext: capturingCanvas.getContext('2d')\n\t  };\n\t  // Change canvas origin\n\t  renderStructure.renderingCanvasContext.translate(-borderCoordinates.minX + margin, -borderCoordinates.minY + margin);\n\t  (0, _CanvasRenderer.drawModel)(renderStructure, model, stroker);\n\t  return renderStructure.renderingCanvas.toDataURL('image/png');\n\t}\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.register = register;\n\texports.getAvailableLanguageList = getAvailableLanguageList;\n\t\n\tvar _LoggerConfig = __webpack_require__(2);\n\t\n\tvar _InkPaper = __webpack_require__(63);\n\t\n\tvar _MyScriptJSConstants = __webpack_require__(7);\n\t\n\tvar _MyScriptJSConstants2 = _interopRequireDefault(_MyScriptJSConstants);\n\t\n\tvar _networkInterface = __webpack_require__(9);\n\t\n\tvar NetworkInterface = _interopRequireWildcard(_networkInterface);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Attach an InkPaper to a DOMElement\n\t * @param {Element} element DOM element to attach an inkPaper\n\t * @param {Options} [options] Configuration to apply\n\t * @param {Styles} [customStyle] Custom style to apply\n\t * @param {Behaviors} [behaviors] Custom behaviors to apply\n\t * @return {InkPaper} New inkPaper\n\t */\n\tfunction register(element, options, customStyle, behaviors) {\n\t  _LoggerConfig.inkpaperLogger.debug('Registering a new inkpaper');\n\t  return new _InkPaper.InkPaper(element, options, customStyle, behaviors);\n\t}\n\t\n\t/**\n\t * Return the list of available recognition languages\n\t * @param {Options} options Current configuration\n\t * @return {Promise.<Object>} A list of languages available for the current configuration\n\t */\n\tfunction getAvailableLanguageList(options) {\n\t  var data = {\n\t    applicationKey: options.recognitionParams.server.applicationKey\n\t  };\n\t\n\t  switch (options.recognitionParams.type) {\n\t    case _MyScriptJSConstants2.default.RecognitionType.TEXT:\n\t      data.inputMode = options.recognitionParams.textParameter.textInputMode;\n\t      break;\n\t    case _MyScriptJSConstants2.default.RecognitionType.ANALYZER:\n\t      data.inputMode = options.recognitionParams.analyzerParameter.textParameter.textInputMode;\n\t      break;\n\t    default:\n\t      break;\n\t  }\n\t\n\t  return NetworkInterface.get(options.recognitionParams.server.scheme + '://' + options.recognitionParams.server.host + '/api/v3.0/recognition/rest/text/languages.json', data);\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// myscript.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e6209a83eb7fb03d1ad","import DebugConfig from './configuration/DebugConfig';\nimport { InkPaper } from './InkPaper';\nimport { register, getAvailableLanguageList } from './InkPaperFacade';\n\nexport {\n    DebugConfig,\n    InkPaper,\n    register,\n    getAvailableLanguageList\n};\n\n\n\n\n// WEBPACK FOOTER //\n// ./myscript.js","import * as loggerConfig from './LoggerConfig';\nimport * as modelStats from '../util/ModelStats';\n\n/**\n * Debug configuration\n * @typedef {Object} DebugConfiguration\n * @property {Object} loggerConfig Loggers configuration\n * @property {Stats} modelStats Statistics about current model\n */\n\n/**\n * Debug configuration\n * @type {DebugConfiguration}\n */\nexport default { loggerConfig, modelStats };\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/DebugConfig.js","import * as log from 'loglevel';\n\nconst logging = log.noConflict();\nlogging.setDefaultLevel(log.levels.ERROR); // TRACE,DEBUG,INFO,ERROR\nlogging.setLevel(log.levels.ERROR);\n\n/**\n * Log grabber events\n * @type {Object}\n */\nconst grabberLogger = logging.getLogger('grabber');\ngrabberLogger.setLevel(log.levels.INFO);\n\n/**\n * Log inkPaper events\n * @type {Object}\n */\nconst inkpaperLogger = logging.getLogger('inkpaper');\ninkpaperLogger.setLevel(log.levels.INFO);\n\n/**\n * Log grabber events\n * @type {Object}\n */\nconst rendererLogger = logging.getLogger('renderer');\nrendererLogger.setLevel(log.levels.INFO);\n\n/**\n * Log model events\n * @type {Object}\n */\nconst modelLogger = logging.getLogger('model');\nmodelLogger.setLevel(log.levels.INFO);\n\n/**\n * Log recognizer events\n * @type {Object}\n */\nconst recognizerLogger = logging.getLogger('recognizer');\nrecognizerLogger.setLevel(log.levels.DEBUG);\n\n/**\n * Log tests events\n * @type {Object}\n */\nconst testLogger = logging.getLogger('tests');\ntestLogger.setLevel(log.levels.INFO);\n\n/**\n * Log util events\n * @type {Object}\n */\nconst utilLogger = logging.getLogger('util');\nutilLogger.setLevel(log.levels.INFO);\n\nexport { grabberLogger, inkpaperLogger, rendererLogger, modelLogger, recognizerLogger, testLogger, utilLogger };\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/LoggerConfig.js","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    function realMethod(methodName) {\n        if (typeof console === undefinedType) {\n            return false; // We can't build a real method without a console to log to\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // these private functions always need `this` to be set properly\n\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n    }\n\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public API\n       *\n       */\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Package-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    return defaultLogger;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/loglevel/lib/loglevel.js\n// module id = 3\n// module chunks = 0","import * as Cdkv3RestTextRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestTextRecognizer';\nimport * as MyScriptJSOptions from '../configuration/MyScriptJSOptions';\n\n/**\n * @typedef {Object} Stats\n * @property {Number} strokesCount\n * @property {Number} pointsCount\n * @property {Number} byteSize\n * @property {Number} humanSize\n * @property {String} humanUnit\n */\n\n/**\n * @param {Model} model Current model\n * @return {Stats} Statistics about recognition\n */\nexport function computeStats(model) {\n  const stats = { strokesCount: 0, pointsCount: 0, byteSize: 0, humanSize: 0, humanUnit: 'BYTE' };\n  if (model.rawStrokes) {\n    stats.strokesCount = model.rawStrokes.length;\n\n    const restMessage = Cdkv3RestTextRecognizer.buildInput(MyScriptJSOptions.overrideDefaultOptions({}), model);\n    stats.pointsCount = model.rawStrokes.map(stroke => stroke.x.length).reduce((a, b) => a + b, 0);\n    // We start with 270 as it is the size in bytes. Make a real computation implies to recode a doRecognition\n    const byteSize = restMessage.textInput.length;\n    stats.byteSize = byteSize;\n    if (byteSize < 270) {\n      stats.humanUnit = 'BYTE';\n      stats.byteSize = 0;\n      stats.humanSize = 0;\n    } else if (byteSize < 2048) {\n      stats.humanUnit = 'BYTES';\n      stats.humanSize = byteSize;\n    } else if (byteSize < 1024 * 1024) {\n      stats.humanUnit = 'KiB';\n      stats.humanSize = (byteSize / 1024).toFixed(2);\n    } else {\n      stats.humanUnit = 'MiB';\n      stats.humanSize = (byteSize / 1024 / 1024).toFixed(2);\n    }\n  }\n  return stats;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/ModelStats.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as NetworkInterface from '../../networkHelper/rest/networkInterface';\nimport * as CryptoHelper from '../../CryptoHelper';\nimport { updateSentRecognitionPositions, resetRecognitionPositions } from '../../../model/RecognizerContext';\nimport { commonRestV3Configuration, updateModelReceivedPosition } from './Cdkv3CommonRestRecognizer'; // Configuring recognition trigger\nimport { processRenderingResult } from '../common/Cdkv3CommonTextRecognizer';\n\nexport { init, close } from '../../DefaultRecognizer';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const textRestV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.TEXT,\n  protocol: MyScriptJSConstants.Protocol.REST,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, commonRestV3Configuration, textRestV3Configuration);\n}\n\n/**\n * Internal function to build the payload to ask for a recognition.\n * @param {Options} options\n * @param {Model} model\n * @param {String} instanceId\n * @return {Object}\n */\nexport function buildInput(options, model, instanceId) {\n  const input = {\n    inputUnits: [{\n      textInputType: MyScriptJSConstants.InputType.MULTI_LINE_TEXT,\n      // As Rest TEXT recognition is non incremental wa add the already recognized strokes\n      components: model.rawStrokes.map(stroke => StrokeComponent.toJSON(stroke))\n    }]\n  };\n  Object.assign(input, { textParameter: options.recognitionParams.textParameter }); // Building the input with the suitable parameters\n\n  logger.debug(`input.inputUnits[0].components size is ${input.inputUnits[0].components.length}`);\n\n  const data = {\n    instanceId,\n    applicationKey: options.recognitionParams.server.applicationKey,\n    textInput: JSON.stringify(input)\n  };\n\n  if (options.recognitionParams.server.hmacKey) {\n    data.hmac = CryptoHelper.computeHmac(data.textInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n  }\n  return data;\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  const modelReference = model;\n  const recognizerContextReference = recognizerContext;\n\n  const data = buildInput(options, modelReference, recognizerContextReference.textInstanceId);\n  updateSentRecognitionPositions(recognizerContextReference, modelReference);\n  return NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/text/doSimpleRecognition.json`, data)\n      .then(\n          (response) => {\n            logger.debug('Cdkv3RestTextRecognizer success', response);\n            recognizerContextReference.textInstanceId = response.instanceId;\n            logger.debug('Cdkv3RestTextRecognizer update model', response);\n            modelReference.rawResult = response;\n            modelReference.rawResult.type = `${textRestV3Configuration.type.toLowerCase()}Result`;\n            return modelReference;\n          }\n      )\n      .then(processRenderingResult)\n      .then(updateModelReceivedPosition);\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  resetRecognitionPositions(recognizerContext, model);\n  // We are explicitly manipulating a reference here.\n  // eslint-disable-next-line no-param-reassign\n  delete recognizerContext.textInstanceId;\n  return Promise.resolve(model);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3RestTextRecognizer.js","import { recognizerLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Recognizer info\n * @typedef {Object} RecognizerInfo\n * @property {String} type Supported recognition type (TEXT, MATH, SHAPE, MUSIC, ANALYZER).\n * @property {String} protocol Supported protocol (REST, WEBSOCKET).\n * @property {String} apiVersion Supported API version.\n * @property {Array<String>} availableTriggers Supported triggers for this recognizer.\n * @property {String} preferredTrigger Preferred recognition trigger for this recognizer.\n */\n\n/**\n * Recognition service entry point\n * @typedef {Object} Recognizer\n * @property {function(): RecognizerInfo} getInfo Get information about the supported configuration (protocol, type, apiVersion, ...).\n * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} init Initialize recognition.\n * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} reset Clear server context. Currently nothing to do there.\n * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} recognize Do the recognition.\n * @property {function(options: Options, model: Model, recognizerContext: RecognizerContext): Promise.<Model>} close Close and free all resources that will no longer be used by the recognizer.\n */\n\n/**\n * Clear server context. Currently nothing to do there.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  logger.debug('No reset behavior');\n  return Promise.resolve(model);\n}\n\n/**\n * Close and free all resources that will no longer be used by the recognizer.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Fulfilled when the close phase is over.\n */\nexport function close(options, model, recognizerContext) {\n  logger.debug('No close behavior');\n  return Promise.resolve(model);\n}\n\n/**\n * Initialize recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Fulfilled when the init phase is over.\n */\nexport function init(options, model, recognizerContext) {\n  logger.debug('No init behavior');\n  return Promise.resolve(model);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/DefaultRecognizer.js","/**\n * @typedef {Object} Constants\n * @property {{TEXT: String, MATH: String, SHAPE: String, MUSIC: String, ANALYZER: String}} RecognitionType\n * @property {{CURSIVE: String, ISOLATED: String, SUPERIMPOSED: String, VERTICAL: String}} InputMode\n * @property {{CHAR: String, WORD: String, SINGLE_LINE_TEXT: String, MULTI_LINE_TEXT: String}} InputType\n * @property {{TEXT: String, WORD: String, CHARACTER: String}} ResultDetail\n * @property {{Math: {LATEX: String, MATHML: String, SYMBOLTREE: String, OFFICEOPENXMLMATH: String}, Music: {MUSICXML: String, SCORETREE: String}}} ResultType\n * @property {{WEBSOCKET: String, REST: String}} Protocol\n * @property {{INITIALIZING: String, ASKING_FOR_RECOGNITION: String, PROCESSING_RECOGNITION_RESULT: String, RENDERING_RECOGNITION: String, RECOGNITION_ERROR: String, RECOGNITION_OVER: String}} ModelState\n * @property {{QUIET_PERIOD: String, PEN_UP: String, DEMAND: String}} RecognitionTrigger\n */\n\nconst Constants = {\n  RecognitionType: {\n    TEXT: 'TEXT',\n    MATH: 'MATH',\n    SHAPE: 'SHAPE',\n    MUSIC: 'MUSIC',\n    ANALYZER: 'ANALYZER'\n  },\n  InputMode: {\n    CURSIVE: 'CURSIVE',\n    ISOLATED: 'ISOLATED',\n    SUPERIMPOSED: 'SUPERIMPOSED',\n    VERTICAL: 'VERTICAL'\n  },\n  InputType: {\n    CHAR: 'CHAR',\n    WORD: 'WORD',\n    SINGLE_LINE_TEXT: 'SINGLE_LINE_TEXT',\n    MULTI_LINE_TEXT: 'MULTI_LINE_TEXT'\n  },\n  ResultDetail: {\n    TEXT: 'TEXT',\n    WORD: 'WORD',\n    CHARACTER: 'CHARACTER'\n  },\n  ResultType: {\n    Math: {\n      LATEX: 'LATEX',\n      MATHML: 'MATHML',\n      SYMBOLTREE: 'SYMBOLTREE',\n      OFFICEOPENXMLMATH: 'OFFICEOPENXMLMATH'\n    },\n    Music: {\n      MUSICXML: 'MUSICXML',\n      SCORETREE: 'SCORETREE'\n    }\n  },\n  Protocol: {\n    WEBSOCKET: 'WEBSOCKET',\n    REST: 'REST'\n  },\n  ModelState: {\n    INITIALIZING: 'INITIALIZING',\n    ASKING_FOR_RECOGNITION: 'ASKING FOR RECOGNITION',\n    PROCESSING_RECOGNITION_RESULT: 'PROCESSING RECOGNITION RESULT',\n    RENDERING_RECOGNITION: 'RENDERING RECOGNITION',\n    RECOGNITION_ERROR: 'RECOGNITION ERROR',\n    RECOGNITION_OVER: 'RECOGNITION OVER'\n  },\n  RecognitionTrigger: {\n    QUIET_PERIOD: 'QUIET_PERIOD',\n    PEN_UP: 'PEN_UP',\n    DEMAND: 'DEMAND'\n  }\n};\nexport default Constants;\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/MyScriptJSConstants.js","import { modelLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Stroke symbol\n * @typedef {Object} Stroke\n * @property {String} type Symbol type, 'stroke' for stroke\n * @property {Array<Number>} x X coordinates\n * @property {Array<Number>} y Y coordinates\n * @property {Array<Number>} t Timestamps matching x,y coordinates\n * @property {Array<Number>} p Pressure\n * @property {Array<Number>} l Length from origin\n * @property {Number} width (for rendering) Pen/brush width\n * @property {String} color (for rendering) Pen/brush color\n */\n\nfunction computeDistance(x, y, xArray, yArray, lastIndexPoint) {\n  const distance = Math.sqrt(Math.pow((y - yArray[lastIndexPoint - 1]), 2) + Math.pow((x - xArray[lastIndexPoint - 1]), 2));\n  return isNaN(distance) ? 0 : distance;\n}\n\nfunction computeLength(x, y, xArray, yArray, lArray, lastIndexPoint) {\n  const length = lArray[lastIndexPoint - 1] + computeDistance(x, y, xArray, yArray, lastIndexPoint);\n  return isNaN(length) ? 0 : length;\n}\n\nfunction computePressure(x, y, xArray, yArray, lArray, lastIndexPoint) {\n  let ratio = 1.0;\n  const distance = computeDistance(x, y, xArray, yArray, lastIndexPoint);\n  const length = computeLength(x, y, xArray, yArray, lArray, lastIndexPoint);\n\n  if (length === 0) {\n    ratio = 0.5;\n  } else if (distance === length) {\n    ratio = 1.0;\n  } else if (distance < 10) {\n    ratio = 0.2 + Math.pow(0.1 * distance, 0.4);\n  } else if (distance > length - 10) {\n    ratio = 0.2 + Math.pow(0.1 * (length - distance), 0.4);\n  }\n  const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)));\n  return isNaN(parseFloat(pressure)) ? 0.5 : pressure;\n}\n\nfunction filterPointByAcquisitionDelta(x, y, xArray, yArray, width) {\n  const delta = (2 + (width / 4));\n  let ret = false;\n  if (xArray.length === 0 || yArray.length === 0 || Math.abs(xArray[xArray.length - 1] - x) >= delta || Math.abs(yArray[yArray.length - 1] - y) >= delta) {\n    ret = true;\n  }\n  return ret;\n}\n\n/**\n * Create a new stroke\n * @param {Object} properties Properties to be applied to the stroke.\n * @return {Stroke} New stroke with properties for quadratics draw\n */\nexport function createStrokeComponent(properties) {\n  const defaultStroke = {\n    type: 'stroke',\n    x: [],\n    y: [],\n    t: [],\n    p: [],\n    l: [],\n    width: 0\n  };\n  return Object.assign({}, defaultStroke, properties);\n}\n\n/**\n * Get a JSON copy of a stroke by filtering its properties\n * @param {Stroke} stroke Current stroke\n * @return {{type: String, x: Array<Number>, y: Array<Number>, t: Array<Number>}} Simplified stroke object\n */\nexport function toJSON(stroke) {\n  return { type: stroke.type, x: stroke.x, y: stroke.y, t: stroke.t };\n}\n\n/**\n * Mutate a stroke by adding a point to it.\n * @param {Stroke} stroke Current stroke\n * @param {{x: Number, y: Number, t: Number}} point Point to add\n * @return {Stroke} Updated stroke\n */\nexport function addPoint(stroke, point) {\n  const strokeReference = stroke;\n  if (filterPointByAcquisitionDelta(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.width)) {\n    strokeReference.x.push(point.x);\n    strokeReference.y.push(point.y);\n    strokeReference.t.push(point.t);\n    strokeReference.p.push(computePressure(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.l, strokeReference.x.length - 1));\n    strokeReference.l.push(computeLength(point.x, point.y, strokeReference.x, strokeReference.y, strokeReference.l, strokeReference.x.length - 1));\n  } else {\n    logger.debug('ignore filtered point', point);\n  }\n  return strokeReference;\n}\n\n/**\n * Slice a stroke and return the sliced part of it\n * @param {Stroke} stroke Current stroke\n * @param {Number} [start=0] Zero-based index at which to begin extraction\n * @param {Number} [end=length] Zero-based index at which to end extraction\n * @return {Stroke} Sliced stroke\n */\nexport function slice(stroke, start = 0, end = stroke.x.length) {\n  const slicedStroke = createStrokeComponent({ color: stroke.color, width: stroke.width });\n  for (let i = start; i < end; i++) {\n    addPoint(slicedStroke, {\n      x: stroke.x[i],\n      y: stroke.y[i],\n      t: stroke.t[i]\n    });\n  }\n  return slicedStroke;\n}\n\n/**\n * Extract point by index\n * @param {Stroke} stroke Current stroke\n * @param {Number} index Zero-based index\n * @return {{x: Number, y: Number, t: Number, p: Number, l: Number}} Point with properties for quadratics draw\n */\nexport function getPointByIndex(stroke, index) {\n  let point;\n  if (index !== undefined && index >= 0 && index < stroke.x.length) {\n    point = {\n      x: stroke.x[index],\n      y: stroke.y[index],\n      t: stroke.t[index],\n      p: stroke.p[index],\n      l: stroke.l[index]\n    };\n  }\n  return point;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model/StrokeComponent.js","/**\n * Parse JSON String to Object\n * @param {Object} req JSON string result to be parsed\n * @return {Object} Parsed response\n */\nexport function parse(req) {\n  let result;\n  try {\n    result = JSON.parse(req.responseText);\n  } catch (e) {\n    result = req.responseText;\n  }\n  return result;\n}\n\n/**\n * Transform object data request to a list of parameters\n * @param {Object} obj Query properties\n * @return {String} URI encoded string\n */\nexport function transformRequest(obj) {\n  const str = [];\n  Object.keys(obj).forEach((p) => {\n    if ((typeof obj[p] !== 'undefined') &&\n        (typeof obj[p] !== 'function')) {\n      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));\n    }\n  });\n  return str.join('&');\n}\n\n/**\n * Send request to the network and return a promise\n * @param {String} type Request type (GET/POST)\n * @param {String} url URL\n * @param {Object} data Data to be sent\n * @param {function} [notify] Notification function\n * @return {Promise}\n */\nexport function xhr(type, url, data, notify) {\n  return new Promise((resolve, reject) => {\n    // We are writing some browser module here so the no import found should be ignored\n    // eslint-disable-next-line no-undef\n    const request = new XMLHttpRequest();\n    request.open(type, url, true);\n    request.withCredentials = true;\n    request.setRequestHeader('Accept', 'application/json');\n    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\n    request.onerror = () => {\n      reject(new Error('Can\\'t XHR ' + url));\n    };\n\n    request.onprogress = (e) => {\n      if (notify) {\n        notify(e.loaded / e.total);\n      }\n    };\n\n    request.onload = () => {\n      if (request.status >= 200 && request.status < 300) {\n        resolve(parse(request));\n      } else {\n        reject(new Error(request.responseText));\n      }\n    };\n\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status >= 200 && request.status < 300) {\n          resolve(parse(request));\n        }\n      }\n    };\n\n    request.send(data ? transformRequest(data) : undefined);\n  });\n}\n\n/**\n * Get request\n * @param {String} src URL\n * @param {Object} params Query properties\n * @return {Promise}\n */\nexport function get(src, params) {\n  let newSrc = src;\n  if (params) {\n    newSrc += '?' + transformRequest(params);\n  }\n  return xhr('GET', newSrc, undefined);\n}\n\n/**\n * Post request\n * @private\n * @param {String} url URL\n * @param {Object} data Data to be sent\n * @return {Promise}\n */\nexport function post(url, data) {\n  return xhr('POST', url, data);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/networkHelper/rest/networkInterface.js","import { enc } from 'crypto-js';\nimport HmacSHA512 from 'crypto-js/hmac-sha512';\nimport { recognizerLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Compute HMAC signature for server authentication\n *\n * @param {Object} input Input data to compute HMAC\n * @param {String} applicationKey Current applicationKey\n * @param {String} hmacKey Current hmacKey\n * @return {String} Signature\n */\nexport function computeHmac(input, applicationKey, hmacKey) {\n  const jsonInput = (typeof input === 'object') ? JSON.stringify(input) : input;\n  logger.debug('The HmacSHA512 function is loaded', HmacSHA512);\n  return new HmacSHA512(jsonInput, applicationKey + hmacKey).toString(enc.Hex);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/CryptoHelper.js",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/index.js\n// module id = 11\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/core.js\n// module id = 12\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/x64-core.js\n// module id = 13\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/lib-typedarrays.js\n// module id = 14\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/enc-utf16.js\n// module id = 15\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/enc-base64.js\n// module id = 16\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/md5.js\n// module id = 17\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha1.js\n// module id = 18\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha256.js\n// module id = 19\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha224.js\n// module id = 20\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha512.js\n// module id = 21\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha384.js\n// module id = 22\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/sha3.js\n// module id = 23\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/ripemd160.js\n// module id = 24\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/hmac.js\n// module id = 25\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pbkdf2.js\n// module id = 26\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/evpkdf.js\n// module id = 27\n// module chunks = 0",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\t            this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/cipher-core.js\n// module id = 28\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/mode-cfb.js\n// module id = 29\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/mode-ctr.js\n// module id = 30\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/mode-ctr-gladman.js\n// module id = 31\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/mode-ofb.js\n// module id = 32\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/mode-ecb.js\n// module id = 33\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pad-ansix923.js\n// module id = 34\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pad-iso10126.js\n// module id = 35\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pad-iso97971.js\n// module id = 36\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pad-zeropadding.js\n// module id = 37\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/pad-nopadding.js\n// module id = 38\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/format-hex.js\n// module id = 39\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/aes.js\n// module id = 40\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/tripledes.js\n// module id = 41\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/rc4.js\n// module id = 42\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/rabbit.js\n// module id = 43\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/rabbit-legacy.js\n// module id = 44\n// module chunks = 0",";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS.HmacSHA512;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/crypto-js/hmac-sha512.js\n// module id = 45\n// module chunks = 0","import { recognizerLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Recognizer context\n * @typedef {Object} RecognizerContext\n * @property {Array<RecognitionContext>} recognitionContexts\n * @property {Promise} initPromise\n * @property {RecognitionPositions} lastRecognitionPositions  Last recognition sent/received stroke indexes.\n * @property {String} url\n * @property {String} suffixUrl\n * @property {WebSocket} websocket\n * @property {Options} options\n * @property {function} callback\n * @property {Number} currentReconnectionCount\n */\n\n/**\n * Create a new recognizer context\n * @return {RecognizerContext} An object that contains all recognizer context\n */\nexport function createEmptyRecognizerContext() {\n  return {\n    // websocket\n    recognitionContexts: [],\n    initPromise: undefined,\n    lastRecognitionPositions: {\n      lastSentPosition: -1,\n      lastReceivedPosition: -1\n    },\n    url: undefined,\n    suffixUrl: undefined,\n    websocket: undefined,\n    options: undefined,\n    callback: undefined,\n    currentReconnectionCount: undefined\n  };\n}\n\n/**\n * Reset the recognition context positions\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @param {Model} model Current model\n * @return {RecognizerContext}\n */\nexport function resetRecognitionPositions(recognizerContext, model) {\n  const recognizerContextReference = recognizerContext;\n  recognizerContextReference.lastRecognitionPositions.lastSentPosition = -1;\n  recognizerContextReference.lastRecognitionPositions.lastReceivedPosition = -1;\n  const modelReference = model;\n  modelReference.lastRecognitionPositions.lastSentPosition = -1;\n  modelReference.lastRecognitionPositions.lastReceivedPosition = -1;\n  logger.debug('Reset recognition positions');\n  return recognizerContextReference;\n}\n\n/**\n * Update the recognition context sent position\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @param {Model} model Current model\n * @return {RecognizerContext}\n */\nexport function updateSentRecognitionPositions(recognizerContext, model) {\n  const modelRef = model;\n  modelRef.lastRecognitionPositions.lastSentPosition = modelRef.rawStrokes.length - 1;\n  const recognizerContextRef = recognizerContext;\n  recognizerContextRef.lastRecognitionPositions.lastSentPosition = modelRef.lastRecognitionPositions.lastSentPosition;\n  return recognizerContextRef;\n}\n\n/**\n * Test if it should attempt immediate reconnect\n * @param {RecognizerContext} recognizerContext\n * @return {Boolean} True if should attempt reconnect, false otherwise\n */\nexport function shouldAttemptImmediateReconnect(recognizerContext) {\n  const recognizerContextRef = recognizerContext;\n  return recognizerContextRef.websocket.autoReconnect === true && recognizerContextRef.currentReconnectionCount++ <= recognizerContextRef.websocket.maxRetryCount;\n}\n\n/**\n * Lost connection message\n * @type {{type: string}}\n */\nexport const LOST_CONNEXION_MESSAGE = { type: 'LOST_CONNECTION' };\n\n\n\n\n// WEBPACK FOOTER //\n// ./model/RecognizerContext.js","import MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as InkModel from '../../../model/InkModel';\n\n/**\n * Common configuration\n * @type {{availableTriggers: Array<String>, preferredTrigger: String}}\n */\nexport const commonRestV3Configuration = {\n  availableTriggers: [\n    MyScriptJSConstants.RecognitionTrigger.QUIET_PERIOD,\n    MyScriptJSConstants.RecognitionTrigger.DEMAND\n  ],\n  preferredTrigger: MyScriptJSConstants.RecognitionTrigger.QUIET_PERIOD\n};\n\n/**\n * Update model lastReceivedPosition regarding to lastSentPosition\n * @param {Model} model\n * @return {Model}\n */\nexport function updateModelReceivedPosition(model) {\n  const modelReference = model;\n  modelReference.lastRecognitionPositions.lastReceivedPosition = modelReference.lastRecognitionPositions.lastSentPosition;\n  return modelReference;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3CommonRestRecognizer.js","import { modelLogger as logger } from '../configuration/LoggerConfig';\nimport * as StrokeComponent from './StrokeComponent';\nimport MyScriptJSConstants from '../configuration/MyScriptJSConstants';\nimport { getSymbolsBounds, getDefaultSymbols } from './Symbol';\n\n/**\n * Recognition positions\n * @typedef {Object} RecognitionPositions\n * @property {Number} lastSentPosition Index of the last sent stroke.\n * @property {Number} lastReceivedPosition Index of the last received stroke.\n */\n\n/**\n * InkPaper model\n * @typedef {Object} Model\n * @property {String} state Current state of the model. Mainly here for debugging purpose.\n * @property {Stroke} currentStroke Stroke in building process.\n * @property {String} currentRecognitionId Current recognition id.\n * @property {Array<Stroke>} rawStrokes List of captured strokes.\n * @property {RecognitionPositions} lastRecognitionPositions Last recognition sent/received stroke indexes.\n * @property {Array<Object>} defaultSymbols Default symbols, relative to the current recognition type.\n * @property {Array<Object>} recognizedSymbols Symbols to render (e.g. stroke, shape primitives, string, characters...).\n * @property {Object} rawResult The recognition output as return by the recognition service.\n * @property {Number} creationTime Date of creation timestamp.\n * @property {Boolean} canUndo True if undo is available, false otherwise.\n * @property {Boolean} canRedo True if redo is available, false otherwise.\n * @property {Boolean} canClear True if clear is available, false otherwise.\n */\n\n/**\n * Bounding box\n * @typedef {Object} Bounds\n * @property {Number} minX Minimal x coordinate\n * @property {Number} maxX Maximal x coordinate\n * @property {Number} minY Minimal y coordinate\n * @property {Number} maxY Maximal y coordinate\n */\n\n/**\n * Create a new model\n * @param {Options} [options] Parameters to use to populate default recognition symbols\n * @return {Model} New model\n */\nexport function createModel(options) {\n  // see @typedef documentation on top\n  return {\n    state: MyScriptJSConstants.ModelState.INITIALIZING,\n    currentStroke: undefined,\n    currentRecognitionId: undefined,\n    rawStrokes: [],\n    lastRecognitionPositions: {\n      lastSentPosition: -1,\n      lastReceivedPosition: -1\n    },\n    defaultSymbols: options ? getDefaultSymbols(options) : [],\n    recognizedSymbols: undefined,\n    rawResult: undefined,\n    creationTime: new Date().getTime(),\n    canUndo: false,\n    canRedo: false,\n    canClear: true\n  };\n}\n\n/**\n * Check if the model needs to be redrawn.\n * @param {Model} model Current model\n * @return {Boolean} True if the model needs to be redrawn, false otherwise\n */\nexport function needRedraw(model) {\n  return model.recognizedSymbols ? (model.rawStrokes.length !== model.recognizedSymbols.filter(symbol => symbol.type === 'stroke').length) : false;\n}\n\n/**\n * Mutate the model given in parameter by adding the new strokeToAdd.\n * @param {Model} model Current model\n * @param {Stroke} stroke Stroke to be added to pending ones\n * @return {Model} Updated model\n */\nexport function addStroke(model, stroke) {\n  // We use a reference to the model. The purpose here is to update the pending stroke only.\n  const modelReference = model;\n  modelReference.rawStrokes.push(stroke);\n  return modelReference;\n}\n\n/**\n * Get the strokes that needs to be recognized\n * @param {Model} model Current model\n * @param {Number} [position=lastReceived] Index from where to extract strokes\n * @return {Array<Stroke>} Pending strokes\n */\nexport function extractPendingStrokes(model, position = model.lastRecognitionPositions.lastReceivedPosition + 1) {\n  return model.rawStrokes.slice(position);\n}\n\n/**\n * Mutate the model by adding a point and close the current stroke.\n * @param {Model} model Current model\n * @param {{x: Number, y: Number, t: Number}} point Captured point to create current stroke\n * @param {Object} properties Properties to be applied to the current stroke\n * @return {Model} Updated model\n */\nexport function initPendingStroke(model, point, properties) {\n  const modelReference = model;\n  logger.debug('initPendingStroke', point);\n  // Setting the current stroke to an empty one\n  modelReference.currentStroke = StrokeComponent.createStrokeComponent(properties);\n  modelReference.currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n  return modelReference;\n}\n\n/**\n * Mutate the model by adding a point to the current pending stroke.\n * @param {Model} model Current model\n * @param {{x: Number, y: Number, t: Number}} point Captured point to be append to the current stroke\n * @return {Model} Updated model\n */\nexport function appendToPendingStroke(model, point) {\n  const modelReference = model;\n  logger.debug('appendToPendingStroke', point);\n  modelReference.currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n  return modelReference;\n}\n\n/**\n * Mutate the model by adding the new point on a initPendingStroke.\n * @param {Model} model Current model\n * @param {{x: Number, y: Number, t: Number}} point Captured point to be append to the current stroke\n * @return {Model} Updated model\n */\nexport function endPendingStroke(model, point) {\n  const modelReference = model;\n  logger.debug('endPendingStroke', point);\n  const currentStroke = StrokeComponent.addPoint(modelReference.currentStroke, point);\n  // Mutating pending strokes\n  addStroke(modelReference, currentStroke);\n  // Resetting the current stroke to an undefined one\n  delete modelReference.currentStroke;\n  return modelReference;\n}\n/**\n * Get the bounds of the current model.\n * @param {Model} model Current model\n * @return {Bounds} Bounding box enclosing the current drawn model\n */\nexport function getBorderCoordinates(model) {\n  let modelBounds = { minX: Number.MAX_VALUE, maxX: Number.MIN_VALUE, minY: Number.MAX_VALUE, maxY: Number.MIN_VALUE };\n\n  // Default symbols\n  if (model.defaultSymbols && model.defaultSymbols.length > 0) {\n    modelBounds = getSymbolsBounds(model.defaultSymbols, modelBounds);\n  }\n  // Recognized symbols\n  if (model.recognizedSymbols && model.recognizedSymbols.length > 0) {\n    modelBounds = getSymbolsBounds(model.recognizedSymbols, modelBounds);\n    // Pending strokes\n    modelBounds = getSymbolsBounds(extractPendingStrokes(model), modelBounds);\n  } else {\n    modelBounds = getSymbolsBounds(model.rawStrokes, modelBounds);\n  }\n  return modelBounds;\n}\n\n/**\n * Extract strokes from an ink range\n * @param {Model} model Current model\n * @param {Number} firstStroke First stroke index to extract\n * @param {Number} lastStroke Last stroke index to extract\n * @param {Number} firstPoint First point index to extract\n * @param {Number} lastPoint Last point index to extract\n * @return {Array<Stroke>} The extracted strokes\n */\nexport function extractStrokesFromInkRange(model, firstStroke, lastStroke, firstPoint, lastPoint) {\n  return model.rawStrokes.slice(firstStroke, lastStroke + 1).map((stroke, index, slicedStrokes) => {\n    if (slicedStrokes.length < 2) {\n      return StrokeComponent.slice(stroke, firstPoint, lastPoint + 1);\n    }\n    if (index === 0) {\n      return StrokeComponent.slice(stroke, firstPoint);\n    }\n    if (index === (slicedStrokes.length - 1)) {\n      return StrokeComponent.slice(stroke, 0, lastPoint + 1);\n    }\n    return stroke;\n  });\n}\n\n/**\n * Clone model\n * @param {Model} model Current model\n * @return {Model} Clone of the current model\n */\nexport function cloneModel(model) {\n  const clonedModel = Object.assign({}, model);\n  // We clone the properties that need to be. Take care of arrays.\n  clonedModel.defaultSymbols = [...model.defaultSymbols];\n  clonedModel.currentStroke = model.currentStroke ? Object.assign({}, model.currentStroke) : undefined;\n  clonedModel.rawStrokes = [...model.rawStrokes];\n  clonedModel.lastRecognitionPositions = Object.assign({}, model.lastRecognitionPositions);\n  clonedModel.rawResult = model.rawResult ? Object.assign({}, model.rawResult) : undefined;\n  clonedModel.recognizedSymbols = model.recognizedSymbols ? [...model.recognizedSymbols] : undefined;\n  return clonedModel;\n}\n\n/**\n * Merge models\n * @param {Array<Model>} models Models to merge (ordered)\n * @return {Model} Updated model\n */\nexport function mergeModels(...models) {\n  return models.reduce((a, b) => {\n    const modelRef = a;\n    modelRef.state = b.state;\n    modelRef.recognizedSymbols = b.recognizedSymbols;\n    modelRef.lastRecognitionPositions.lastReceivedPosition = b.lastRecognitionPositions.lastReceivedPosition;\n    modelRef.rawResult = b.rawResult;\n    modelRef.canUndo = b.canUndo;\n    modelRef.canRedo = b.canRedo;\n    modelRef.canClear = b.canClear;\n    return modelRef;\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model/InkModel.js","import { MusicClefs } from '../renderer/canvas/symbols/MusicSymbolCanvasRenderer';\nimport MyScriptJSConstants from '../configuration/MyScriptJSConstants';\n\nfunction mergeBounds(boundsA, boundsB) {\n  return {\n    minX: Math.min(boundsA.minX, boundsB.minX),\n    maxX: Math.max(boundsA.maxX, boundsB.maxX),\n    minY: Math.min(boundsA.minY, boundsB.minY),\n    maxY: Math.max(boundsA.maxY, boundsB.maxY)\n  };\n}\n\nfunction getLineBounds(line) {\n  return {\n    minX: Math.min(line.firstPoint.x, line.lastPoint.x),\n    maxX: Math.max(line.firstPoint.x, line.lastPoint.x),\n    minY: Math.min(line.firstPoint.y, line.lastPoint.y),\n    maxY: Math.max(line.firstPoint.y, line.lastPoint.y)\n  };\n}\n\nfunction getEllipseBounds(ellipse) {\n  const angleStep = 0.02; // angle delta between interpolated points on the arc, in radian\n\n  let z1 = Math.cos(ellipse.orientation);\n  let z3 = Math.sin(ellipse.orientation);\n  let z2 = z1;\n  let z4 = z3;\n  z1 *= ellipse.maxRadius;\n  z2 *= ellipse.minRadius;\n  z3 *= ellipse.maxRadius;\n  z4 *= ellipse.minRadius;\n\n  const n = Math.abs(ellipse.sweepAngle) / angleStep;\n\n  const x = [];\n  const y = [];\n\n  for (let i = 0; i <= n; i++) {\n    const angle = ellipse.startAngle + ((i / n) * ellipse.sweepAngle);\n    const alpha = Math.atan2(Math.sin(angle) / ellipse.minRadius, Math.cos(angle) / ellipse.maxRadius);\n\n    const cosAlpha = Math.cos(alpha);\n    const sinAlpha = Math.sin(alpha);\n\n    x.push(ellipse.center.x + ((z1 * cosAlpha) - (z4 * sinAlpha)));\n    y.push(ellipse.center.y + ((z2 * sinAlpha) + (z3 * cosAlpha)));\n  }\n\n  return {\n    minX: Math.min(...x),\n    maxX: Math.max(...x),\n    minY: Math.min(...y),\n    maxY: Math.max(...y)\n  };\n}\n\nfunction getTextLineBounds(textLine) {\n  return {\n    minX: textLine.data.topLeftPoint.x,\n    maxX: textLine.data.topLeftPoint.x + textLine.data.width,\n    minY: textLine.data.topLeftPoint.y,\n    maxY: textLine.data.topLeftPoint.y + textLine.data.height\n  };\n}\n\nfunction getClefBounds(clef) {\n  return {\n    minX: clef.boundingBox.x,\n    maxX: clef.boundingBox.x + clef.boundingBox.width,\n    minY: clef.boundingBox.y,\n    maxY: clef.boundingBox.y + clef.boundingBox.height\n  };\n}\n\nfunction getStrokeBounds(stroke) {\n  return {\n    minX: Math.min(...stroke.x),\n    maxX: Math.max(...stroke.x),\n    minY: Math.min(...stroke.y),\n    maxY: Math.max(...stroke.y)\n  };\n}\n\n/**\n * Get the box enclosing the given symbols\n * @param {Array} symbols Symbols to extract bounds from\n * @param {Bounds} [bounds] Starting bounds for recursion\n * @return {Bounds} Bounding box enclosing symbols\n */\nexport function getSymbolsBounds(symbols, bounds = { minX: Number.MAX_VALUE, maxX: Number.MIN_VALUE, minY: Number.MAX_VALUE, maxY: Number.MIN_VALUE }) {\n  let boundsRef = bounds;\n  boundsRef = symbols\n      .filter(symbol => symbol.type === 'stroke')\n      .map(getStrokeBounds)\n      .reduce(mergeBounds, boundsRef);\n  boundsRef = symbols\n      .filter(symbol => symbol.type === 'clef')\n      .map(getClefBounds)\n      .reduce(mergeBounds, boundsRef);\n  boundsRef = symbols\n      .filter(symbol => symbol.type === 'line')\n      .map(getLineBounds)\n      .reduce(mergeBounds, boundsRef);\n  boundsRef = symbols\n      .filter(symbol => symbol.type === 'ellipse')\n      .map(getEllipseBounds)\n      .reduce(mergeBounds, boundsRef);\n  boundsRef = symbols\n      .filter(symbol => symbol.type === 'textLine')\n      .map(getTextLineBounds)\n      .reduce(mergeBounds, boundsRef);\n  return boundsRef;\n}\n\nfunction getDefaultMusicSymbols(options) {\n  const defaultStaff = Object.assign({}, { type: 'staff' }, options.recognitionParams.musicParameter.staff);\n  const defaultClef = {\n    type: 'clef',\n    value: Object.assign({}, options.recognitionParams.musicParameter.clef)\n  };\n  defaultClef.value.yAnchor = defaultStaff.top + (defaultStaff.gap * (defaultStaff.count - defaultClef.value.line));\n  delete defaultClef.value.line;\n  defaultClef.boundingBox = MusicClefs[defaultClef.value.symbol].getBoundingBox(defaultStaff.gap, 0, defaultClef.value.yAnchor);\n  return [defaultStaff, defaultClef];\n}\n\n/**\n * Get the default symbols for the current recognition type\n * @param {Options} options Current recognition parameters from which extract default symbols\n * @return {Array} Symbols matching configuration\n */\nexport function getDefaultSymbols(options) {\n  switch (options.recognitionParams.type) {\n    case MyScriptJSConstants.RecognitionType.MUSIC:\n      return getDefaultMusicSymbols(options);\n    default:\n      return [];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model/Symbol.js","import { rendererLogger as logger } from '../../../configuration/LoggerConfig';\nimport { drawLine } from './ShapeSymbolCanvasRenderer';\n\n/**\n * @type {{F: {svg: String, getBoundingBox: function}, C: {svg: String, getBoundingBox: function}, G: {svg: String, getBoundingBox: function}}}\n */\nexport const MusicClefs = { // constants was calculated from the svg image, so it should remains together\n  F: {\n    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"18\" height=\"20\"><g transform=\"translate(6.600000e-3,3.125356e-3)\"><path d=\"M17.3 3.1 C17.3 3.5 17.1 3.8 16.8 4.1 C16.5 4.4 15.9 4.5 15.5 4.3 C15 4.1 14.7 3.7 14.7 3.2 C14.6 2.8 14.8 2.5 15 2.2 C15.3 1.9 15.7 1.8 16 1.8 C16.4 1.8 16.8 2 17 2.3 C17.2 2.5 17.3 2.8 17.3 3.1 z\"/><path d=\"M17.3 8.9 C17.3 9.3 17.1 9.7 16.8 9.9 C16.5 10.3 15.9 10.3 15.5 10.2 C15 10 14.7 9.5 14.7 9.1 C14.6 8.7 14.8 8.3 15 8 C15.3 7.8 15.7 7.6 16 7.6 C16.5 7.7 17 8 17.2 8.4 C17.2 8.6 17.3 8.8 17.3 8.9 z\"/><path d=\"M13 7.2 C13 10 11.8 12.7 9.8 14.7 C7.3 17.2 4 18.8 0.7 19.8 C0.3 20.1 -0.4 19.8 0.3 19.4 C1.6 18.8 3 18.3 4.2 17.5 C7 15.8 9.3 13.1 9.8 9.9 C10.1 8 10.1 5.9 9.6 4 C9.2 2.6 8.2 1.1 6.7 0.9 C5.3 0.7 3.7 1.2 2.7 2.2 C2.5 2.4 2 3.2 2 4 C2.6 3.6 2.6 3.6 3.1 3.4 C4.2 2.9 5.7 3.6 6 4.9 C6.3 6 6.1 7.5 5 8.1 C3.8 8.7 2 8.5 1.4 7.2 C0.3 5.3 0.9 2.6 2.6 1.2 C4.4 -0.3 7.1 -0.3 9.2 0.4 C11.4 1.3 12.7 3.5 12.9 5.8 C13 6.2 13 6.7 13 7.2 z\"/></g></svg>',\n    getBoundingBox: (gap, xAnchor, yAnchor) => ({\n      height: gap * 3,\n      width: (gap * 3) * (18 / 20),\n      x: xAnchor,\n      y: yAnchor - gap\n    })\n  },\n  C: {\n    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"18\" height=\"25\"><g transform=\"matrix(1,0,0,1.030698,-309.364,-543.8647)\"><path d=\"M 325.9 546.8 C 325.8 548.7 324.7 550.7 322.8 551.5 C 321.1 552.1 319.1 552.2 317.6 551 C 316.6 550.2 316.2 548.4 317.3 547.5 C 318.3 546.5 320.4 547.4 320.3 548.9 C 320.7 549.9 318.5 550.5 319.7 551.3 C 321 551.6 322.3 550.5 322.6 549.3 C 323.1 547.5 323.1 545.6 322.7 543.8 C 322.4 542.9 321.9 541.5 320.7 541.9 C 319.2 542.2 318.3 543.8 317.9 545.1 C 317.6 543.2 316.4 541.5 315 540.2 C 315 544.1 315 548 315 551.9 L 314.1 551.9 C 314.1 543.9 314.1 535.7 314.1 527.7 L 315 527.7 C 315 531.5 315 535.5 315 539.4 C 316.4 538.1 317.6 536.4 317.8 534.5 C 318.3 535.9 319.3 537.5 321 537.8 C 322.2 537.8 322.5 536.3 322.8 535.4 C 323.1 533.7 323.1 531.8 322.6 530.1 C 322.2 529 320.9 528 319.6 528.3 C 318.6 529 320.6 529.6 320.3 530.6 C 320.5 532 318.8 533 317.6 532.3 C 316.3 531.6 316.4 529.7 317.4 528.8 C 318 528.1 319.3 527.7 320.3 527.7 C 321.2 527.7 321.8 527.7 322.6 528 C 324.6 528.7 325.7 530.7 325.9 532.7 C 326.2 534.9 324.9 537.3 322.8 538.2 C 321.5 538.7 319.9 538.3 318.8 537.3 C 318.7 538.3 318.2 539.2 317.7 539.9 C 318.1 540.6 318.6 541.8 318.8 542.1 C 320.1 540.9 322.5 540.8 323.8 542 C 325.2 543.1 326.1 545 325.9 546.8 z \"/></g><g transform=\"matrix(1,0,0,1.030928,-309.364,-543.9805)\"><path d=\"M 312.2 551.9 L 309.4 551.9 L 309.4 527.7 L 312.2 527.7 L 312.2 551.9 z \"/></g></svg>',\n    getBoundingBox: (gap, xAnchor, yAnchor) => ({\n      height: gap * 3,\n      width: (gap * 3) * (18 / 25),\n      x: xAnchor,\n      y: yAnchor - (gap * (3 / 2))\n    })\n  },\n  G: {\n    svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"15\" height=\"40\"><g><path d=\"m 12 3.4 c 0.3 3.1 -2 5.6 -4.1 7.6 -0.9 0.9 -0.2 0.1 -0.6 0.6 -0.1 -0.5 -0.3 -1.7 -0.3 -2.1 0.1 -2.6 2.3 -6.5 4.2 -7.9 0.3 0.6 0.6 0.6 0.8 1.8 z m 0.7 15.9 c -1.2 -0.9 -2.8 -1.1 -4.3 -0.9 -0.2 -1.2 -0.4 -2.5 -0.6 -3.7 2.4 -2.3 4.9 -4.9 5 -8.4 0.1 -2.2 -0.3 -4.6 -1.7 -6.4 C 9.5 0.1 8.3 2.1 7.4 3.3 c -1.5 2.6 -1.1 5.8 -0.6 8.6 -0.8 0.9 -1.9 1.7 -2.7 2.7 -2.4 2.3 -4.4 5.3 -4 8.7 0.2 3.3 2.6 6.3 5.9 7.1 1.2 0.3 2.6 0.3 3.8 0.1 0.2 2.2 1 4.5 0.1 6.7 -0.7 1.6 -2.8 2.9 -4.3 2.2 -0.6 -0.3 -0.1 -0.1 -0.5 -0.2 1.1 -0.3 2 -1 2.3 -1.5 0.8 -1.4 -0.4 -3.6 -2.2 -3.3 -2.3 0 -3.2 3.1 -1.7 4.6 1.3 1.5 3.8 1.3 5.4 0.3 1.8 -1.2 2 -3.5 1.8 -5.5 -0.1 -0.7 -0.4 -2.6 -0.4 -3.3 0.7 -0.2 0.2 -0.1 1.2 -0.4 2.7 -1 4.4 -4.2 3.6 -7 -0.3 -1.4 -1 -2.9 -2.3 -3.7 z m 0.6 5.7 c 0.2 2 -1.1 4.2 -3.1 4.9 -0.1 -0.8 -0.2 -1 -0.3 -1.4 -0.5 -2.4 -0.7 -4.9 -1.1 -7.3 1.6 -0.2 3.5 0.5 4 2.1 0.2 0.6 0.3 1.2 0.4 1.8 z m -5.1 5.1 c -2.5 0.1 -5 -1.6 -5.6 -4 -0.7 -2.1 -0.5 -4.5 0.8 -6.4 1.1 -1.7 2.6 -3 4 -4.5 0.2 1.1 0.4 2.2 0.5 3.3 -3 0.8 -5 4.6 -3.2 7.3 0.5 0.8 2 2.2 2.8 1.6 -1.1 -0.7 -2 -1.8 -1.8 -3.2 -0.1 -1.3 1.4 -2.9 2.7 -3.1 0.4 2.8 0.9 6 1.4 8.8 -0.5 0.1 -1 0.1 -1.5 0.1 z\"/></g></svg>',\n    getBoundingBox: (gap, xAnchor, yAnchor) => ({\n      height: gap * (15 / 2),\n      width: (gap * (15 / 2)) * (15 / 40),\n      x: xAnchor,\n      y: yAnchor - (gap * (9 / 2))\n    })\n  }\n};\n\n/**\n * @type {{accidental: String, arpeggiate: String, bar: String, beam: String, clef: String, decoration: String, dots: String, head: String, ledgerLine: String, rest: String, staff: String, stem: String, tieOrSlur: String, timeSignature: String}}\n */\nexport const MusicSymbols = {\n  accidental: 'accidental',\n  arpeggiate: 'arpeggiate',\n  bar: 'bar',\n  beam: 'beam',\n  clef: 'clef',\n  decoration: 'decoration',\n  dots: 'dots',\n  head: 'head',\n  ledgerLine: 'ledgerLine',\n  rest: 'rest',\n  staff: 'staff',\n  stem: 'stem',\n  tieOrSlur: 'tieOrSlur',\n  timeSignature: 'timeSignature',\n};\n\nfunction createImage(clef, src) {\n  // eslint-disable-next-line no-undef\n  const browserDocument = document;\n  const img = browserDocument.createElement('img');\n  img.dataset.clef = clef;\n  img.src = src;\n  img.style.display = 'none';\n  return img;\n}\n\n/**\n * Attach resources to be used to render symbol\n * @param {Element} element DOM element to attach resources\n */\nexport function preloadMusicSymbols(element) {\n  Object.keys(MusicClefs).forEach((key) => {\n    element.appendChild(createImage(key, `data:image/svg+xml,${MusicClefs[key].svg}`));\n  });\n}\n\nfunction drawStaff(context, staff) {\n  for (let i = 0; i < staff.count; i++) {\n    const p1 = { x: 0, y: staff.top + (i * staff.gap) };\n    const p2 = { x: context.canvas.width, y: staff.top + (i * staff.gap) };\n    drawLine(context, p1, p2);\n  }\n}\n\nfunction drawClef(context, clef) {\n  // eslint-disable-next-line no-undef\n  context.drawImage(document.querySelector(`img[data-clef=${clef.value.symbol}]`), clef.boundingBox.x, clef.boundingBox.y, clef.boundingBox.width, clef.boundingBox.height);\n}\n\n/**\n * Draw a music symbol\n * @param {Object} context Current rendering context\n * @param {Object} symbol Symbol to draw\n */\nexport function drawMusicSymbol(context, symbol) {\n  logger.debug(`draw ${symbol.type} symbol`);\n  switch (symbol.type) {\n    case MusicSymbols.clef:\n      drawClef(context, symbol);\n      break;\n    case MusicSymbols.staff:\n      drawStaff(context, symbol);\n      break;\n    default:\n      logger.error(`${symbol.type} not implemented`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/symbols/MusicSymbolCanvasRenderer.js","import { rendererLogger as logger } from '../../../configuration/LoggerConfig';\n\n/**\n * @type {{table: String, shape: String, recognizedShape: String, ellipse: String, line: String}}\n */\nexport const ShapeSymbols = {\n  table: 'table',\n  shape: 'shape',\n  recognizedShape: 'recognizedShape',\n  ellipse: 'ellipse',\n  line: 'line'\n};\n\nfunction phi(angle) {\n  let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI;\n  if (returnedAngle < -Math.PI) {\n    returnedAngle += Math.PI * 2;\n  }\n  return returnedAngle;\n}\n\nfunction drawEllipseArc(context, centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle) {\n  const angleStep = 0.02; // angle delta between interpolated\n\n  let z1 = Math.cos(orientation);\n  let z3 = Math.sin(orientation);\n  let z2 = z1;\n  let z4 = z3;\n  z1 *= maxRadius;\n  z2 *= minRadius;\n  z3 *= maxRadius;\n  z4 *= minRadius;\n\n  const n = Math.floor(Math.abs(sweepAngle) / angleStep);\n\n  const boundariesPoints = [];\n\n  context.save();\n  try {\n    context.beginPath();\n\n    for (let i = 0; i <= n; i++) {\n      const angle = startAngle + ((i / n) * sweepAngle); // points on the arc, in radian\n      const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius);\n\n      const cosAlpha = Math.cos(alpha);\n      const sinAlpha = Math.sin(alpha);\n\n      // current point\n      const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha);\n      const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha);\n      if (i === 0) {\n        context.moveTo(x, y);\n      } else {\n        context.lineTo(x, y);\n      }\n\n      if (i === 0 || i === n) {\n        boundariesPoints.push({ x, y });\n      }\n    }\n\n    context.stroke();\n  } finally {\n    context.restore();\n  }\n\n  return boundariesPoints;\n}\n\nfunction drawArrowHead(context, headPoint, angle, length) {\n  const alpha = phi(angle + (Math.PI * (7 / 8)));\n  const beta = phi(angle - (Math.PI * (7 / 8)));\n\n  const contextReference = context;\n  contextReference.save();\n  try {\n    contextReference.fillStyle = contextReference.strokeStyle;\n\n    contextReference.moveTo(headPoint.x, headPoint.y);\n    contextReference.beginPath();\n    contextReference.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)));\n    contextReference.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)));\n    contextReference.lineTo(headPoint.x, headPoint.y);\n    contextReference.fill();\n  } finally {\n    contextReference.restore();\n  }\n}\n\nfunction drawShapeEllipse(context, shapeEllipse) {\n  const points = drawEllipseArc(\n      context,\n      shapeEllipse.center,\n      shapeEllipse.maxRadius,\n      shapeEllipse.minRadius,\n      shapeEllipse.orientation,\n      shapeEllipse.startAngle,\n      shapeEllipse.sweepAngle);\n\n  if (shapeEllipse.beginDecoration && shapeEllipse.beginDecoration === 'ARROW_HEAD') {\n    drawArrowHead(context, points[0], shapeEllipse.beginTangentAngle, 12.0);\n  }\n  if (shapeEllipse.endDecoration && shapeEllipse.endDecoration === 'ARROW_HEAD') {\n    drawArrowHead(context, points[1], shapeEllipse.endTangentAngle, 12.0);\n  }\n}\n\n/**\n * Draw a line\n * @param {Object} context Current rendering context\n * @param {{x: Number, y: Number}} p1 Origin point\n * @param {{x: Number, y: Number}} p2 Destination point\n */\nexport function drawLine(context, p1, p2) {\n  context.save();\n  try {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.stroke();\n  } finally {\n    context.restore();\n  }\n}\n\nfunction drawShapeLine(context, shapeLine) {\n  drawLine(context, shapeLine.firstPoint, shapeLine.lastPoint);\n  if (shapeLine.beginDecoration === 'ARROW_HEAD') {\n    drawArrowHead(context, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0);\n  }\n  if (shapeLine.endDecoration === 'ARROW_HEAD') {\n    drawArrowHead(context, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0);\n  }\n}\n\n/**\n * Draw a shape symbol\n * @param {Object} context Current rendering context\n * @param {Object} symbol Symbol to draw\n */\nexport function drawShapeSymbol(context, symbol) {\n  logger.debug(`draw ${symbol.type} symbol`);\n  const contextReference = context;\n  contextReference.save();\n  try {\n    contextReference.lineWidth = symbol.width;\n    contextReference.strokeStyle = symbol.color;\n\n    if (symbol.elementType) {\n      switch (symbol.elementType) {\n        case ShapeSymbols.shape:\n          drawShapeSymbol(contextReference, symbol.candidates[symbol.selectedCandidateIndex]);\n          break;\n        case ShapeSymbols.table:\n          symbol.lines.forEach(line => drawShapeSymbol(contextReference, line));\n          break;\n        case ShapeSymbols.line:\n          drawLine(contextReference, symbol.data.p1, symbol.data.p2);\n          break;\n        default:\n          logger.error(`${symbol.elementType} not implemented`);\n          break;\n      }\n    } else {\n      switch (symbol.type) {\n        case ShapeSymbols.ellipse:\n          drawShapeEllipse(contextReference, symbol);\n          break;\n        case ShapeSymbols.line:\n          drawShapeLine(contextReference, symbol);\n          break;\n        case ShapeSymbols.recognizedShape:\n          symbol.primitives.forEach(primitive => drawShapeSymbol(contextReference, primitive));\n          break;\n        default:\n          logger.error(`${symbol.type} not implemented`);\n          break;\n      }\n    }\n  } finally {\n    contextReference.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/symbols/ShapeSymbolCanvasRenderer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\n\n/**\n * Enrich the model with recognized symbols\n * @param {Model} model Current model\n * @return {Model} Updated model\n */\nexport function processRenderingResult(model) {\n  logger.debug('Building the rendering model', model);\n  return model;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/common/Cdkv3CommonTextRecognizer.js","import assign from 'assign-deep';\nimport MyScriptJSConstants from './MyScriptJSConstants';\n\n/**\n * @typedef {Object} ServerParameters\n * @property {String} scheme\n * @property {String} host\n * @property {String} applicationKey\n * @property {String} hmacKey\n */\n\n/**\n * Parameters to be used for rendering\n * @typedef {Object} RenderingParameters\n * @property {String} renderer Renderer type to used\n * @property {String} stroker Stroker name to used\n */\n\n/**\n * Parameters to be used for recognition\n * @typedef {Object} RecognitionParameters\n * @property {String} triggerRecognitionOn\n * @property {Number} triggerRecognitionQuietPeriod\n * @property {Number} triggerCallbacksAndRenderingQuietPeriod\n * @property {String} type Recognition type (TEXT, MATH, SHAPE, MUSIC, ANALYZER).\n * @property {String} protocol REST or WEBSOCKET to choose the API to use.\n * @property {String} apiVersion Version of the api to use.\n * @property {ServerParameters} server\n * @property {Number} nbRetry\n * @property {Number} xyFloatPrecision Precision of x and y from 0 to 10 (integer). More the value is high more precise will be the point capture but object in memory and send to the server will be heavier.\n * @property {Number} timestampFloatPrecision\n * @property {Object} mathParameter Parameters of the math recognition if in use.\n * @property {Object} textParameter Parameters of the text recognition if in use.\n * @property {Object} shapeParameter Parameters of the shape recognition if in use.\n * @property {Object} musicParameter Parameters of the music recognition if in use.\n * @property {Object} analyzerParameter Parameters of the analyzer recognition if in use.\n */\n\n/**\n * {@link InkPaper} options\n * @typedef {Object} Options\n * @property {Number} undoRedoMaxStackSize Number of strokes keep in undo redo stack.\n * @property {RenderingParameters} renderingParams Rendering parameters.\n * @property {RecognitionParameters} recognitionParams Recognition parameters.\n */\n\n/**\n * Default options\n * @type {Options}\n */\nconst defaultOptions = {\n  // see @typedef documentation on top\n  undoRedoMaxStackSize: 20,\n  renderingParams: {\n    renderer: 'canvas',\n    stroker: 'quadratic'\n  },\n  recognitionParams: {\n    // Configure when the recognition is trigger.\n    // PEN_UP : Recognition is triggered on every PenUP. This is the recommended mode for CDK V3 WebSocket recognitions.\n    // QUIET_PERIOD : Recognition is triggered after a quiet period in milli-seconds on every pen up. I value is set to 2000 for example the recognition will be fired  when user stop writing 2 seconds. This is the recommended mode for all REST recognitions.\n    triggerRecognitionOn: MyScriptJSConstants.RecognitionTrigger.PEN_UP,\n    triggerRecognitionQuietPeriod: 2000,\n    // When recognition is in PEN_UP mode, quiet period duration in millisecond while inkPaper wait for another recognition before triggering the display and the call to configured callbacks.\n    triggerCallbacksAndRenderingQuietPeriod: 1000,\n    type: MyScriptJSConstants.RecognitionType.TEXT,\n    protocol: MyScriptJSConstants.Protocol.WEBSOCKET,\n    apiVersion: 'V3',\n    server: {\n      scheme: 'https',\n      host: 'cloud-internal-stable.visionobjects.com',\n      applicationKey: '64e1afbf-f3a7-4d04-bce1-24b05ee0b2d6',\n      hmacKey: '88d81b71-13cd-41a0-9206-ba367c21900f',\n      maxRetryCount: 2,\n      websocket: {\n        maxPingLostCount: 10,\n        pingIntervalMillis: 1500,\n        // Will try to reconnect when websocket is close or when a timeout is detected. Do not handle the case when user change network on his device.\n        autoReconnect: true\n      }\n    },\n    xyFloatPrecision: 0,\n    timestampFloatPrecision: 0,\n    mathParameter: {\n      resultTypes: [],\n      columnarOperation: false,\n      userResources: [],\n      scratchOutDetectionSensitivity: 1,\n    },\n    textParameter: {\n      language: 'en_US',\n      textInputMode: MyScriptJSConstants.InputMode.CURSIVE,\n      resultDetail: MyScriptJSConstants.ResultDetail.TEXT,\n      textProperties: {\n        textCandidateListSize: 3\n      }\n    },\n    shapeParameter: {\n      rejectDetectionSensitivity: 1,\n      doBeautification: true\n    },\n    musicParameter: {\n      divisions: 480,\n      resultTypes: ['MUSICXML', 'SCORETREE'],\n      userResources: [],\n      staff: {\n        top: 100,\n        count: 5,\n        gap: 20\n      },\n      clef: {\n        symbol: 'G',\n        octave: 0,\n        line: 2\n      }\n    },\n    analyzerParameter: {\n      textParameter: {\n        textProperties: {},\n        language: 'en_US',\n        textInputMode: MyScriptJSConstants.InputMode.CURSIVE\n      }\n    }\n  }\n};\n\n/**\n * Generate parameters\n * @param {Options} options Configuration to be used\n * @return {Options} Overridden configuration\n */\nexport function overrideDefaultOptions(options) {\n  return assign({}, defaultOptions, options === undefined ? {} : options);\n}\n\nexport default defaultOptions;\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/MyScriptJSOptions.js","/*!\n * assign-deep <https://github.com/jonschlinkert/assign-deep>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isPrimitive = require('is-primitive');\nvar assignSymbols = require('assign-symbols');\nvar typeOf = require('kind-of');\n\nfunction assign(target/*, objects*/) {\n  target = target || {};\n  var len = arguments.length, i = 0;\n  if (len === 1) {\n    return target;\n  }\n  while (++i < len) {\n    var val = arguments[i];\n    if (isPrimitive(target)) {\n      target = val;\n    }\n    if (isObject(val)) {\n      extend(target, val);\n    }\n  }\n  return target;\n}\n\n/**\n * Shallow extend\n */\n\nfunction extend(target, obj) {\n  assignSymbols(target, obj);\n\n  for (var key in obj) {\n    if (hasOwn(obj, key)) {\n      var val = obj[key];\n      if (isObject(val)) {\n        if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\n          target[key] = val;\n        }\n        target[key] = assign(target[key] || {}, val);\n      } else {\n        target[key] = val;\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Returns true if the object is a plain object or a function.\n */\n\nfunction isObject(obj) {\n  return typeOf(obj) === 'object' || typeOf(obj) === 'function';\n}\n\n/**\n * Returns true if the given `key` is an own property of `obj`.\n */\n\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Expose `assign`\n */\n\nmodule.exports = assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/assign-deep/index.js\n// module id = 54\n// module chunks = 0","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/is-primitive/index.js\n// module id = 55\n// module chunks = 0","/*!\n * assign-symbols <https://github.com/jonschlinkert/assign-symbols>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function(receiver, objects) {\n  if (receiver === null || typeof receiver === 'undefined') {\n    throw new TypeError('expected first argument to be an object.');\n  }\n\n  if (typeof objects === 'undefined' || typeof Symbol === 'undefined') {\n    return receiver;\n  }\n\n  if (typeof Object.getOwnPropertySymbols !== 'function') {\n    return receiver;\n  }\n\n  var isEnumerable = Object.prototype.propertyIsEnumerable;\n  var target = Object(receiver);\n  var len = arguments.length, i = 0;\n\n  while (++i < len) {\n    var provider = Object(arguments[i]);\n    var names = Object.getOwnPropertySymbols(provider);\n\n    for (var j = 0; j < names.length; j++) {\n      var key = names[j];\n\n      if (isEnumerable.call(provider, key)) {\n        target[key] = provider[key];\n      }\n    }\n  }\n  return target;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/assign-symbols/index.js\n// module id = 56\n// module chunks = 0","var isBuffer = require('is-buffer');\nvar toString = Object.prototype.toString;\n\n/**\n * Get the native `typeof` a value.\n *\n * @param  {*} `val`\n * @return {*} Native javascript type\n */\n\nmodule.exports = function kindOf(val) {\n  // primitivies\n  if (typeof val === 'undefined') {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (val === true || val === false || val instanceof Boolean) {\n    return 'boolean';\n  }\n  if (typeof val === 'string' || val instanceof String) {\n    return 'string';\n  }\n  if (typeof val === 'number' || val instanceof Number) {\n    return 'number';\n  }\n\n  // functions\n  if (typeof val === 'function' || val instanceof Function) {\n    return 'function';\n  }\n\n  // array\n  if (typeof Array.isArray !== 'undefined' && Array.isArray(val)) {\n    return 'array';\n  }\n\n  // check for instances of RegExp and Date before calling `toString`\n  if (val instanceof RegExp) {\n    return 'regexp';\n  }\n  if (val instanceof Date) {\n    return 'date';\n  }\n\n  // other objects\n  var type = toString.call(val);\n\n  if (type === '[object RegExp]') {\n    return 'regexp';\n  }\n  if (type === '[object Date]') {\n    return 'date';\n  }\n  if (type === '[object Arguments]') {\n    return 'arguments';\n  }\n  if (type === '[object Error]') {\n    return 'error';\n  }\n\n  // buffer\n  if (typeof Buffer !== 'undefined' && isBuffer(val)) {\n    return 'buffer';\n  }\n\n  // es6: Map, WeakMap, Set, WeakSet\n  if (type === '[object Set]') {\n    return 'set';\n  }\n  if (type === '[object WeakSet]') {\n    return 'weakset';\n  }\n  if (type === '[object Map]') {\n    return 'map';\n  }\n  if (type === '[object WeakMap]') {\n    return 'weakmap';\n  }\n  if (type === '[object Symbol]') {\n    return 'symbol';\n  }\n\n  // typed arrays\n  if (type === '[object Int8Array]') {\n    return 'int8array';\n  }\n  if (type === '[object Uint8Array]') {\n    return 'uint8array';\n  }\n  if (type === '[object Uint8ClampedArray]') {\n    return 'uint8clampedarray';\n  }\n  if (type === '[object Int16Array]') {\n    return 'int16array';\n  }\n  if (type === '[object Uint16Array]') {\n    return 'uint16array';\n  }\n  if (type === '[object Int32Array]') {\n    return 'int32array';\n  }\n  if (type === '[object Uint32Array]') {\n    return 'uint32array';\n  }\n  if (type === '[object Float32Array]') {\n    return 'float32array';\n  }\n  if (type === '[object Float64Array]') {\n    return 'float64array';\n  }\n\n  // must be a plain object\n  return 'object';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/kind-of/index.js\n// module id = 57\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/buffer/index.js\n// module id = 58\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return b64.length * 3 / 4 - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, j, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr(len * 3 / 4 - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/base64-js/index.js\n// module id = 59\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/ieee754/index.js\n// module id = 60\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/buffer/~/isarray/index.js\n// module id = 61\n// module chunks = 0","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/is-buffer/index.js\n// module id = 62\n// module chunks = 0","import { inkpaperLogger as logger } from './configuration/LoggerConfig';\nimport * as MyScriptJSBehaviors from './configuration/MyScriptJSBehaviors';\nimport * as MyScriptJSOptions from './configuration/MyScriptJSOptions';\nimport * as MyScriptJSStyles from './configuration/MyScriptJSStyles';\nimport * as InkModel from './model/InkModel';\nimport * as UndoRedoContext from './model/UndoRedoContext';\nimport * as UndoRedoManager from './model/UndoRedoManager';\nimport * as ModelStats from './util/ModelStats';\nimport * as ImageRenderer from './renderer/canvas/ImageRenderer';\nimport * as RecognizerContext from './model/RecognizerContext';\nimport MyScriptJSConstants from './configuration/MyScriptJSConstants';\n\n/**\n * Check if a reset is required, and does it if it is\n * @param {Recognizer} recognizer Current recognizer\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nfunction manageResetState(recognizer, options, model, recognizerContext) {\n  const isResetRequired = () => {\n    if (recognizerContext.lastRecognitionPositions) {\n      return recognizerContext.lastRecognitionPositions.lastSentPosition >= model.rawStrokes.length - 1;\n    }\n    return false;\n  };\n\n  if (isResetRequired()) {\n    logger.debug('Reset is needed');\n    return recognizer.reset(options, model, recognizerContext);\n  }\n  return Promise.resolve(model);\n}\n\n/**\n * Check if the recognition mode in parameter is the one configured.\n * @param {InkPaper} inkPaper\n * @param {String} recognitionMode\n * @return {Boolean}\n */\nfunction isRecognitionModeConfigured(inkPaper, recognitionMode) {\n  return inkPaper.recognizer &&\n      inkPaper.options.recognitionParams.triggerRecognitionOn === MyScriptJSConstants.RecognitionTrigger[recognitionMode] &&\n      inkPaper.recognizer.getInfo().availableTriggers.includes(MyScriptJSConstants.RecognitionTrigger[recognitionMode]);\n}\n\n/**\n * Trigger an error event\n * @param {Object} error\n * @param {Element} domElement\n * @return {Object}\n */\nfunction raiseError(error, domElement) {\n  logger.debug('emitting error event', error);\n  // We are making usage of a browser provided class\n  // eslint-disable-next-line no-undef\n  domElement.dispatchEvent(new CustomEvent('error', { detail: error }));\n  return error;\n}\n\n/**\n * Trigger callbacks\n * @param {Array} callbacks\n * @param {Model} model\n * @param {Element} element\n * @return {Model}\n */\nfunction triggerCallBacks(callbacks, model, element) {\n  callbacks.forEach(callback => callback.call(element, model));\n  return model;\n}\n\n/**\n * Handle model change\n * @param {InkPaper} inkPaper\n * @param {Model} model\n * @return {Model}\n */\nfunction modelChangedCallback(inkPaper, model) {\n  logger.info('model changed callback', model);\n  inkPaper.renderer.drawModel(inkPaper.rendererContext, model, inkPaper.stroker);\n  return triggerCallBacks(inkPaper.callbacks, model, inkPaper.domElement);\n}\n\n/**\n * Trigger rendering after delay\n * @param {InkPaper} inkPaper\n * @param {Model} model\n * @return {Promise.<Model>}\n */\nfunction triggerRenderingAndCallbackAfterDelay(inkPaper, model) {\n  const inkPaperRef = inkPaper;\n  return new Promise((resolve) => {\n    /* eslint-disable no-undef*/\n    window.clearTimeout(inkPaper.resulttimer);\n    inkPaperRef.resulttimer = window.setTimeout(() => {\n      resolve(modelChangedCallback(inkPaperRef, model));\n    }, inkPaperRef.options.recognitionParams.triggerCallbacksAndRenderingQuietPeriod);\n    /* eslint-enable no-undef */\n  });\n}\n\n/**\n * Launch the recognition with all inkPaper relative configuration and state.\n * @param {InkPaper} inkPaper\n * @param {Model} modelToRecognize\n * @return {Promise.<Model>}\n */\nfunction launchRecognition(inkPaper, modelToRecognize) {\n  // In websocket mode as we are sending strokes on every pen up it, recognition events comes to often and degrade the user experience. options allows to set up a timeout. When recognition is in PEN_UP mode, quiet period duration in millisecond while inkPaper wait for anoter recognition before triggering the display and the call to configured callbacks.\n  const renderAndFireAfterTimeoutIfRequired = (model) => {\n    if (isRecognitionModeConfigured(inkPaper, MyScriptJSConstants.RecognitionTrigger.PEN_UP) && inkPaper.options.recognitionParams.triggerCallbacksAndRenderingQuietPeriod > 0) {\n      return triggerRenderingAndCallbackAfterDelay(inkPaper, model);\n    } // else\n    return modelChangedCallback(inkPaper, model);\n  };\n\n  const mergeModelsCallback = (modelRecognized) => {\n    logger.debug('recognition callback', modelRecognized);\n    const modelRef = modelRecognized;\n    modelRef.state = MyScriptJSConstants.ModelState.PROCESSING_RECOGNITION_RESULT;\n\n    // Merge recognized model if relevant and return current inkPaper model\n    if ((modelRef.creationTime === inkPaper.model.creationTime) &&\n        (modelRef.rawStrokes.length === inkPaper.model.rawStrokes.length) &&\n        (modelRef.lastRecognitionPositions.lastSentPosition >= inkPaper.model.lastRecognitionPositions.lastReceivedPosition)) {\n      modelRef.state = MyScriptJSConstants.ModelState.RECOGNITION_OVER;\n      const inkPaperRef = inkPaper;\n      inkPaperRef.model = InkModel.mergeModels(inkPaperRef.model, modelRef);\n      return renderAndFireAfterTimeoutIfRequired(inkPaperRef.model);\n    }\n    return modelRef;\n  };\n\n  // If strokes moved in the undo redo stack then a reset is mandatory before sending strokes.\n  return manageResetState(inkPaper.recognizer, inkPaper.options, modelToRecognize, inkPaper.recognizerContext)\n      .then(managedModel =>\n                inkPaper.recognizer.recognize(inkPaper.options, managedModel, inkPaper.recognizerContext)\n                    .then(mergeModelsCallback)\n                    .catch((error) => {\n                      const modelRef = managedModel;\n                      // Handle any error from all above steps\n                      modelRef.state = MyScriptJSConstants.ModelState.RECOGNITION_ERROR;\n                      // TODO Manage a retry\n                      // TODO Send different callbacks on error\n                      modelChangedCallback(inkPaper, modelRef);\n                      logger.error('Error while firing  the recognition');\n                      logger.info(error.stack);\n                      raiseError(error, inkPaper.domElement);\n                    })\n      )\n      .catch((connexionError) => {\n        logger.info('Unable to manage recognizer state', connexionError.stack);\n        raiseError(connexionError, inkPaper.domElement);\n      });\n}\n\n/**\n * Do all the stuff required to launch a timeout recognition.\n * @param {InkPaper} inkPaper\n * @param {Model} modelToRecognize\n * @return {Promise.<Model>}\n */\nfunction askForTimeOutRecognition(inkPaper, modelToRecognize) {\n  const inkPaperRef = inkPaper;\n  return new Promise((resolve) => {\n    /* eslint-disable no-undef*/\n    window.clearTimeout(inkPaperRef.recotimer);\n    inkPaperRef.recotimer = window.setTimeout(() => {\n      resolve(launchRecognition(inkPaperRef, modelToRecognize));\n    }, inkPaperRef.options.recognitionParams.triggerRecognitionQuietPeriod);\n    /* eslint-enable no-undef */\n  });\n}\n\n\n/**\n * Update model in inkPaper and ask for timeout recognition if it is the mode configured.\n * @param {InkPaper} inkPaper\n * @param {Model} model\n * @return {Promise.<Model>}\n */\nfunction updateModelAndAskForRecognition(inkPaper, model) {\n  return new Promise((resolve) => {\n    modelChangedCallback(inkPaper, model);\n    if (InkModel.extractPendingStrokes(model).length > 0 && isRecognitionModeConfigured(inkPaper, MyScriptJSConstants.RecognitionTrigger.QUIET_PERIOD)) {\n      resolve(askForTimeOutRecognition(inkPaper, model));\n    } else {\n      resolve(model);\n    }\n  });\n}\n\n/**\n * Inner function with all the logic on penUp.\n * @param {InkPaper} inkPaper\n * @return {Model}\n */\nfunction managePenUp(inkPaper) {\n  const modelRef = inkPaper.model;\n  modelRef.state = MyScriptJSConstants.ModelState.ASKING_FOR_RECOGNITION;\n  // Push model in undo redo manager\n  UndoRedoManager.pushModel(inkPaper.undoRedoContext, modelRef)\n      .then((modelClone) => {\n        // Firing recognition only if recognizer is configure to do it\n        if (isRecognitionModeConfigured(inkPaper, MyScriptJSConstants.RecognitionTrigger.PEN_UP)) {\n          launchRecognition(inkPaper, modelClone);\n        } else if (isRecognitionModeConfigured(inkPaper, MyScriptJSConstants.RecognitionTrigger.QUIET_PERIOD)) {\n          askForTimeOutRecognition(inkPaper, modelClone);\n        } else {\n          // FIXME We may raise a error event\n          logger.error('No valid recognition trigger configured');\n        }\n      });\n  return modelRef;\n}\n\n/**\n * Inner function with all the logic on resize.\n * @param {InkPaper} inkPaper\n * @return {Model}\n */\nfunction manageResize(inkPaper) {\n  return inkPaper.renderer.resize(inkPaper.rendererContext, inkPaper.model, inkPaper.stroker);\n}\n\n/**\n * Do all the stuff required to resize the inkPaper.\n * @param {InkPaper} inkPaper\n * @return {Promise.<Model>}\n */\nfunction askForResize(inkPaper) {\n  const inkPaperRef = inkPaper;\n  return new Promise((resolve) => {\n    /* eslint-disable no-undef */\n    window.clearTimeout(inkPaperRef.timer);\n    inkPaperRef.timer = window.setTimeout(() => {\n      resolve(manageResize(inkPaperRef));\n    }, 20);\n    /* eslint-disable no-undef*/\n  });\n}\n\n/**\n * InkPaper\n */\nexport class InkPaper {\n\n  /**\n   * @param {Element} element DOM element to attach this inkPaper\n   * @param {Options} [options] Configuration to apply\n   * @param {Styles} [customStyle] Custom style to apply\n   * @param {Behaviors} [behaviors] Custom behaviors to apply\n   */\n  constructor(element, options, customStyle, behaviors) {\n    /**\n     * Inner reference to the DOM Element\n     * @type {Element}\n     */\n    this.domElement = element;\n    this.domElement.classList.add('ms-ink-paper');\n    /**\n     * @private\n     * @type {Behaviors}\n     */\n    this.innerBehaviors = MyScriptJSBehaviors.overrideDefaultBehaviors(behaviors);\n    this.options = options;\n    this.customStyle = customStyle;\n\n    // As we are manipulating a dom element no other way to change one of it's attribute without writing an impure function\n    // eslint-disable-next-line no-param-reassign\n    this.domElement['data-myscript-ink-paper'] = this;\n  }\n\n  /**\n   * Set the recognition parameters\n   * WARNING : Need to fire a clear if user have already input some strokes.\n   * @param {Options} options\n   */\n  set options(options) {\n    /** @private **/\n    this.innerOptions = MyScriptJSOptions.overrideDefaultOptions(options);\n    this.behavior = this.behaviors.getBehaviorFromOptions(this.behaviors, this.innerOptions);\n\n    /**\n     * Current model\n     * @type {Model}\n     */\n    this.model = InkModel.createModel(this.innerOptions);\n\n    /**\n     * Current undo/redo context\n     * @type {UndoRedoContext}\n     */\n    this.undoRedoContext = UndoRedoContext.createUndoRedoContext(this.innerOptions);\n    // Pushing the initial state in the undo redo manager\n    UndoRedoManager.pushModel(this.undoRedoContext, this.model)\n        .then(model => logger.debug('Model pushed for undo/redo', model));\n\n    modelChangedCallback(this, this.model);\n  }\n\n  /**\n   * Get the current recognition parameters\n   * @return {Options}\n   */\n  get options() {\n    return this.innerOptions;\n  }\n\n  /**\n   * Set the custom style\n   * @param {Styles} customStyle\n   */\n  set customStyle(customStyle) {\n    /** @private **/\n    this.innerCustomStyle = MyScriptJSStyles.overrideDefaultStyle(customStyle);\n  }\n\n  /**\n   * Get the current custom style\n   * @return {Styles}\n   */\n  get customStyle() {\n    return this.innerCustomStyle;\n  }\n\n  /**\n   * Get behaviors\n   * @return {Behaviors}\n   */\n  get behaviors() {\n    return this.innerBehaviors;\n  }\n\n  /**\n   * @private\n   * @param {Behavior} behavior\n   */\n  set behavior(behavior) {\n    if (behavior) {\n      if (this.grabberContext) { // Remove event handlers to avoid multiplication (detach grabber)\n        Object.keys(this.grabberContext).forEach(type => this.domElement.removeEventListener(type, this.grabberContext[type], false));\n      }\n      /** @private **/\n      this.innerBehavior = behavior;\n      this.recognizer = this.innerBehavior.recognizer;\n      this.renderer = this.innerBehavior.renderer;\n      /**\n       * Current grabber context\n       * @type {GrabberContext}\n       */\n      this.grabberContext = this.grabber.attachEvents(this, this.domElement);\n    }\n  }\n\n  /**\n   * Get current behavior\n   * @return {Behavior}\n   */\n  get behavior() {\n    return this.innerBehavior;\n  }\n\n  /**\n   * Set the current recognizer\n   * @private\n   * @param {Recognizer} recognizer\n   */\n  set recognizer(recognizer) {\n    if (recognizer) {\n      if (this.innerRecognizer) {\n        this.innerRecognizer.close(this.options, this.model, this.recognizerContext)\n            .then(() => logger.info('Recognizer closed'));\n      }\n      /** @private **/\n      this.innerRecognizer = recognizer;\n      if (this.innerRecognizer) {\n        /**\n         * Current recognition context\n         * @type {RecognizerContext}\n         */\n        this.recognizerContext = RecognizerContext.createEmptyRecognizerContext();\n        this.innerRecognizer.init(this.options, this.model, this.recognizerContext)\n            .then(() => logger.info('Recognizer initialized'));\n      }\n    }\n  }\n\n  /**\n   * Get current recognizer\n   * @return {Recognizer}\n   */\n  get recognizer() {\n    return this.innerRecognizer;\n  }\n\n  /**\n   * Set the current renderer\n   * @private\n   * @param {Renderer} renderer\n   */\n  set renderer(renderer) {\n    if (renderer) {\n      if (this.innerRenderer) {\n        while (this.domElement.hasChildNodes()) {\n          this.domElement.removeChild(this.domElement.firstChild);\n        }\n      }\n      /** @private **/\n      this.innerRenderer = renderer;\n      if (this.innerRenderer) {\n        /**\n         * Current rendering context\n         * @type {Object}\n         */\n        this.rendererContext = this.innerRenderer.populateDomElement(this.domElement);\n      }\n    }\n  }\n\n  /**\n   * Get current renderer\n   * @return {Renderer}\n   */\n  get renderer() {\n    return this.innerRenderer;\n  }\n\n  /**\n   * Get current grabber\n   * @return {Grabber}\n   */\n  get grabber() {\n    return this.behavior ? this.behavior.grabber : undefined;\n  }\n\n  /**\n   * Get current stroker\n   * @return {Stroker}\n   */\n  get stroker() {\n    return this.behavior ? this.behavior.stroker : undefined;\n  }\n\n  /**\n   * Get current callbacks\n   * @return {Array}\n   */\n  get callbacks() {\n    return this.behavior ? this.behavior.callbacks : undefined;\n  }\n\n  /**\n   * Get a PNG image data url from the data model\n   * @return {String}\n   */\n  get png() {\n    return ImageRenderer.getImage(this.model, this.stroker);\n  }\n\n  /**\n   * Get statistics\n   * @return {Stats}\n   */\n  get stats() {\n    return ModelStats.computeStats(this.model);\n  }\n\n  /**\n   * Handle a pen down\n   * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n   */\n  penDown(point) {\n    logger.debug('Pen down', point);\n    this.model = InkModel.initPendingStroke(this.model, point, this.customStyle.strokeStyle);\n    this.renderer.drawCurrentStroke(this.rendererContext, this.model, this.stroker);\n    // Currently no recognition on pen down\n  }\n\n  /**\n   * Handle a pen move\n   * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n   */\n  penMove(point) {\n    logger.debug('Pen move', point);\n    this.model = InkModel.appendToPendingStroke(this.model, point);\n    this.renderer.drawCurrentStroke(this.rendererContext, this.model, this.stroker);\n    // Currently no recognition on pen move\n  }\n\n  /**\n   * Handle a pen up\n   * @param {{x: Number, y: Number, t: Number}} point Captured point coordinates\n   */\n  penUp(point) {\n    logger.debug('Pen up', point);\n    this.model = InkModel.endPendingStroke(this.model, point);\n    this.renderer.drawModel(this.rendererContext, this.model, this.stroker);\n    managePenUp(this);\n  }\n\n  /**\n   * Undo the last action.\n   */\n  undo() {\n    logger.debug('Undo current model', this.model);\n    UndoRedoManager.undo(this.undoRedoContext)\n        .then(model => updateModelAndAskForRecognition(this, model))\n        .then((model) => {\n          this.model = InkModel.cloneModel(model);\n          return this.model;\n        });\n  }\n\n  /**\n   * Redo the last action.\n   */\n  redo() {\n    logger.debug('Redo current model', this.model);\n    UndoRedoManager.redo(this.undoRedoContext)\n        .then(model => updateModelAndAskForRecognition(this, model))\n        .then((model) => {\n          this.model = InkModel.cloneModel(model);\n          return this.model;\n        });\n  }\n\n  /**\n   * Clear the output and the recognition result.\n   */\n  clear() {\n    logger.debug('Clear current model', this.model);\n    this.recognizer.reset(this.options, this.model, this.recognizerContext)\n        .then(model => UndoRedoManager.clear(this.undoRedoContext, model, this.options))\n        .then(model => updateModelAndAskForRecognition(this, model))\n        .then((model) => {\n          this.model = InkModel.cloneModel(model);\n          return this.model;\n        });\n  }\n\n  /**\n   * Explicitly ask to perform a recognition of input.\n   */\n  askForRecognition() {\n    if (this.recognizer && MyScriptJSConstants.RecognitionTrigger.DEMAND in this.recognizer.getInfo().availableTriggers) {\n      launchRecognition(this, this.model);\n    }\n  }\n\n  /**\n   * Function to call when the dom element link to the current ink paper has been resize.\n   */\n  resize() {\n    logger.debug('Resizing inkPaper');\n    askForResize(this);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./InkPaper.js","import * as PointerEventGrabber from '../grabber/PointerEventGrabber';\nimport * as CanvasRenderer from '../renderer/canvas/CanvasRenderer';\nimport * as QuadraticCanvasStroker from '../renderer/canvas/stroker/QuadraticCanvasStroker';\nimport * as Cdkv3RestTextRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestTextRecognizer';\nimport * as Cdkv3RestMathRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestMathRecognizer';\nimport * as Cdkv3RestAnalyzerRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestAnalyzerRecognizer';\nimport * as Cdkv3RestShapeRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestShapeRecognizer';\nimport * as Cdkv3RestMusicRecognizer from '../recognizer/cdkv3/rest/Cdkv3RestMusicRecognizer';\nimport * as Cdkv3WSMathRecognizer from '../recognizer/cdkv3/websocket/Cdkv3WSMathRecognizer';\nimport * as Cdkv3WSTextRecognizer from '../recognizer/cdkv3/websocket/Cdkv3WSTextRecognizer';\nimport eventCallback from '../callback/EventCallback';\n\n/**\n * Current behavior\n * @typedef {Object} Behavior\n * @property {Grabber} grabber Grabber to capture strokes\n * @property {Stroker} stroker Stroker to draw stroke\n * @property {Renderer} renderer Renderer to draw on the inkPaper\n * @property {Recognizer} recognizer Recognizer to call the recognition service\n * @property {Array} callbacks Functions to handle model changes\n */\n\n/**\n * Set of behaviors to be used by the {@link InkPaper}\n * @typedef {Object} Behaviors\n * @property {Grabber} grabber Grabber to capture strokes\n * @property {Array<Stroker>} strokerList List of stroker to draw stroke\n * @property {Array<Renderer>} rendererList List of renderer to draw on the inkPaper\n * @property {Array<Recognizer>} recognizerList Recognizers to call the recognition service\n * @property {function(behaviors: Behaviors, options: Options): Behavior} getBehaviorFromOptions Get the current behavior to use regarding the current configuration\n * @property {Array} callbacks Functions to handle model changes\n */\n\n/**\n * Default behaviors\n * @type {Behaviors}\n */\nexport const defaultBehaviors = {\n  grabber: PointerEventGrabber,\n  strokerList: [QuadraticCanvasStroker],\n  rendererList: [CanvasRenderer],\n  recognizerList: [Cdkv3RestTextRecognizer, Cdkv3RestMathRecognizer, Cdkv3RestAnalyzerRecognizer, Cdkv3RestShapeRecognizer, Cdkv3RestMusicRecognizer, Cdkv3WSTextRecognizer, Cdkv3WSMathRecognizer],\n  callbacks: [eventCallback],\n  getBehaviorFromOptions: (behaviors, options) => {\n    const behavior = {};\n    behavior.grabber = behaviors.grabber;\n    if (options) {\n      behavior.stroker = behaviors.strokerList.find(item =>\n                                                    (item.getInfo().type === options.renderingParams.renderer) &&\n                                                    (item.getInfo().name === options.renderingParams.stroker));\n      behavior.renderer = behaviors.rendererList.find(item => item.getInfo().type === options.renderingParams.renderer);\n      behavior.recognizer = behaviors.recognizerList.find(item =>\n                                                          (item.getInfo().type === options.recognitionParams.type) &&\n                                                          (item.getInfo().protocol === options.recognitionParams.protocol) &&\n                                                          (item.getInfo().apiVersion === options.recognitionParams.apiVersion));\n    }\n    behavior.callbacks = behaviors.callbacks;\n    return behavior;\n  }\n};\n\n/**\n * Generate behaviors\n * @param {Behaviors} behaviors Behaviors to be used\n * @return {Behaviors} Overridden behaviors\n */\nexport function overrideDefaultBehaviors(behaviors) {\n  if (behaviors) {\n    return {\n      grabber: behaviors.grabber || defaultBehaviors.grabber,\n      rendererList: behaviors.rendererList || defaultBehaviors.rendererList,\n      strokerList: behaviors.strokerList || defaultBehaviors.strokerList,\n      recognizerList: behaviors.recognizerList || defaultBehaviors.recognizerList,\n      callbacks: behaviors.callbacks || defaultBehaviors.callbacks,\n      getBehaviorFromOptions: behaviors.getBehaviorFromOptions || defaultBehaviors.getBehaviorFromOptions\n    };\n  }\n  return defaultBehaviors;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/MyScriptJSBehaviors.js","import { grabberLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Grab penDown, penMove and penUp events\n * @typedef {Object} Grabber\n * @property {function(inkPaper: InkPaper, element: Element): GrabberContext} attachEvents Attach events and decide when to call inkPaper penDown/Move/Up methods\n */\n\n/**\n * Grabber context\n * @typedef {Object} GrabberContext\n * @property {function(event: Event)} upEvent Handling function for 'upEvent' event listener\n * @property {function(event: Event)} downEvent Handling function for 'downEvent' event listener\n * @property {function(event: Event)} moveEvent Handling function for 'moveEvent' event listener\n */\n\nfunction stopPropagation(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nconst floatPrecisionArray = [1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000];\nfunction roundFloat(oneFloat, requestedFloatPrecision) {\n  if (requestedFloatPrecision || requestedFloatPrecision === 0) {\n    let floatPrecision;\n    if (requestedFloatPrecision > 10) {\n      floatPrecision = floatPrecisionArray[10];\n    } else {\n      floatPrecision = floatPrecisionArray[requestedFloatPrecision];\n    }\n    return Math.round(oneFloat * floatPrecision) / floatPrecision;\n  }\n  return oneFloat;\n}\n\nfunction extractPoint(event, domElement, options) {\n  let eventRef = event;\n  if (eventRef.changedTouches) {\n    eventRef = eventRef.changedTouches[0];\n  }\n  const rect = domElement.getBoundingClientRect();\n  return {\n    x: roundFloat(eventRef.clientX - rect.left - domElement.clientLeft, options.recognitionParams.xyFloatPrecision),\n    y: roundFloat(eventRef.clientY - rect.top - domElement.clientTop, options.recognitionParams.xyFloatPrecision),\n    t: roundFloat(eventRef.timeStamp, options.recognitionParams.timestampFloatPrecision)\n  };\n}\n\n/**\n * Listen for the desired events\n * @param {InkPaper} inkPaper InkPaper to received down/move/up events\n * @param {Element} element DOM element to attach events listeners\n * @return {GrabberContext} Grabber context\n * @listens {Event} pointermove: a pointer moves, similar to touchmove or mousemove.\n * @listens {Event} pointerdown: a pointer is activated, or a device button held.\n * @listens {Event} pointerup: a pointer is deactivated, or a device button released.\n * @listens {Event} pointerover: a pointer has moved onto an element.\n * @listens {Event} pointerout: a pointer is no longer on an element it once was.\n * @listens {Event} pointerenter: a pointer enters the bounding box of an element.\n * @listens {Event} pointerleave: a pointer leaves the bounding box of an element.\n * @listens {Event} pointercancel: a pointer will no longer generate events.\n */\nexport function attachEvents(inkPaper, element) {\n  logger.debug('attaching events');\n\n  function ignoreHandler(evt) {\n    logger.debug(`${evt.type} event`, evt.pointerId);\n    stopPropagation(evt);\n    return false;\n  }\n\n  function penDownHandler(evt) { // Trigger a penDown\n    logger.debug(`${evt.type} event`, evt.pointerId);\n    if (this.activePointerId) {\n      logger.debug('Already in capture mode. No need to activate a new capture');\n      if (this.activePointerId === evt.pointerId) {\n        logger.error('PenDown detect with the same id without any pen up');\n      }\n    } else {\n      this.activePointerId = evt.pointerId;\n      stopPropagation(evt);\n      inkPaper.penDown(extractPoint(evt, element, inkPaper.options));\n    }\n    return false;\n  }\n\n  function penMoveHandler(evt) { // Trigger a penMove\n    logger.debug(`${evt.type} event`, evt.pointerId);\n    // Only considering the active pointer\n    if (this.activePointerId && this.activePointerId === evt.pointerId) {\n      stopPropagation(evt);\n      inkPaper.penMove(extractPoint(evt, element, inkPaper.options));\n    } else {\n      logger.debug(`PenMove detect from another pointerid (${evt.pointerId}), active id is ${this.activePointerId}`);\n    }\n    return false;\n  }\n\n  function penUpHandler(evt) { // Trigger a penUp\n    logger.debug(`${evt.type} event`, evt.pointerId);\n    // Only considering the active pointer\n    if (this.activePointerId && this.activePointerId === evt.pointerId) {\n      this.activePointerId = undefined; // Managing the active pointer\n      stopPropagation(evt);\n      inkPaper.penUp(extractPoint(evt, element, inkPaper.options));\n    } else {\n      logger.debug(`PenUp detect from another pointerid (${evt.pointerId}), active id is ${this.activePointerId}`);\n    }\n    return false;\n  }\n\n  const events = {};\n  // Disable contextmenu to prevent safari to fire pointerdown only once, and ignore pointerover\n  ['contextmenu', 'pointerover'].forEach((type) => {\n    events[type] = ignoreHandler;\n  });\n  ['pointerdown'].forEach((type) => {\n    events[type] = penDownHandler;\n  });\n  ['pointermove'].forEach((type) => {\n    events[type] = penMoveHandler;\n  });\n  ['pointerup', 'pointerout', 'pointerleave', 'pointercancel'].forEach((type) => {\n    events[type] = penUpHandler;\n  });\n\n  Object.keys(events).forEach(type => element.addEventListener(type, events[type], false));\n\n  return events;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./grabber/PointerEventGrabber.js","import { rendererLogger as logger } from '../../configuration/LoggerConfig';\nimport { drawStroke } from './symbols/StrokeSymbolCanvasRenderer';\nimport { drawTextSymbol, TextSymbols } from './symbols/TextSymbolCanvasRenderer';\nimport { drawShapeSymbol, ShapeSymbols } from './symbols/ShapeSymbolCanvasRenderer';\nimport {\n  drawMusicSymbol,\n  preloadMusicSymbols,\n  MusicSymbols\n} from './symbols/MusicSymbolCanvasRenderer';\nimport * as InkModel from '../../model/InkModel';\n\n/**\n * Renderer info\n * @typedef {Object} RendererInfo\n * @property {String} type Renderer type.\n */\n\n/**\n * Default renderer\n * @typedef {Object} Renderer\n * @property {function(): RendererInfo} getInfo Get some information about this renderer\n * @property {function(element: Element): Object} populateDomElement Populate the DOM element to create rendering area.\n * @property {function(context: Object, model: Model, stroker: Stroker)} resize Explicitly resize the rendering area.\n * @property {function(context: Object, model: Model, stroker: Stroker): Model} drawCurrentStroke Draw the model currentStroke.\n * @property {function(context: Object, model: Model, stroker: Stroker): Model} drawModel Draw the model defaultSymbols and recognizedSymbols.\n */\n\n/**\n * Get info\n * @return {RendererInfo} Information about this renderer\n */\nexport function getInfo() {\n  return {\n    type: 'canvas'\n  };\n}\n\nfunction getPixelRatio(canvas) {\n  if (canvas) {\n    const context = canvas.getContext('2d');\n    // we are using a browser object\n    // eslint-disable-next-line no-undef\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const backingStoreRatio = context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio || 1;\n    return devicePixelRatio / backingStoreRatio;\n  }\n  return 1;\n}\n\nfunction detectPixelRatio(element) {\n  // we are using a browser object\n  // eslint-disable-next-line no-undef\n  const tempCanvas = document.createElement('canvas');\n  const canvasRatio = getPixelRatio(tempCanvas);\n  // document.removeChild(tempCanvas);\n  return canvasRatio;\n}\n\nfunction createCanvas(element, type) {\n  // eslint-disable-next-line no-undef\n  const browserDocument = document;\n  const canvas = browserDocument.createElement('canvas');\n  logger.debug(element.clientWidth);\n  canvas.classList.add(type);\n  canvas.classList.add('ms-canvas');\n  canvas.style.width = element.clientWidth + 'px';\n  canvas.style.height = element.clientHeight + 'px';\n  element.appendChild(canvas);\n  return canvas;\n}\n\nfunction resizeCanvas(canvas, pixelRatio) {\n  const domElement = canvas.parentNode;\n  logger.debug(`Updating canvasSize ${canvas.id} in ${domElement.id}`);\n  /* eslint-disable no-param-reassign */\n  canvas.width = domElement.clientWidth * pixelRatio;\n  canvas.height = domElement.clientHeight * pixelRatio;\n  canvas.style.width = `${domElement.clientWidth}px`;\n  canvas.style.height = `${domElement.clientHeight}px`;\n  /* eslint-enable no-param-reassign */\n  canvas.getContext('2d').scale(pixelRatio, pixelRatio);\n}\n\n/**\n * Populate the dom element\n * @param {Element} element DOM element to attach the rendering elements\n * @return {Object} The renderer context to give as parameter when a draw model will be call\n */\nexport function populateDomElement(element) {\n  logger.debug(`Populate dom elements for rendering inside ${element.id}`);\n  const pixelRatio = detectPixelRatio(element);\n  preloadMusicSymbols(element);\n\n  const renderingCanvas = createCanvas(element, 'ms-rendering-canvas');\n  resizeCanvas(renderingCanvas, pixelRatio);\n  const capturingCanvas = createCanvas(element, 'ms-capture-canvas');\n  resizeCanvas(capturingCanvas, pixelRatio);\n\n  return {\n    pixelRatio,\n    renderingCanvas,\n    renderingCanvasContext: renderingCanvas.getContext('2d'),\n    capturingCanvas,\n    capturingCanvasContext: capturingCanvas.getContext('2d')\n  };\n}\n\n/**\n * Update the rendering context size\n * @param {Object} context Current rendering context\n * @param {Model} model Current model\n * @param {Stroker} stroker Current stroker\n * @return {Model}\n */\nexport function resize(context, model, stroker) {\n  resizeCanvas(context.renderingCanvas, context.pixelRatio);\n  resizeCanvas(context.capturingCanvas, context.pixelRatio);\n  return this.drawModel(context, model, stroker);\n}\n\nfunction drawSymbol(context, symbol, stroker) {\n  const type = symbol.elementType ? symbol.elementType : symbol.type;\n  logger.debug(`Attempting to draw ${type} symbol`);\n  if (type === 'stroke') {\n    drawStroke(context, symbol, stroker);\n  } else if (TextSymbols[type]) {\n    drawTextSymbol(context, symbol);\n  } else if (ShapeSymbols[type]) {\n    drawShapeSymbol(context, symbol);\n  } else if (MusicSymbols[type]) {\n    drawMusicSymbol(context, symbol);\n  } else {\n    logger.warn(`Impossible to draw ${type} symbol`);\n  }\n}\n\n/**\n * Draw the current stroke from the model\n * @param {Object} context Current rendering context\n * @param {Model} model Current model\n * @param {Stroker} stroker Current stroker\n * @return {Model}\n */\nexport function drawCurrentStroke(context, model, stroker) {\n  // Render the current stroke\n  context.capturingCanvasContext.clearRect(0, 0, context.capturingCanvas.width, context.capturingCanvas.height);\n  logger.debug('drawing current stroke ', model.currentStroke);\n  drawStroke(context.capturingCanvasContext, model.currentStroke, stroker);\n  return model;\n}\n\n/**\n * Draw all symbols contained into the model\n * @param {Object} context Current rendering context\n * @param {Model} model Current model\n * @param {Stroker} stroker Current stroker\n * @return {Model}\n */\nexport function drawModel(context, model, stroker) {\n  context.renderingCanvasContext.clearRect(0, 0, context.renderingCanvas.width, context.renderingCanvas.height);\n  // Displaying the default symbols and pending strokes\n  const symbols = [...model.defaultSymbols];\n  // Displaying the recognition symbols or raw strokes\n  if (model.recognizedSymbols) {\n    symbols.push(...model.recognizedSymbols);\n    symbols.push(...InkModel.extractPendingStrokes(model));\n  } else {\n    symbols.push(...model.rawStrokes);\n  }\n  symbols.forEach(symbol => drawSymbol(context.renderingCanvasContext, symbol, stroker));\n  context.capturingCanvasContext.clearRect(0, 0, context.capturingCanvas.width, context.capturingCanvas.height);\n  return model;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/CanvasRenderer.js","/**\n * Draw a stroke symbol\n * @param {Object} context Current rendering context\n * @param {Stroke} stroke Stroke to be drawn\n * @param {Stroker} stroker Stroker to use to render a stroke\n */\nexport function drawStroke(context, stroke, stroker) {\n  if (stroker) {\n    stroker.drawStroke(context, stroke);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/symbols/StrokeSymbolCanvasRenderer.js","import { rendererLogger as logger } from '../../../configuration/LoggerConfig';\nimport { drawLine } from './ShapeSymbolCanvasRenderer';\n\n/**\n * @type {{inputCharacter: String, char: String, string: String, textLine: String}}\n */\nexport const TextSymbols = {\n  inputCharacter: 'inputCharacter',\n  char: 'char',\n  string: 'string',\n  textLine: 'textLine'\n};\n\nfunction drawUnderline(context, underline, label, data) {\n  const delta = data.width / label.length;\n  const p1 = {\n    x: data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n    y: data.topLeftPoint.y + data.height\n  };\n  const p2 = {\n    x: data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n    y: data.topLeftPoint.y + data.height\n  };\n  drawLine(context, p1, p2);\n}\n\nfunction drawText(context, label, data) {\n  const contextReference = context;\n  contextReference.save();\n  try {\n    contextReference.font = data.textHeight + 'px serif';\n    contextReference.textAlign = (data.justificationType === 'CENTER') ? 'center' : 'left';\n    contextReference.textBaseline = 'bottom';\n    contextReference.fillStyle = contextReference.strokeStyle;\n    contextReference.fillText(label, data.topLeftPoint.x, (data.topLeftPoint.y + data.height));\n  } finally {\n    contextReference.restore();\n  }\n}\n\nfunction drawTextLine(context, textLine) {\n  drawText(context, textLine.label, textLine.data);\n  textLine.underlineList.forEach((underline) => {\n    drawUnderline(context, underline, textLine.label, textLine.data);\n  });\n}\n\n/**\n * Draw a text symbol\n * @param {Object} context Current rendering context\n * @param {Object} symbol Symbol to draw\n */\nexport function drawTextSymbol(context, symbol) {\n  logger.debug(`draw ${symbol.type} symbol`);\n  const contextReference = context;\n  contextReference.save();\n  try {\n    contextReference.lineWidth = symbol.width;\n    contextReference.strokeStyle = symbol.color;\n\n    if (symbol.elementType) {\n      switch (symbol.elementType) {\n        case TextSymbols.textLine:\n          drawTextLine(contextReference, symbol);\n          break;\n        default:\n          logger.error(`${symbol.elementType} not implemented`);\n          break;\n      }\n    } else {\n      switch (symbol.type) {\n        case TextSymbols.textLine:\n          drawTextLine(contextReference, symbol);\n          break;\n        default:\n          logger.error(`${symbol.type} not implemented`);\n      }\n    }\n  } finally {\n    contextReference.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/symbols/TextSymbolCanvasRenderer.js","import * as StrokeComponent from '../../../model/StrokeComponent';\nimport { computeLinksPoints, computeMiddlePoint, computeAxeAngle } from '../../QuadraticUtils';\n\n/**\n * Stroker info\n * @typedef {Object} StrokerInfo\n * @property {String} type Renderer type.\n * @property {String} name Stroker name.\n */\n\n/**\n * Define how a stroke should be drawn\n * @typedef {Object} Stroker\n * @property {function(): StrokerInfo} getInfo Get some information about this stroker\n * @property {function(context: Object, stroke: Stroke)} drawStroke Render a stroke on the current context.\n */\n\n/**\n * Get info\n * @return {StrokerInfo} Information about this stroker\n */\nexport function getInfo() {\n  return {\n    type: 'canvas',\n    name: 'quadratic'\n  };\n}\n\nfunction renderArc(context, center, radius) {\n  context.arc(center.x, center.y, radius, 0, Math.PI * 2, true);\n}\n\nfunction renderLine(context, begin, end, width) {\n  const linkPoints1 = computeLinksPoints(begin, computeAxeAngle(begin, end), width);\n  const linkPoints2 = computeLinksPoints(end, computeAxeAngle(begin, end), width);\n\n  context.moveTo(linkPoints1[0].x, linkPoints1[0].y);\n  context.lineTo(linkPoints2[0].x, linkPoints2[0].y);\n  context.lineTo(linkPoints2[1].x, linkPoints2[1].y);\n  context.lineTo(linkPoints1[1].x, linkPoints1[1].y);\n}\n\nfunction renderFinal(context, begin, end, width) {\n  const ARCSPLIT = 6;\n  const angle = computeAxeAngle(begin, end);\n  const linkPoints = computeLinksPoints(end, angle, width);\n  context.moveTo(linkPoints[0].x, linkPoints[0].y);\n  for (let i = 1; i <= ARCSPLIT; i++) {\n    const newAngle = angle - ((i * Math.PI) / ARCSPLIT);\n    context.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)));\n  }\n}\n\nfunction renderQuadratic(context, begin, end, ctrl, width) {\n  const linkPoints1 = computeLinksPoints(begin, computeAxeAngle(begin, ctrl), width);\n  const linkPoints2 = computeLinksPoints(end, computeAxeAngle(ctrl, end), width);\n  const linkPoints3 = computeLinksPoints(ctrl, computeAxeAngle(begin, end), width);\n\n  context.moveTo(linkPoints1[0].x, linkPoints1[0].y);\n  context.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y);\n  context.lineTo(linkPoints2[1].x, linkPoints2[1].y);\n  context.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y);\n}\n\n/**\n * Draw a stroke on a canvas, using quadratics\n * @param {Object} context Current rendering context\n * @param {Stroke} stroke Current stroke to be drawn\n */\nexport function drawStroke(context, stroke) {\n  const contextReference = context;\n  const length = stroke.x.length;\n  const width = stroke.width > 0 ? stroke.width : contextReference.lineWidth;\n  const color = stroke.color ? stroke.color : contextReference.strokeStyle;\n  const firstPoint = StrokeComponent.getPointByIndex(stroke, 0);\n  const nbquadratics = length - 2;\n\n  contextReference.save();\n  try {\n    contextReference.beginPath();\n    if (length < 3) {\n      renderArc(contextReference, firstPoint, width * 0.6);\n    } else {\n      renderArc(contextReference, firstPoint, width * firstPoint.p);\n      renderLine(contextReference, firstPoint, computeMiddlePoint(firstPoint, StrokeComponent.getPointByIndex(stroke, 1)), width);\n\n      // Possibility to try this (the start looks better when the ink is large)\n      // var first = computeMiddlePoint(stroke[0], stroke[1]);\n      // contextReference.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n      for (let i = 0; i < nbquadratics; i++) {\n        renderQuadratic(contextReference, computeMiddlePoint(StrokeComponent.getPointByIndex(stroke, i), StrokeComponent.getPointByIndex(stroke, i + 1)), computeMiddlePoint(StrokeComponent.getPointByIndex(stroke, i + 1), StrokeComponent.getPointByIndex(stroke, i + 2)), StrokeComponent.getPointByIndex(stroke, i + 1), width);\n      }\n      renderLine(contextReference, computeMiddlePoint(StrokeComponent.getPointByIndex(stroke, length - 2), StrokeComponent.getPointByIndex(stroke, length - 1)), StrokeComponent.getPointByIndex(stroke, length - 1), width);\n      renderFinal(contextReference, StrokeComponent.getPointByIndex(stroke, length - 2), StrokeComponent.getPointByIndex(stroke, length - 1), width);\n    }\n    contextReference.closePath();\n    if (color !== undefined) {\n      contextReference.fillStyle = color;\n      contextReference.fill();\n    }\n  } finally {\n    contextReference.restore();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/stroker/QuadraticCanvasStroker.js","/** ===============================================================================================\n * Compute quadratics control points\n * ============================================================================================= */\n\n/**\n *\n * @param {{x: Number, y: Number, p: Number}} point\n * @param angle\n * @param width\n * @return {[{x: Number, y: Number},{x: Number, y: Number}]}\n */\nexport function computeLinksPoints(point, angle, width) {\n  const radius = point.p * width;\n  return [{\n    x: (point.x - (Math.sin(angle) * radius)),\n    y: (point.y + (Math.cos(angle) * radius))\n  }, {\n    x: (point.x + (Math.sin(angle) * radius)),\n    y: (point.y - (Math.cos(angle) * radius))\n  }];\n}\n\n/**\n *\n * @param {{x: Number, y: Number, p: Number}} point1\n * @param {{x: Number, y: Number, p: Number}} point2\n * @return {{x: Number, y: Number, p: Number}}\n */\nexport function computeMiddlePoint(point1, point2) {\n  return {\n    x: ((point2.x + point1.x) / 2),\n    y: ((point2.y + point1.y) / 2),\n    p: ((point2.p + point1.p) / 2)\n  };\n}\n\n/**\n *\n * @param {{x: Number, y: Number}} begin\n * @param {{x: Number, y: Number}} end\n * @return {Number}\n */\nexport function computeAxeAngle(begin, end) {\n  return Math.atan2(end.y - begin.y, end.x - begin.x);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/QuadraticUtils.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as NetworkInterface from '../../networkHelper/rest/networkInterface';\nimport * as CryptoHelper from '../../CryptoHelper';\nimport { updateSentRecognitionPositions, resetRecognitionPositions } from '../../../model/RecognizerContext';\nimport { commonRestV3Configuration, updateModelReceivedPosition } from './Cdkv3CommonRestRecognizer'; // Configuring recognition trigger\nimport { processRenderingResult } from '../common/Cdkv3CommonMathRecognizer';\n\nexport { init, close } from '../../DefaultRecognizer';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const mathRestV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.MATH,\n  protocol: MyScriptJSConstants.Protocol.REST,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, commonRestV3Configuration, mathRestV3Configuration);\n}\n\nfunction buildInput(options, model, instanceId) {\n  const input = {\n    // As Rest MATH recognition is non incremental we add the already recognized strokes\n    components: model.rawStrokes.map(stroke => StrokeComponent.toJSON(stroke))\n  };\n  Object.assign(input, options.recognitionParams.mathParameter); // Building the input with the suitable parameters\n\n  logger.debug(`input.components size is ${input.components.length}`);\n\n  const data = {\n    instanceId,\n    applicationKey: options.recognitionParams.server.applicationKey,\n    mathInput: JSON.stringify(input)\n  };\n\n  if (options.recognitionParams.server.hmacKey) {\n    data.hmac = CryptoHelper.computeHmac(data.mathInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n  }\n  return data;\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  const modelReference = model;\n  const recognizerContextReference = recognizerContext;\n\n  const data = buildInput(options, model, recognizerContextReference.mathInstanceId);\n  updateSentRecognitionPositions(recognizerContextReference, modelReference);\n  return NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/math/doSimpleRecognition.json`, data)\n      .then(\n          // logResponseOnSuccess\n          (response) => {\n            logger.debug('Cdkv3RestMathRecognizer success', response);\n            recognizerContextReference.mathInstanceId = response.instanceId;\n            logger.debug('Cdkv3RestMathRecognizer update model', response);\n            modelReference.rawResult = response;\n            modelReference.rawResult.type = `${mathRestV3Configuration.type.toLowerCase()}Result`;\n            return modelReference;\n          })\n      .then(processRenderingResult)\n      .then(updateModelReceivedPosition);\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  resetRecognitionPositions(recognizerContext, model);\n  // We are explicitly manipulating a reference here.\n  // eslint-disable-next-line no-param-reassign\n  delete recognizerContext.mathInstanceId;\n  return Promise.resolve(model);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3RestMathRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\n\nfunction extractRecognizedSymbolsFromMathResult(model) {\n  // We recopy the recognized strokes to flag them as toBeRemove if they are scratched out or map with a symbol\n  const strokeList = [...model.rawStrokes];\n\n  const result = model.rawResult.result;\n  if (result && result.scratchOutResults && (result.scratchOutResults.length > 0)) {\n    const inkRanges = result.scratchOutResults\n        .map(scratchOutResult => scratchOutResult.erasedInkRanges.concat(scratchOutResult.inkRanges))\n        .reduce((a, b) => a.concat(b));\n    return strokeList.filter((stroke, index) => !inkRanges.find(inkRange => inkRange.component === index));\n  }\n  return strokeList;\n}\n\n/**\n * Enrich the model with recognized symbols\n * @param {Model} model Current model\n * @return {Model} Updated model\n */\nexport function processRenderingResult(model) {\n  const modelReference = model;\n  logger.debug('Building the rendering model', modelReference);\n  modelReference.recognizedSymbols = extractRecognizedSymbolsFromMathResult(model);\n  return modelReference;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/common/Cdkv3CommonMathRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as NetworkInterface from '../../networkHelper/rest/networkInterface';\nimport * as CryptoHelper from '../../CryptoHelper';\nimport {\n  updateSentRecognitionPositions,\n  resetRecognitionPositions\n} from '../../../model/RecognizerContext';\nimport {\n  commonRestV3Configuration,\n  updateModelReceivedPosition\n} from './Cdkv3CommonRestRecognizer'; // Configuring recognition trigger\nimport { extractShapeSymbols, getStyleFromInkRanges } from '../common/Cdkv3CommonShapeRecognizer';\n\nexport { init, close } from '../../DefaultRecognizer';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const analyzerRestV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.ANALYZER,\n  protocol: MyScriptJSConstants.Protocol.REST,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, commonRestV3Configuration, analyzerRestV3Configuration);\n}\n\nfunction buildInput(options, model, instanceId) {\n  const input = {\n    // Incremental\n    components: model.rawStrokes.map(stroke => StrokeComponent.toJSON(stroke))\n  };\n  Object.assign(input, { parameter: options.recognitionParams.analyzerParameter }); // Building the input with the suitable parameters\n\n  logger.debug(`input.components size is ${input.components.length}`);\n\n  const data = {\n    instanceId,\n    applicationKey: options.recognitionParams.server.applicationKey,\n    analyzerInput: JSON.stringify(input)\n  };\n\n  if (options.recognitionParams.server.hmacKey) {\n    data.hmac = CryptoHelper.computeHmac(data.analyzerInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n  }\n  return data;\n}\n\nfunction extractSymbols(model, element) {\n  const style = getStyleFromInkRanges(model, element.inkRanges);\n  switch (element.elementType) {\n    case 'table':\n      return element.lines.map(line => Object.assign(line, style));\n    case 'textLine':\n      return [element].map(textLine => Object.assign(textLine, textLine.result.textSegmentResult.candidates[textLine.result.textSegmentResult.selectedCandidateIdx], style));\n    case 'shape':\n      return extractShapeSymbols(model, element).map(primitive => Object.assign(primitive, style));\n    default:\n      return [];\n  }\n}\n\nfunction extractRecognizedSymbolsFromAnalyzerResult(model) {\n  const result = model.rawResult.result;\n  if (result) {\n    return [...result.shapes, ...result.tables, ...result.textLines]\n        .map(element => extractSymbols(model, element))\n        .reduce((a, b) => a.concat(b));\n  }\n  return [];\n}\n\n/**\n * Enrich the model with recognized symbols\n * @param {Model} model Current model\n * @return {Model} Updated model\n */\nfunction processRenderingResult(model) {\n  const modelReference = model;\n  logger.debug('Building the rendering model', modelReference);\n  modelReference.recognizedSymbols = extractRecognizedSymbolsFromAnalyzerResult(model);\n  return modelReference;\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  const modelReference = model;\n  const recognizerContextReference = recognizerContext;\n\n  const data = buildInput(options, model, recognizerContextReference.analyzerInstanceId);\n  updateSentRecognitionPositions(recognizerContextReference, modelReference);\n  return NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/analyzer/doSimpleRecognition.json`, data)\n      .then(\n          // logResponseOnSuccess\n          (response) => {\n            logger.debug('Cdkv3RestAnalyzerRecognizer success', response);\n            // memorizeInstanceId\n            recognizerContextReference.analyzerInstanceId = response.instanceId;\n            logger.debug('Cdkv3RestAnalyzerRecognizer update model', response);\n            modelReference.rawResult = response;\n            modelReference.rawResult.type = `${analyzerRestV3Configuration.type.toLowerCase()}Result`;\n            return modelReference;\n          }\n      )\n      .then(processRenderingResult)\n      .then(updateModelReceivedPosition);\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  resetRecognitionPositions(recognizerContext, model);\n  // We are explicitly manipulating a reference here.\n  // eslint-disable-next-line no-param-reassign\n  delete recognizerContext.analyzerInstanceId;\n  return Promise.resolve(model);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3RestAnalyzerRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport * as InkModel from '../../../model/InkModel';\n\n/**\n * Get style for the strokes matching the ink ranges\n * @param {Model} model\n * @param {Array<Object>} inkRanges\n * @return {{color: String, width: Number}} Style to apply\n */\nexport function getStyleFromInkRanges(model, inkRanges) {\n  let strokes = model.rawStrokes;\n  if (inkRanges && (inkRanges.length > 0)) {\n    strokes = inkRanges\n        .map(inkRange => InkModel.extractStrokesFromInkRange(model, inkRange.stroke ? inkRange.stroke : inkRange.firstStroke, inkRange.stroke ? inkRange.stroke : inkRange.lastStroke, inkRange.firstPoint, inkRange.lastPoint))\n        .reduce((a, b) => a.concat(b));\n  }\n  // FIXME hack to apply the rendering param of the first element' stroke\n  return {\n    color: strokes[0].color,\n    width: strokes[0].width\n  };\n}\n\n/**\n * Extract recognized symbols from recognition output\n * @param {Model} model Current model\n * @param {Object} segment Shape recognition output\n * @return {Array<Object>} Recognized symbols\n */\nexport function extractShapeSymbols(model, segment) {\n  if (segment.candidates && segment.candidates.length > 0) {\n    const selectedCandidate = segment.candidates[segment.selectedCandidateIndex];\n    switch (selectedCandidate.type) {\n      case 'notRecognized':\n        if (segment.inkRanges && segment.inkRanges.length > 0) {\n          return segment.inkRanges\n              .map(inkRange => InkModel.extractStrokesFromInkRange(model, inkRange.firstStroke, inkRange.lastStroke, inkRange.firstPoint, inkRange.lastPoint))\n              .reduce((a, b) => a.concat(b));\n        }\n        return [];\n      case 'recognizedShape':\n        return selectedCandidate.primitives;\n      default:\n        return [];\n    }\n  }\n  return [];\n}\n\nfunction extractRecognizedSymbolsFromShapeResult(model) {\n  const result = model.rawResult.result;\n  if (result && result.segments) {\n    return result.segments\n        .map((segment) => {\n          const style = getStyleFromInkRanges(model, segment.inkRanges);\n          return extractShapeSymbols(model, segment).map(primitive => Object.assign(primitive, style));\n        })\n        .reduce((a, b) => a.concat(b));\n  }\n  return [];\n}\n\n/**\n * Enrich the model with recognized symbols\n * @param {Model} model Current model\n * @return {Model} Updated model\n */\nexport function processRenderingResult(model) {\n  const modelReference = model;\n  logger.debug('Building the rendering model', modelReference);\n  modelReference.recognizedSymbols = extractRecognizedSymbolsFromShapeResult(model);\n  return modelReference;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/common/Cdkv3CommonShapeRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as InkModel from '../../../model/InkModel';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as NetworkInterface from '../../networkHelper/rest/networkInterface';\nimport * as PromiseHelper from '../../../util/PromiseHelper';\nimport * as CryptoHelper from '../../CryptoHelper';\nimport { updateSentRecognitionPositions, resetRecognitionPositions } from '../../../model/RecognizerContext';\nimport { commonRestV3Configuration, updateModelReceivedPosition } from './Cdkv3CommonRestRecognizer'; // Configuring recognition trigger\nimport { processRenderingResult } from '../common/Cdkv3CommonShapeRecognizer';\n\nexport { init } from '../../DefaultRecognizer';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const shapeRestV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.SHAPE,\n  protocol: MyScriptJSConstants.Protocol.REST,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, commonRestV3Configuration, shapeRestV3Configuration);\n}\n\nfunction buildInput(options, model, instanceId) {\n  const input = {\n    components: InkModel.extractPendingStrokes(model).map(stroke => StrokeComponent.toJSON(stroke))\n  };\n  Object.assign(input, options.recognitionParams.shapeParameter); // Building the input with the suitable parameters\n\n  logger.debug(`input.components size is ${input.components.length}`);\n\n  const data = {\n    instanceId,\n    applicationKey: options.recognitionParams.server.applicationKey,\n    shapeInput: JSON.stringify(input)\n  };\n\n  if (options.recognitionParams.server.hmacKey) {\n    data.hmac = CryptoHelper.computeHmac(data.shapeInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n  }\n  return data;\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  const modelReference = model;\n  const recognizerContextReference = recognizerContext;\n\n  const data = buildInput(options, model, recognizerContextReference.shapeInstanceId);\n  updateSentRecognitionPositions(recognizerContextReference, modelReference);\n  return NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/shape/doSimpleRecognition.json`, data)\n      .then(\n          // logResponseOnSuccess\n          (response) => {\n            logger.debug('Cdkv3RestShapeRecognizer success', response);\n            recognizerContextReference.shapeInstanceId = response.instanceId;\n            logger.debug('Cdkv3RestShapeRecognizer update model', response);\n            modelReference.rawResult = response;\n            modelReference.rawResult.type = `${shapeRestV3Configuration.type.toLowerCase()}Result`;\n            return modelReference;\n          }\n      )\n      .then(processRenderingResult)\n      .then(updateModelReceivedPosition);\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  const recognizerContextReference = recognizerContext;\n  const ret = PromiseHelper.destructurePromise();\n\n  if (recognizerContextReference && recognizerContextReference.shapeInstanceId) {\n    const data = {\n      instanceSessionId: recognizerContextReference.shapeInstanceId\n    };\n    NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/shape/clearSessionId.json`, data)\n        .then(ret.resolve);\n    delete recognizerContextReference.shapeInstanceId;\n  }\n  return ret.promise.then((res) => {\n    const modelRef = model;\n    resetRecognitionPositions(recognizerContext, modelRef);\n    modelRef.rawResult = res;\n    return modelRef;\n  });\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function close(options, model, recognizerContext) {\n  return reset(options, model, recognizerContext);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3RestShapeRecognizer.js","/**\n * @typedef {Object} DestructuredPromise\n * @property {Promise} promise\n * @property {function(value: Object)} resolve\n * @property {function(reason: Object)} reject\n */\n\n/**\n * @return {DestructuredPromise}\n */\nexport function destructurePromise() {\n  let resolve;\n  let reject;\n  const initPromise = new Promise(\n      (resolveParam, rejectParam) => {\n        resolve = resolveParam;\n        reject = rejectParam;\n      });\n  return { promise: initPromise, resolve, reject };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./util/PromiseHelper.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as NetworkInterface from '../../networkHelper/rest/networkInterface';\nimport * as CryptoHelper from '../../CryptoHelper';\nimport { updateSentRecognitionPositions, resetRecognitionPositions } from '../../../model/RecognizerContext';\nimport { commonRestV3Configuration, updateModelReceivedPosition } from './Cdkv3CommonRestRecognizer'; // Configuring recognition trigger\n\nexport { init, close } from '../../DefaultRecognizer';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const musicRestV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.MUSIC,\n  protocol: MyScriptJSConstants.Protocol.REST,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, commonRestV3Configuration, musicRestV3Configuration);\n}\n\nfunction buildInput(options, model, instanceId) {\n  const input = {\n    // As Rest MUSIC recognition is non incremental wa add the already recognized strokes\n    components: []\n        .concat(model.defaultSymbols, model.rawStrokes)\n        .filter(symbol => symbol.type !== 'staff')\n        .map((symbol) => {\n          if (symbol.type === 'stroke') {\n            return StrokeComponent.toJSON(symbol);\n          }\n          return symbol;\n        })\n  };\n  const musicParameter = Object.assign({}, options.recognitionParams.musicParameter);\n  delete musicParameter.clef; // FIXME find a way to avoid this ugly hack\n  Object.assign(input, musicParameter); // Building the input with the suitable parameters\n\n  logger.debug(`input.components size is ${input.components.length}`);\n\n  const data = {\n    instanceId,\n    applicationKey: options.recognitionParams.server.applicationKey,\n    musicInput: JSON.stringify(input)\n  };\n\n  if (options.recognitionParams.server.hmacKey) {\n    data.hmac = CryptoHelper.computeHmac(data.musicInput, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey);\n  }\n  return data;\n}\n\n/**\n * Enrich the model with recognized symbols\n * @param {Model} model Current model\n * @return {Model} Updated model\n */\nfunction processRenderingResult(model) {\n  logger.debug('Building the rendering model', model);\n  return model;\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  const modelReference = model;\n  const recognizerContextReference = recognizerContext;\n\n  const data = buildInput(options, model, recognizerContextReference.musicInstanceId);\n  updateSentRecognitionPositions(recognizerContextReference, modelReference);\n  return NetworkInterface.post(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/music/doSimpleRecognition.json`, data)\n      .then(\n          (response) => {\n            logger.debug('Cdkv3RestMusicRecognizer success', response);\n            recognizerContextReference.musicInstanceId = response.instanceId;\n            logger.debug('Cdkv3RestMusicRecognizer update model', response);\n            modelReference.rawResult = response;\n            modelReference.rawResult.type = `${musicRestV3Configuration.type.toLowerCase()}Result`;\n            return modelReference;\n          }\n      )\n      .then(processRenderingResult)\n      .then(updateModelReceivedPosition);\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  resetRecognitionPositions(recognizerContext, model);\n  // We are explicitly manipulating a reference here.\n  // eslint-disable-next-line no-param-reassign\n  delete recognizerContext.musicInstanceId;\n  return Promise.resolve(model);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/rest/Cdkv3RestMusicRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as InkModel from '../../../model/InkModel';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as Cdkv3WSRecognizerUtil from './Cdkv3WSRecognizerUtil';\nimport { processRenderingResult } from '../common/Cdkv3CommonMathRecognizer';\n\nexport { reset, close } from './Cdkv3WSRecognizerUtil';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const mathWebSocketV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.MATH,\n  protocol: MyScriptJSConstants.Protocol.WEBSOCKET,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, Cdkv3WSRecognizerUtil.commonWebSocketV3Configuration, mathWebSocketV3Configuration);\n}\n\nfunction buildMathInput(recognizerContext, model, options) {\n  if (recognizerContext.lastRecognitionPositions.lastSentPosition < 0) {\n    return {\n      type: 'start',\n      parameters: options.recognitionParams.mathParameter,\n      components: model.rawStrokes.map(stroke => StrokeComponent.toJSON(stroke))\n    };\n  }\n\n  return {\n    type: 'continue',\n    components: InkModel.extractPendingStrokes(model, -1).map(stroke => StrokeComponent.toJSON(stroke))\n  };\n}\n\n/**\n * Initialize recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Fulfilled when the init phase is over.\n */\nexport function init(options, model, recognizerContext) {\n  const suffixUrl = '/api/v3.0/recognition/ws/math';\n  return Cdkv3WSRecognizerUtil.init(suffixUrl, options, model, recognizerContext);\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  return Cdkv3WSRecognizerUtil.recognize(options, recognizerContext, model, buildMathInput)\n      .then(processRenderingResult)\n      .then(Cdkv3WSRecognizerUtil.updateModelReceivedPosition);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/websocket/Cdkv3WSMathRecognizer.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport * as NetworkWSInterface from '../../networkHelper/websocket/networkWSInterface';\nimport * as Cdkv3WSWebsocketBuilder from './Cdkv3WSBuilder';\nimport * as PromiseHelper from '../../../util/PromiseHelper';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as RecognizerContext from '../../../model/RecognizerContext';\n\n/**\n * Common configuration\n * @type {{availableTriggers: Array<String>, preferredTrigger: String}}\n */\nexport const commonWebSocketV3Configuration = {\n  availableTriggers: [MyScriptJSConstants.RecognitionTrigger.PEN_UP],\n  preferredTrigger: MyScriptJSConstants.RecognitionTrigger.PEN_UP\n};\n\nfunction buildUrl(options, suffixUrl) {\n  const scheme = (options.recognitionParams.server.scheme === 'https') ? 'wss' : 'ws';\n  return scheme + '://' + options.recognitionParams.server.host + suffixUrl;\n}\n\n/**\n * Update model lastReceivedPosition regarding to lastSentPosition\n * @param {Model} model\n * @return {Model}\n */\nexport function updateModelReceivedPosition(model) {\n  const modelReference = model;\n  modelReference.lastRecognitionPositions.lastReceivedPosition = modelReference.lastRecognitionPositions.lastSentPosition;\n  return modelReference;\n}\n\n/**\n * Init the websocket recognizer.\n * Open the connexion and proceed to the hmac challenge.\n * A recognizer context is build as such :\n * @param {String} suffixUrl\n * @param {Options} options\n * @param {Model} model\n * @param {RecognizerContext} recognizerContext\n * @return {Promise.<Model>} Fulfilled when the init phase is over.\n */\nexport function init(suffixUrl, options, model, recognizerContext) {\n  const recognizerContextReference = recognizerContext;\n  recognizerContextReference.suffixUrl = suffixUrl;\n  recognizerContextReference.options = options;\n  const url = buildUrl(options, suffixUrl);\n  const destructuredInitPromise = PromiseHelper.destructurePromise();\n\n  logger.debug('Opening the websocket for context ', recognizerContextReference);\n  const initCallback = Cdkv3WSWebsocketBuilder.buildWebSocketCallback(destructuredInitPromise, recognizerContextReference, options);\n  recognizerContextReference.url = url;\n  recognizerContextReference.callback = initCallback;\n  recognizerContextReference.options = options;\n  recognizerContextReference.currentReconnectionCount = 0;\n  recognizerContextReference.websocket = NetworkWSInterface.openWebSocket(recognizerContextReference);\n  recognizerContextReference.recognitionContexts = [];\n\n  // Feeding the recognitionContext\n  recognizerContextReference.initPromise = destructuredInitPromise.promise;\n\n  return recognizerContextReference.initPromise\n      .then(value => logger.debug('Init over ' + value))\n      .then(() => model)\n      .catch(error => logger.error('fatal error while loading recognizer'));\n}\n\n\nfunction send(recognizerContext, recognitionContext) {\n  const recognizerContextReference = recognizerContext;\n  const recognitionContextReference = recognitionContext;\n\n  logger.debug('Recognizer is alive. Sending last stroke');\n  recognizerContextReference.recognitionContexts.push(recognitionContextReference);\n  try {\n    NetworkWSInterface.send(recognizerContextReference, recognitionContext.buildInputFunction(recognizerContextReference, recognitionContextReference.model, recognitionContextReference.options));\n    RecognizerContext.updateSentRecognitionPositions(recognizerContextReference, recognitionContextReference.model);\n  } catch (sendException) {\n    if (RecognizerContext.shouldAttemptImmediateReconnect(recognizerContextReference)) {\n      init(recognizerContextReference.suffixUrl, recognizerContextReference.options, recognizerContextReference.model, recognizerContextReference).then(() => {\n        logger.info('Attempting a retry', recognizerContextReference.currentReconnectionCount);\n        recognizerContextReference.lastRecognitionPositions.lastSentPosition = -1;\n        send(recognizerContextReference, recognitionContext);\n      });\n    } else {\n      throw RecognizerContext.LOST_CONNEXION_MESSAGE;\n    }\n  }\n}\n\n/**\n * Do what is needed to clean the server context.\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>}\n */\nexport function reset(options, model, recognizerContext) {\n  const recognizerContextReference = recognizerContext;\n  RecognizerContext.resetRecognitionPositions(recognizerContext, model);\n  if (recognizerContextReference && recognizerContextReference.websocket) {\n    // We have to send again all strokes after a reset.\n    delete recognizerContextReference.instanceId;\n    try {\n      NetworkWSInterface.send(recognizerContextReference, { type: 'reset' });\n    } catch (sendFailedException) {\n      // To force failure without breaking the flow\n      Cdkv3WSWebsocketBuilder.buildWebSocketCallback(PromiseHelper.destructurePromise(), recognizerContextReference, options);\n    }\n  }\n  // We do not keep track of the success of reset.\n  return Promise.resolve(model);\n}\n\n/**\n * @param {Options} options\n * @param {RecognizerContext} recognizerContext\n * @param {Model} model\n * @param {function(recognizerContext: RecognizerContext, model: Model, options: Options): Object} buildInputFunction\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, recognizerContext, model, buildInputFunction) {\n  const destructuredRecognitionPromise = PromiseHelper.destructurePromise();\n  const recognizerContextReference = recognizerContext;\n\n  // Building an object with all mandatory fields to feed the recognition queue.\n  const recognitionContext = {\n    buildInputFunction,\n    model,\n    options,\n    recognitionPromiseCallbacks: destructuredRecognitionPromise\n  };\n\n  recognizerContextReference.initPromise.then(() => {\n    logger.debug('Init was done feeding the recognition queue');\n    try {\n      send(recognizerContextReference, recognitionContext);\n    } catch (recognitionError) {\n      logger.info('Unable to process recognition');\n      recognitionContext.recognitionPromiseCallbacks.reject(recognitionError);\n    }\n  }, /* rejection */ () => {\n    // TODO Manage this error\n    logger.info('Unable to init');\n    recognitionContext.recognitionPromiseCallbacks.reject('Unable to init');\n  });\n\n  return destructuredRecognitionPromise.promise;\n}\n\n/**\n * Close and free all resources that will no longer be used by the recognizer.\n * @param {Options} options\n * @param {Model} model\n * @param {RecognizerContext} recognizerContext\n * @return {Promise.<Model>}\n */\nexport function close(options, model, recognizerContext) {\n  if (recognizerContext && recognizerContext.websocket) {\n    NetworkWSInterface.close(recognizerContext.websocket, 1000, 'CLOSE BY USER');\n  }\n  return Promise.resolve(model);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/websocket/Cdkv3WSRecognizerUtil.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport * as RecognizerContext from '../../../model/RecognizerContext';\n\n\n/**\n * Close the websocket\n * @param {WebSocket} websocket Current WebSocket\n * @param {Number} code Exit code\n * @param {String} reason Exit reason\n */\nexport function close(websocket, code, reason) {\n  if (websocket && websocket.readyState < 2) {\n    websocket.close(code, reason);\n  }\n}\n\nfunction infinitPing(websocket) {\n  const websocketRef = websocket;\n  websocketRef.pingCount++;\n  if (websocketRef.pingCount > websocketRef.maxPingLost) {\n    websocket.close(1000, 'PING_LOST');\n  } else if (websocketRef.readyState <= 1) {\n    setTimeout(() => {\n      websocketRef.send(JSON.stringify({ type: 'ping' }));\n      infinitPing(websocketRef);\n    }, websocketRef.pingIntervalMillis);\n  }\n}\n\n/**\n * Attach all socket attributes helping managing server connexion\n * @param {WebSocket} websocket Current WebSocket\n * @param {RecognizerContext} recognizerContext\n */\nfunction addWebsocketAttributes(websocket, recognizerContext) {\n  const socket = websocket;\n  socket.start = new Date();\n  socket.pingCount = 0;\n  socket.pingIntervalMillis = recognizerContext.options.recognitionParams.server.websocket.pingIntervalMillis;\n  socket.maxPingLost = recognizerContext.options.recognitionParams.server.websocket.maxPingLostCount;\n  socket.autoReconnect = recognizerContext.options.recognitionParams.server.websocket.autoReconnect;\n  socket.maxRetryCount = recognizerContext.options.recognitionParams.server.maxRetryCount;\n  socket.recognizerContext = recognizerContext;\n}\n\n/**\n * @param {RecognizerContext} recognizerContext Recognizer context\n * @return {WebSocket} Opened WebSocket\n */\nexport function openWebSocket(recognizerContext) {\n  // eslint-disable-next-line no-undef\n  const socket = new WebSocket(recognizerContext.url);\n  addWebsocketAttributes(socket, recognizerContext);\n  infinitPing(socket);\n\n  socket.onopen = (e) => {\n    logger.debug('onOpen');\n    recognizerContext.callback(e);\n  };\n\n  socket.onclose = (e) => {\n    logger.debug('onClose', new Date() - socket.start);\n    recognizerContext.callback(e);\n  };\n\n  socket.onerror = (e) => {\n    logger.debug('onError');\n    recognizerContext.callback(e);\n  };\n\n  socket.onmessage = (e) => {\n    logger.debug('onMessage');\n    socket.pingCount = 0;\n    socket.maxRetryCount = 0;\n    const parsedMessage = JSON.parse(e.data);\n    if (parsedMessage.type !== 'pong') {\n      const callBackParam = {\n        type: e.type,\n        data: JSON.parse(e.data)\n      };\n      recognizerContext.callback(callBackParam);\n    }\n  };\n\n  return socket;\n}\n\n/**\n * Send data message\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @param {Object} message Data message\n */\nexport function send(recognizerContext, message) {\n  const websocket = recognizerContext.websocket;\n  const state = websocket.readyState;\n  if (state <= 1) {\n    websocket.send(JSON.stringify(message));\n  } else {\n    throw RecognizerContext.LOST_CONNEXION_MESSAGE;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/networkHelper/websocket/networkWSInterface.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport * as NetworkWSInterface from '../../networkHelper/websocket/networkWSInterface';\nimport * as CryptoHelper from '../../CryptoHelper';\n\n/**\n * A CDK v3 websocket dialog have this sequence :\n * ---------- Client ------------------------------------- Server ----------------------------------\n * init (send the applicationKey) ================>\n *                                       <=========== hmacChallenge\n * answerToHmacChallenge (send the hmac) =========>\n *                                       <=========== init\n * start (send the parameters and first strokes ) ===============>\n *                                       <=========== recognition with instance id\n * continue (send the other strokes ) ============>\n *                                       <=========== recognition\n */\n\nfunction buildInitInput(options) {\n  return {\n    type: 'applicationKey',\n    applicationKey: options.recognitionParams.server.applicationKey\n  };\n}\n\nfunction answerToHmacChallengeCallback(serverMessage, options, applicationKey) {\n  return {\n    type: 'hmac',\n    applicationKey,\n    challenge: serverMessage.data.challenge,\n    hmac: CryptoHelper.computeHmac(serverMessage.data.challenge, options.recognitionParams.server.applicationKey, options.recognitionParams.server.hmacKey)\n  };\n}\n\nfunction simpleCallBack(payload, error) {\n  logger.error('This is something unexpected in current recognizer. Not the type of message we should have here.');\n  logger.debug('payload', payload);\n  logger.debug('error', error);\n}\n\nfunction updateInstanceId(recognizerContext, message) {\n  const recognizerContextReference = recognizerContext;\n  if (recognizerContextReference.instanceId && recognizerContextReference.instanceId !== message.data.instanceId) {\n    logger.debug(`Instance id switch from ${recognizerContextReference.instanceId} to ${message.data.instanceId} this is suspicious`);\n  }\n  recognizerContextReference.instanceId = message.data.instanceId;\n  logger.debug('Cdkv3WSRecognizer memorizing instance id', message.data.instanceId);\n}\n\nfunction onResult(recognizerContext, message) {\n  logger.debug('Cdkv3WSRecognizer success', message);\n  const recognitionContext = recognizerContext.recognitionContexts.shift();\n  const modelReference = recognitionContext.model;\n  logger.debug('Cdkv3WSRecognizer update model', message);\n  modelReference.rawResult = message.data;\n  // Giving back the hand to the InkPaper by resolving the promise.\n  recognitionContext.recognitionPromiseCallbacks.resolve(modelReference);\n}\n\n/**\n * This function bind the right behaviour when a message is receive by the websocket.\n * @param {DestructuredPromise} destructuredPromise\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @param {Options} options Current configuration\n * @return {function} Callback to handle WebSocket results\n */\nexport function buildWebSocketCallback(destructuredPromise, recognizerContext, options) {\n  return (message) => {\n    // Handle websocket messages\n    const applicationKey = options.recognitionParams.server.applicationKey;\n    logger.debug('Handling', message.type, message);\n\n    switch (message.type) {\n      case 'open' :\n        NetworkWSInterface.send(recognizerContext, buildInitInput(options));\n        break;\n      case 'message' :\n        logger.debug('Receiving message', message.data.type);\n        switch (message.data.type) {\n          case 'hmacChallenge' :\n            NetworkWSInterface.send(recognizerContext, answerToHmacChallengeCallback(message, options, applicationKey));\n            break;\n          case 'init' :\n            destructuredPromise.resolve('Init done');\n            break;\n          case 'reset' :\n            logger.debug('Websocket reset done');\n            break;\n          case 'mathResult' :\n          case 'textResult' :\n            updateInstanceId(recognizerContext, message);\n            onResult(recognizerContext, message);\n            break;\n          default :\n            simpleCallBack(message);\n            destructuredPromise.reject('Unknown message');\n        }\n        break;\n      case 'close' :\n        logger.debug('Websocket close done');\n        break;\n      default :\n        simpleCallBack(message);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/websocket/Cdkv3WSBuilder.js","import { recognizerLogger as logger } from '../../../configuration/LoggerConfig';\nimport MyScriptJSConstants from '../../../configuration/MyScriptJSConstants';\nimport * as InkModel from '../../../model/InkModel';\nimport * as StrokeComponent from '../../../model/StrokeComponent';\nimport * as Cdkv3WSRecognizerUtil from './Cdkv3WSRecognizerUtil';\nimport { processRenderingResult } from '../common/Cdkv3CommonTextRecognizer';\n\nexport { reset, close } from './Cdkv3WSRecognizerUtil';\n\n/**\n * Recognizer configuration\n * @type {{type: String, protocol: String, apiVersion: String}}\n */\nexport const textWebSocketV3Configuration = {\n  type: MyScriptJSConstants.RecognitionType.TEXT,\n  protocol: MyScriptJSConstants.Protocol.WEBSOCKET,\n  apiVersion: 'V3'\n};\n\n/**\n * Get the configuration supported by this recognizer\n * @return {RecognizerInfo}\n */\nexport function getInfo() {\n  return Object.assign({}, Cdkv3WSRecognizerUtil.commonWebSocketV3Configuration, textWebSocketV3Configuration);\n}\n\nfunction buildTextInput(recognizerContext, model, options) {\n  if (recognizerContext.lastRecognitionPositions.lastSentPosition < 0) {\n    return {\n      type: 'start',\n      textParameter: options.recognitionParams.textParameter,\n      inputUnits: [{\n        textInputType: MyScriptJSConstants.InputType.MULTI_LINE_TEXT,\n        components: model.rawStrokes.map(stroke => StrokeComponent.toJSON(stroke))\n      }]\n    };\n  }\n\n  return {\n    type: 'continue',\n    inputUnits: [{\n      textInputType: MyScriptJSConstants.InputType.MULTI_LINE_TEXT,\n      components: InkModel.extractPendingStrokes(model, -1).map(stroke => StrokeComponent.toJSON(stroke))\n    }]\n  };\n}\n\n/**\n * Initialize recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Fulfilled when the init phase is over.\n */\nexport function init(options, model, recognizerContext) {\n  const suffixUrl = '/api/v3.0/recognition/ws/text';\n  return Cdkv3WSRecognizerUtil.init(suffixUrl, options, model, recognizerContext);\n}\n\n/**\n * Do the recognition\n * @param {Options} options Current configuration\n * @param {Model} model Current model\n * @param {RecognizerContext} recognizerContext Current recognizer context\n * @return {Promise.<Model>} Promise that return an updated model as a result\n */\nexport function recognize(options, model, recognizerContext) {\n  return Cdkv3WSRecognizerUtil.recognize(options, recognizerContext, model, buildTextInput)\n      .then(processRenderingResult)\n      .then(Cdkv3WSRecognizerUtil.updateModelReceivedPosition);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./recognizer/cdkv3/websocket/Cdkv3WSTextRecognizer.js","import { inkpaperLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Emits 'change' event when model change occurs\n * @param {Model} data The current model data that have changed.\n * @emits {Event} when the model changes.\n */\nexport default function eventCallback(data) {\n  logger.debug('emitting change event', data);\n  // We are making usage of a browser provided class\n  // eslint-disable-next-line no-undef\n  this.dispatchEvent(new CustomEvent('change', { detail: data }));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./callback/EventCallback.js","import assign from 'assign-deep';\n\n/**\n * @typedef {Object} Styles\n * @property {{color: String, width: Number}} strokeStyle\n */\n\n/**\n * Default style\n * @type {Styles}\n */\nconst defaultStyle = {\n  strokeStyle: {\n    color: '#1580CD',\n    width: 4\n  }\n};\n\n/**\n * Generate style\n * @param {Styles} style Custom style to be applied\n * @return {Styles} Overridden style\n */\nexport function overrideDefaultStyle(style) {\n  return assign({}, defaultStyle, style === undefined ? {} : style);\n}\n\nexport default defaultStyle;\n\n\n\n// WEBPACK FOOTER //\n// ./configuration/MyScriptJSStyles.js","import { modelLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Undo/redo context\n * @typedef {Object} UndoRedoContext\n * @property {Array<Model>} stack List of processed models.\n * @property {Number} currentPosition Current model index into the stack.\n * @property {Number} maxSize Max size of the stack.\n */\n\n/**\n * Create a new undo/redo context\n * @param {Options} options Current configuration\n * @return {UndoRedoContext} New undo/redo context\n */\nexport function createUndoRedoContext(options) {\n  return {\n    stack: [],\n    currentPosition: -1,\n    maxSize: options.undoRedoMaxStackSize\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model/UndoRedoContext.js","import * as InkModel from '../model/InkModel';\nimport { modelLogger as logger } from '../configuration/LoggerConfig';\n\n/**\n * Undo/redo manager\n * @typedef {Object} UndoRedoManager\n * @property {function(undoRedoContext: UndoRedoContext, model: Model): Promise.<Model>} pushModel Push the current model into the undo/redo context.\n * @property {function(undoRedoContext: UndoRedoContext): Promise.<Model>} undo Undo.\n * @property {function(undoRedoContext: UndoRedoContext): Promise.<Model>} redo Redo.\n * @property {function(undoRedoContext: UndoRedoContext, model: Model, options: Options): Promise.<Model>} clear Clear.\n */\n\nfunction getModel(undoRedoContext, position = undoRedoContext.currentPosition) {\n  const model = undoRedoContext.stack[position];\n  model.canUndo = position > 0;\n  model.canRedo = position < (undoRedoContext.stack.length - 1);\n  return Promise.resolve(model);\n}\n\n/**\n * Mutate the undoRedo stack by adding a new model to it.\n * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n * @param {Model} model Current model\n * @return {Promise.<Model>} Pushed model\n */\nexport function pushModel(undoRedoContext, model) {\n  const modelReference = InkModel.cloneModel(model);\n  const undoRedoContextReference = undoRedoContext;\n  undoRedoContextReference.currentPosition += 1;\n  undoRedoContextReference.stack = undoRedoContextReference.stack.slice(0, undoRedoContextReference.currentPosition);\n  undoRedoContextReference.stack.push(modelReference);\n  if (undoRedoContextReference.stack.length > undoRedoContextReference.maxSize) {\n    undoRedoContextReference.stack.shift();\n    undoRedoContextReference.currentPosition--;\n  }\n  return getModel(undoRedoContext);\n}\n\n/**\n * Undo\n * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n * @return {Promise.<Model>}\n */\nexport function undo(undoRedoContext) {\n  const undoRedoContextReference = undoRedoContext;\n  if (undoRedoContextReference.currentPosition > 0) {\n    undoRedoContextReference.currentPosition -= 1;\n    logger.debug('undo index', undoRedoContextReference.currentPosition);\n  }\n  return getModel(undoRedoContext);\n}\n\n/**\n * Redo\n * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n * @return {Promise.<Model>}\n */\nexport function redo(undoRedoContext) {\n  const undoRedoContextReference = undoRedoContext;\n  if (undoRedoContextReference.currentPosition < undoRedoContextReference.stack.length - 1) {\n    undoRedoContextReference.currentPosition += 1;\n    logger.debug('redo index', undoRedoContextReference.currentPosition);\n  }\n  return getModel(undoRedoContext);\n}\n\n/**\n * Clear\n * @param {UndoRedoContext} undoRedoContext Current undo/redo context\n * @param {Model} model Current model\n * @param {Options} options Current options\n * @return {Promise.<Model>}\n */\nexport function clear(undoRedoContext, model, options) {\n  return pushModel(undoRedoContext, InkModel.createModel(options));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./model/UndoRedoManager.js","import { drawModel } from './CanvasRenderer';\nimport * as InkModel from '../../model/InkModel';\n\nfunction createCanvas(borderCoordinates, margin = 10) {\n  // eslint-disable-next-line no-undef\n  const browserDocument = document;\n  const canvas = browserDocument.createElement('canvas');\n  canvas.width = Math.abs(borderCoordinates.maxX - borderCoordinates.minX) + (2 * margin);\n  canvas.style.width = canvas.width + 'px';\n  canvas.height = Math.abs(borderCoordinates.maxY - borderCoordinates.minY) + (2 * margin);\n  canvas.style.height = canvas.height + 'px';\n  return canvas;\n}\n\n/**\n * Generate a PNG image data url from the model\n * @param {Model} model Current model\n * @param {Stroker} stroker Current stroker\n * @param {Number} [margin=10] Margins to apply around the image\n * @return {String} Image data string result\n */\nexport function getImage(model, stroker, margin = 10) {\n  const borderCoordinates = InkModel.getBorderCoordinates(model);\n  const capturingCanvas = createCanvas(borderCoordinates, margin);\n  const renderingCanvas = createCanvas(borderCoordinates, margin);\n  const renderStructure = {\n    renderingCanvas,\n    renderingCanvasContext: renderingCanvas.getContext('2d'),\n    capturingCanvas,\n    capturingCanvasContext: capturingCanvas.getContext('2d')\n  };\n  // Change canvas origin\n  renderStructure.renderingCanvasContext.translate(-borderCoordinates.minX + margin, -borderCoordinates.minY + margin);\n  drawModel(renderStructure, model, stroker);\n  return renderStructure.renderingCanvas.toDataURL('image/png');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./renderer/canvas/ImageRenderer.js","import { inkpaperLogger as logger } from './configuration/LoggerConfig';\nimport { InkPaper } from './InkPaper';\nimport MyScriptJSConstants from './configuration/MyScriptJSConstants';\nimport * as NetworkInterface from './recognizer/networkHelper/rest/networkInterface';\n\n/**\n * Attach an InkPaper to a DOMElement\n * @param {Element} element DOM element to attach an inkPaper\n * @param {Options} [options] Configuration to apply\n * @param {Styles} [customStyle] Custom style to apply\n * @param {Behaviors} [behaviors] Custom behaviors to apply\n * @return {InkPaper} New inkPaper\n */\nexport function register(element, options, customStyle, behaviors) {\n  logger.debug('Registering a new inkpaper');\n  return new InkPaper(element, options, customStyle, behaviors);\n}\n\n/**\n * Return the list of available recognition languages\n * @param {Options} options Current configuration\n * @return {Promise.<Object>} A list of languages available for the current configuration\n */\nexport function getAvailableLanguageList(options) {\n  const data = {\n    applicationKey: options.recognitionParams.server.applicationKey\n  };\n\n  switch (options.recognitionParams.type) {\n    case MyScriptJSConstants.RecognitionType.TEXT:\n      data.inputMode = options.recognitionParams.textParameter.textInputMode;\n      break;\n    case MyScriptJSConstants.RecognitionType.ANALYZER:\n      data.inputMode = options.recognitionParams.analyzerParameter.textParameter.textInputMode;\n      break;\n    default:\n      break;\n  }\n\n  return NetworkInterface.get(`${options.recognitionParams.server.scheme}://${options.recognitionParams.server.host}/api/v3.0/recognition/rest/text/languages.json`, data);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./InkPaperFacade.js"],"sourceRoot":""}