{
    "project": {
        "name": "myscript",
        "description": "MyScript javascript library to facilitate the use of cloud handwriting recognition",
        "version": "1.0.0",
        "url": "http://myscript.github.io/MyScriptJS/"
    },
    "files": {
        "src/common/generic/point.js": {
            "name": "src/common/generic/point.js",
            "modules": {},
            "classes": {
                "Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/generic/quadraticPoint.js": {
            "name": "src/common/generic/quadraticPoint.js",
            "modules": {},
            "classes": {
                "QuadraticPoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/generic/rectangle.js": {
            "name": "src/common/generic/rectangle.js",
            "modules": {},
            "classes": {
                "Rectangle": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/abstractWSMessage.js": {
            "name": "src/common/abstractWSMessage.js",
            "modules": {},
            "classes": {
                "AbstractWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/inkManager.js": {
            "name": "src/common/inkManager.js",
            "modules": {},
            "classes": {
                "InkManager": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/common/mathUtils.js": {
            "name": "src/common/mathUtils.js",
            "modules": {},
            "classes": {
                "MathUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/analyzer/analyzerParameter.js": {
            "name": "src/input/analyzer/analyzerParameter.js",
            "modules": {},
            "classes": {
                "AnalyzerParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/analyzer/analyzerRecognitionData.js": {
            "name": "src/input/analyzer/analyzerRecognitionData.js",
            "modules": {},
            "classes": {
                "AnalyzerRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/analyzer/analyzerRecognitionInput.js": {
            "name": "src/input/analyzer/analyzerRecognitionInput.js",
            "modules": {},
            "classes": {
                "AnalyzerRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/components/abstractComponent.js": {
            "name": "src/input/generic/components/abstractComponent.js",
            "modules": {},
            "classes": {
                "AbstractComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/components/stroke.js": {
            "name": "src/input/generic/components/stroke.js",
            "modules": {},
            "classes": {
                "Stroke": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/abstractContinueRequestWSMessage.js": {
            "name": "src/input/generic/abstractContinueRequestWSMessage.js",
            "modules": {},
            "classes": {
                "AbstractContinueRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/abstractParameter.js": {
            "name": "src/input/generic/abstractParameter.js",
            "modules": {},
            "classes": {
                "AbstractParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/abstractRecognitionData.js": {
            "name": "src/input/generic/abstractRecognitionData.js",
            "modules": {},
            "classes": {
                "AbstractRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/abstractRecognitionInput.js": {
            "name": "src/input/generic/abstractRecognitionInput.js",
            "modules": {},
            "classes": {
                "AbstractRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/abstractStartRequestWSMessage.js": {
            "name": "src/input/generic/abstractStartRequestWSMessage.js",
            "modules": {},
            "classes": {
                "AbstractStartRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/challengeRequestWSMessage.js": {
            "name": "src/input/generic/challengeRequestWSMessage.js",
            "modules": {},
            "classes": {
                "ChallengeRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/initRequestWSMessage.js": {
            "name": "src/input/generic/initRequestWSMessage.js",
            "modules": {},
            "classes": {
                "InitRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/recognitionLanguagesData.js": {
            "name": "src/input/generic/recognitionLanguagesData.js",
            "modules": {},
            "classes": {
                "RecognitionLanguagesData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/generic/resetRequestWSMessage.js": {
            "name": "src/input/generic/resetRequestWSMessage.js",
            "modules": {},
            "classes": {
                "ResetRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/math/mathContinueRequestWSMessage.js": {
            "name": "src/input/math/mathContinueRequestWSMessage.js",
            "modules": {},
            "classes": {
                "MathContinueRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/math/mathParameter.js": {
            "name": "src/input/math/mathParameter.js",
            "modules": {},
            "classes": {
                "MathParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/math/mathRecognitionData.js": {
            "name": "src/input/math/mathRecognitionData.js",
            "modules": {},
            "classes": {
                "MathRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/math/mathRecognitionInput.js": {
            "name": "src/input/math/mathRecognitionInput.js",
            "modules": {},
            "classes": {
                "MathRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/math/mathStartRequestWSMessage.js": {
            "name": "src/input/math/mathStartRequestWSMessage.js",
            "modules": {},
            "classes": {
                "MathStartRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/abstractMusicInputComponent.js": {
            "name": "src/input/music/components/abstractMusicInputComponent.js",
            "modules": {},
            "classes": {
                "AbstractMusicInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicAccidentalInputComponent.js": {
            "name": "src/input/music/components/musicAccidentalInputComponent.js",
            "modules": {},
            "classes": {
                "MusicAccidentalInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicArpeggiateInputComponent.js": {
            "name": "src/input/music/components/musicArpeggiateInputComponent.js",
            "modules": {},
            "classes": {
                "MusicArpeggiateInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicBarInput.js": {
            "name": "src/input/music/components/musicBarInput.js",
            "modules": {},
            "classes": {
                "MusicBarInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicBarInputComponent.js": {
            "name": "src/input/music/components/musicBarInputComponent.js",
            "modules": {},
            "classes": {
                "MusicBarInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicBeamInput.js": {
            "name": "src/input/music/components/musicBeamInput.js",
            "modules": {},
            "classes": {
                "MusicBeamInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicBeamInputComponent.js": {
            "name": "src/input/music/components/musicBeamInputComponent.js",
            "modules": {},
            "classes": {
                "MusicBeamInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicClefInput.js": {
            "name": "src/input/music/components/musicClefInput.js",
            "modules": {},
            "classes": {
                "MusicClefInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicClefInputComponent.js": {
            "name": "src/input/music/components/musicClefInputComponent.js",
            "modules": {},
            "classes": {
                "MusicClefInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicDecorationInput.js": {
            "name": "src/input/music/components/musicDecorationInput.js",
            "modules": {},
            "classes": {
                "MusicDecorationInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicDecorationInputComponent.js": {
            "name": "src/input/music/components/musicDecorationInputComponent.js",
            "modules": {},
            "classes": {
                "MusicDecorationInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicDotsInputComponent.js": {
            "name": "src/input/music/components/musicDotsInputComponent.js",
            "modules": {},
            "classes": {
                "MusicDotsInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicHeadInputComponent.js": {
            "name": "src/input/music/components/musicHeadInputComponent.js",
            "modules": {},
            "classes": {
                "MusicHeadInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicLedgerLineInputComponent.js": {
            "name": "src/input/music/components/musicLedgerLineInputComponent.js",
            "modules": {},
            "classes": {
                "MusicLedgerLineInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicRestInputComponent.js": {
            "name": "src/input/music/components/musicRestInputComponent.js",
            "modules": {},
            "classes": {
                "MusicRestInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicStemInputComponent.js": {
            "name": "src/input/music/components/musicStemInputComponent.js",
            "modules": {},
            "classes": {
                "MusicStemInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicTieOrSlurInputComponent.js": {
            "name": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "modules": {},
            "classes": {
                "MusicTieOrSlurInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/components/musicTimeSignatureInputComponent.js": {
            "name": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "modules": {},
            "classes": {
                "MusicTimeSignatureInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/musicParameter.js": {
            "name": "src/input/music/musicParameter.js",
            "modules": {},
            "classes": {
                "MusicParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/musicRecognitionData.js": {
            "name": "src/input/music/musicRecognitionData.js",
            "modules": {},
            "classes": {
                "MusicRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/musicRecognitionInput.js": {
            "name": "src/input/music/musicRecognitionInput.js",
            "modules": {},
            "classes": {
                "MusicRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/music/musicStaff.js": {
            "name": "src/input/music/musicStaff.js",
            "modules": {},
            "classes": {
                "MusicStaff": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/shape/shapeParameter.js": {
            "name": "src/input/shape/shapeParameter.js",
            "modules": {},
            "classes": {
                "ShapeParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/shape/shapeRecognitionData.js": {
            "name": "src/input/shape/shapeRecognitionData.js",
            "modules": {},
            "classes": {
                "ShapeRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/shape/shapeRecognitionInput.js": {
            "name": "src/input/shape/shapeRecognitionInput.js",
            "modules": {},
            "classes": {
                "ShapeRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/components/abstractTextInputComponent.js": {
            "name": "src/input/text/components/abstractTextInputComponent.js",
            "modules": {},
            "classes": {
                "AbstractTextInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/components/charInputComponent.js": {
            "name": "src/input/text/components/charInputComponent.js",
            "modules": {},
            "classes": {
                "CharInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/components/characterInputComponent.js": {
            "name": "src/input/text/components/characterInputComponent.js",
            "modules": {},
            "classes": {
                "CharacterInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/components/characterInputComponentAlternate.js": {
            "name": "src/input/text/components/characterInputComponentAlternate.js",
            "modules": {},
            "classes": {
                "CharacterInputComponentAlternate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/components/stringInputComponent.js": {
            "name": "src/input/text/components/stringInputComponent.js",
            "modules": {},
            "classes": {
                "StringInputComponent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textContinueRequestWSMessage.js": {
            "name": "src/input/text/textContinueRequestWSMessage.js",
            "modules": {},
            "classes": {
                "TextContinueRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textInputUnit.js": {
            "name": "src/input/text/textInputUnit.js",
            "modules": {},
            "classes": {
                "TextInputUnit": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textParameter.js": {
            "name": "src/input/text/textParameter.js",
            "modules": {},
            "classes": {
                "TextParameter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textProperties.js": {
            "name": "src/input/text/textProperties.js",
            "modules": {},
            "classes": {
                "TextProperties": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textRecognitionData.js": {
            "name": "src/input/text/textRecognitionData.js",
            "modules": {},
            "classes": {
                "TextRecognitionData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textRecognitionInput.js": {
            "name": "src/input/text/textRecognitionInput.js",
            "modules": {},
            "classes": {
                "TextRecognitionInput": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/text/textStartRequestWSMessage.js": {
            "name": "src/input/text/textStartRequestWSMessage.js",
            "modules": {},
            "classes": {
                "TextStartRequestWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/networking/networkInterface.js": {
            "name": "src/networking/networkInterface.js",
            "modules": {},
            "classes": {
                "NetworkInterface": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerCell.js": {
            "name": "src/output/analyzer/analyzerCell.js",
            "modules": {},
            "classes": {
                "AnalyzerCell": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerCellData.js": {
            "name": "src/output/analyzer/analyzerCellData.js",
            "modules": {},
            "classes": {
                "AnalyzerCellData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerDocument.js": {
            "name": "src/output/analyzer/analyzerDocument.js",
            "modules": {},
            "classes": {
                "AnalyzerDocument": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerElement.js": {
            "name": "src/output/analyzer/analyzerElement.js",
            "modules": {},
            "classes": {
                "AnalyzerElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerElementReference.js": {
            "name": "src/output/analyzer/analyzerElementReference.js",
            "modules": {},
            "classes": {
                "AnalyzerElementReference": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerGroup.js": {
            "name": "src/output/analyzer/analyzerGroup.js",
            "modules": {},
            "classes": {
                "AnalyzerGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerInkRange.js": {
            "name": "src/output/analyzer/analyzerInkRange.js",
            "modules": {},
            "classes": {
                "AnalyzerInkRange": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerLine.js": {
            "name": "src/output/analyzer/analyzerLine.js",
            "modules": {},
            "classes": {
                "AnalyzerLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerLineData.js": {
            "name": "src/output/analyzer/analyzerLineData.js",
            "modules": {},
            "classes": {
                "AnalyzerLineData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerPointData.js": {
            "name": "src/output/analyzer/analyzerPointData.js",
            "modules": {},
            "classes": {
                "AnalyzerPointData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerRecognizedStroke.js": {
            "name": "src/output/analyzer/analyzerRecognizedStroke.js",
            "modules": {},
            "classes": {
                "AnalyzerRecognizedStroke": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerResult.js": {
            "name": "src/output/analyzer/analyzerResult.js",
            "modules": {},
            "classes": {
                "AnalyzerResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerStrokeType.js": {
            "name": "src/output/analyzer/analyzerStrokeType.js",
            "modules": {},
            "classes": {
                "AnalyzerStrokeType": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerTable.js": {
            "name": "src/output/analyzer/analyzerTable.js",
            "modules": {},
            "classes": {
                "AnalyzerTable": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerTableData.js": {
            "name": "src/output/analyzer/analyzerTableData.js",
            "modules": {},
            "classes": {
                "AnalyzerTableData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerTextLine.js": {
            "name": "src/output/analyzer/analyzerTextLine.js",
            "modules": {},
            "classes": {
                "AnalyzerTextLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerTextLineData.js": {
            "name": "src/output/analyzer/analyzerTextLineData.js",
            "modules": {},
            "classes": {
                "AnalyzerTextLineData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerUnderline.js": {
            "name": "src/output/analyzer/analyzerUnderline.js",
            "modules": {},
            "classes": {
                "AnalyzerUnderline": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/analyzer/analyzerUnderlineData.js": {
            "name": "src/output/analyzer/analyzerUnderlineData.js",
            "modules": {},
            "classes": {
                "AnalyzerUnderlineData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/generic/abstractRecoResponseWSMessage.js": {
            "name": "src/output/generic/abstractRecoResponseWSMessage.js",
            "modules": {},
            "classes": {
                "AbstractRecoResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/generic/abstractResult.js": {
            "name": "src/output/generic/abstractResult.js",
            "modules": {},
            "classes": {
                "AbstractResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/generic/challengeResponseWSMessage.js": {
            "name": "src/output/generic/challengeResponseWSMessage.js",
            "modules": {},
            "classes": {
                "ChallengeResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/generic/errorResponseWSMessage.js": {
            "name": "src/output/generic/errorResponseWSMessage.js",
            "modules": {},
            "classes": {
                "ErrorResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/generic/initResponseWSMessage.js": {
            "name": "src/output/generic/initResponseWSMessage.js",
            "modules": {},
            "classes": {
                "InitResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathDocument.js": {
            "name": "src/output/math/mathDocument.js",
            "modules": {},
            "classes": {
                "MathDocument": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathExponentiableNonTerminalNode.js": {
            "name": "src/output/math/mathExponentiableNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathExponentiableNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathExpressionNonTerminalNode.js": {
            "name": "src/output/math/mathExpressionNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathExpressionNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathFenceRuleNode.js": {
            "name": "src/output/math/mathFenceRuleNode.js",
            "modules": {},
            "classes": {
                "MathFenceRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathFractionRuleNode.js": {
            "name": "src/output/math/mathFractionRuleNode.js",
            "modules": {},
            "classes": {
                "MathFractionRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathHorizontalPairRuleNode.js": {
            "name": "src/output/math/mathHorizontalPairRuleNode.js",
            "modules": {},
            "classes": {
                "MathHorizontalPairRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathIdentityRuleNode.js": {
            "name": "src/output/math/mathIdentityRuleNode.js",
            "modules": {},
            "classes": {
                "MathIdentityRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathInkRange.js": {
            "name": "src/output/math/mathInkRange.js",
            "modules": {},
            "classes": {
                "MathInkRange": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathLaTexResultElement.js": {
            "name": "src/output/math/mathLaTexResultElement.js",
            "modules": {},
            "classes": {
                "MathLaTexResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathLeftFenceRuleNode.js": {
            "name": "src/output/math/mathLeftFenceRuleNode.js",
            "modules": {},
            "classes": {
                "MathLeftFenceRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathMathMLResultElement.js": {
            "name": "src/output/math/mathMathMLResultElement.js",
            "modules": {},
            "classes": {
                "MathMathMLResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathNode.js": {
            "name": "src/output/math/mathNode.js",
            "modules": {},
            "classes": {
                "MathNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathNonTerminalNode.js": {
            "name": "src/output/math/mathNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathOverscriptRuleNode.js": {
            "name": "src/output/math/mathOverscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathOverscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathPreSuperscriptRuleNode.js": {
            "name": "src/output/math/mathPreSuperscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathPreSuperscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathResponseWSMessage.js": {
            "name": "src/output/math/mathResponseWSMessage.js",
            "modules": {},
            "classes": {
                "MathResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathResult.js": {
            "name": "src/output/math/mathResult.js",
            "modules": {},
            "classes": {
                "MathResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathResultElement.js": {
            "name": "src/output/math/mathResultElement.js",
            "modules": {},
            "classes": {
                "MathResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathRuleNode.js": {
            "name": "src/output/math/mathRuleNode.js",
            "modules": {},
            "classes": {
                "MathRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathScratchOut.js": {
            "name": "src/output/math/mathScratchOut.js",
            "modules": {},
            "classes": {
                "MathScratchOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSqrtNonTerminalNode.js": {
            "name": "src/output/math/mathSqrtNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathSqrtNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSqrtRuleNode.js": {
            "name": "src/output/math/mathSqrtRuleNode.js",
            "modules": {},
            "classes": {
                "MathSqrtRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSubSuperscriptRuleNode.js": {
            "name": "src/output/math/mathSubSuperscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathSubSuperscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSubscriptRuleNode.js": {
            "name": "src/output/math/mathSubscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathSubscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSuperscriptRuleNode.js": {
            "name": "src/output/math/mathSuperscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathSuperscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSymbolTreeResultElement.js": {
            "name": "src/output/math/mathSymbolTreeResultElement.js",
            "modules": {},
            "classes": {
                "MathSymbolTreeResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathSystemNonTerminalNode.js": {
            "name": "src/output/math/mathSystemNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathSystemNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathTermNonTerminalNode.js": {
            "name": "src/output/math/mathTermNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathTermNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathTerminalNode.js": {
            "name": "src/output/math/mathTerminalNode.js",
            "modules": {},
            "classes": {
                "MathTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathTerminalNodeCandidate.js": {
            "name": "src/output/math/mathTerminalNodeCandidate.js",
            "modules": {},
            "classes": {
                "MathTerminalNodeCandidate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathUnderOverscriptRuleNode.js": {
            "name": "src/output/math/mathUnderOverscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathUnderOverscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathUnderscriptRuleNode.js": {
            "name": "src/output/math/mathUnderscriptRuleNode.js",
            "modules": {},
            "classes": {
                "MathUnderscriptRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathVectorNonTerminalNode.js": {
            "name": "src/output/math/mathVectorNonTerminalNode.js",
            "modules": {},
            "classes": {
                "MathVectorNonTerminalNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/math/mathVerticalPairRuleNode.js": {
            "name": "src/output/math/mathVerticalPairRuleNode.js",
            "modules": {},
            "classes": {
                "MathVerticalPairRuleNode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicAccidental.js": {
            "name": "src/output/music/musicAccidental.js",
            "modules": {},
            "classes": {
                "MusicAccidental": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicAnnotation.js": {
            "name": "src/output/music/musicAnnotation.js",
            "modules": {},
            "classes": {
                "MusicAnnotation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicArpeggiate.js": {
            "name": "src/output/music/musicArpeggiate.js",
            "modules": {},
            "classes": {
                "MusicArpeggiate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicBar.js": {
            "name": "src/output/music/musicBar.js",
            "modules": {},
            "classes": {
                "MusicBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicBeam.js": {
            "name": "src/output/music/musicBeam.js",
            "modules": {},
            "classes": {
                "MusicBeam": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicChord.js": {
            "name": "src/output/music/musicChord.js",
            "modules": {},
            "classes": {
                "MusicChord": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicClef.js": {
            "name": "src/output/music/musicClef.js",
            "modules": {},
            "classes": {
                "MusicClef": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicDecoration.js": {
            "name": "src/output/music/musicDecoration.js",
            "modules": {},
            "classes": {
                "MusicDecoration": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicDocument.js": {
            "name": "src/output/music/musicDocument.js",
            "modules": {},
            "classes": {
                "MusicDocument": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicDots.js": {
            "name": "src/output/music/musicDots.js",
            "modules": {},
            "classes": {
                "MusicDots": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicElement.js": {
            "name": "src/output/music/musicElement.js",
            "modules": {},
            "classes": {
                "MusicElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicHead.js": {
            "name": "src/output/music/musicHead.js",
            "modules": {},
            "classes": {
                "MusicHead": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicInputRange.js": {
            "name": "src/output/music/musicInputRange.js",
            "modules": {},
            "classes": {
                "MusicInputRange": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicKeySignature.js": {
            "name": "src/output/music/musicKeySignature.js",
            "modules": {},
            "classes": {
                "MusicKeySignature": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicKeySignatureData.js": {
            "name": "src/output/music/musicKeySignatureData.js",
            "modules": {},
            "classes": {
                "MusicKeySignatureData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicLedgerLine.js": {
            "name": "src/output/music/musicLedgerLine.js",
            "modules": {},
            "classes": {
                "MusicLedgerLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicNote.js": {
            "name": "src/output/music/musicNote.js",
            "modules": {},
            "classes": {
                "MusicNote": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicPart.js": {
            "name": "src/output/music/musicPart.js",
            "modules": {},
            "classes": {
                "MusicPart": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicPitchData.js": {
            "name": "src/output/music/musicPitchData.js",
            "modules": {},
            "classes": {
                "MusicPitchData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicRest.js": {
            "name": "src/output/music/musicRest.js",
            "modules": {},
            "classes": {
                "MusicRest": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicResult.js": {
            "name": "src/output/music/musicResult.js",
            "modules": {},
            "classes": {
                "MusicResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicResultElement.js": {
            "name": "src/output/music/musicResultElement.js",
            "modules": {},
            "classes": {
                "MusicResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicScore.js": {
            "name": "src/output/music/musicScore.js",
            "modules": {},
            "classes": {
                "MusicScore": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicScoreTreeResultElement.js": {
            "name": "src/output/music/musicScoreTreeResultElement.js",
            "modules": {},
            "classes": {
                "MusicScoreTreeResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicScratchOut.js": {
            "name": "src/output/music/musicScratchOut.js",
            "modules": {},
            "classes": {
                "MusicScratchOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicSlur.js": {
            "name": "src/output/music/musicSlur.js",
            "modules": {},
            "classes": {
                "MusicSlur": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicStem.js": {
            "name": "src/output/music/musicStem.js",
            "modules": {},
            "classes": {
                "MusicStem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicTie.js": {
            "name": "src/output/music/musicTie.js",
            "modules": {},
            "classes": {
                "MusicTie": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicTimeModificationData.js": {
            "name": "src/output/music/musicTimeModificationData.js",
            "modules": {},
            "classes": {
                "MusicTimeModificationData": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicTimeSignature.js": {
            "name": "src/output/music/musicTimeSignature.js",
            "modules": {},
            "classes": {
                "MusicTimeSignature": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicTuplet.js": {
            "name": "src/output/music/musicTuplet.js",
            "modules": {},
            "classes": {
                "MusicTuplet": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicTupletBracket.js": {
            "name": "src/output/music/musicTupletBracket.js",
            "modules": {},
            "classes": {
                "MusicTupletBracket": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/music/musicXMLResultElement.js": {
            "name": "src/output/music/musicXMLResultElement.js",
            "modules": {},
            "classes": {
                "MusicXMLResultElement": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/abstractDecoratedShape.js": {
            "name": "src/output/shape/abstractDecoratedShape.js",
            "modules": {},
            "classes": {
                "AbstractDecoratedShape": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/abstractShapePrimitive.js": {
            "name": "src/output/shape/abstractShapePrimitive.js",
            "modules": {},
            "classes": {
                "AbstractShapePrimitive": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeCandidate.js": {
            "name": "src/output/shape/shapeCandidate.js",
            "modules": {},
            "classes": {
                "ShapeCandidate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeDocument.js": {
            "name": "src/output/shape/shapeDocument.js",
            "modules": {},
            "classes": {
                "ShapeDocument": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeEllipse.js": {
            "name": "src/output/shape/shapeEllipse.js",
            "modules": {},
            "classes": {
                "ShapeEllipse": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeErased.js": {
            "name": "src/output/shape/shapeErased.js",
            "modules": {},
            "classes": {
                "ShapeErased": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeInkRange.js": {
            "name": "src/output/shape/shapeInkRange.js",
            "modules": {},
            "classes": {
                "ShapeInkRange": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeLine.js": {
            "name": "src/output/shape/shapeLine.js",
            "modules": {},
            "classes": {
                "ShapeLine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeNotRecognized.js": {
            "name": "src/output/shape/shapeNotRecognized.js",
            "modules": {},
            "classes": {
                "ShapeNotRecognized": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapePoint.js": {
            "name": "src/output/shape/shapePoint.js",
            "modules": {},
            "classes": {
                "ShapePoint": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeRecognized.js": {
            "name": "src/output/shape/shapeRecognized.js",
            "modules": {},
            "classes": {
                "ShapeRecognized": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeResult.js": {
            "name": "src/output/shape/shapeResult.js",
            "modules": {},
            "classes": {
                "ShapeResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeScratchOut.js": {
            "name": "src/output/shape/shapeScratchOut.js",
            "modules": {},
            "classes": {
                "ShapeScratchOut": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/shape/shapeSegment.js": {
            "name": "src/output/shape/shapeSegment.js",
            "modules": {},
            "classes": {
                "ShapeSegment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textCandidate.js": {
            "name": "src/output/text/textCandidate.js",
            "modules": {},
            "classes": {
                "TextCandidate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textDocument.js": {
            "name": "src/output/text/textDocument.js",
            "modules": {},
            "classes": {
                "TextDocument": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textResponseWSMessage.js": {
            "name": "src/output/text/textResponseWSMessage.js",
            "modules": {},
            "classes": {
                "TextResponseWSMessage": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textResult.js": {
            "name": "src/output/text/textResult.js",
            "modules": {},
            "classes": {
                "TextResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textSegment.js": {
            "name": "src/output/text/textSegment.js",
            "modules": {},
            "classes": {
                "TextSegment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textSegmentResult.js": {
            "name": "src/output/text/textSegmentResult.js",
            "modules": {},
            "classes": {
                "TextSegmentResult": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/output/text/textTagItem.js": {
            "name": "src/output/text/textTagItem.js",
            "modules": {},
            "classes": {
                "TextTagItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/abstractRecognizer.js": {
            "name": "src/recognition/abstractRecognizer.js",
            "modules": {},
            "classes": {
                "AbstractRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/abstractWSRecognizer.js": {
            "name": "src/recognition/abstractWSRecognizer.js",
            "modules": {},
            "classes": {
                "AbstractWSRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/analyzerRecognizer.js": {
            "name": "src/recognition/analyzerRecognizer.js",
            "modules": {},
            "classes": {
                "AnalyzerRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/mathRecognizer.js": {
            "name": "src/recognition/mathRecognizer.js",
            "modules": {},
            "classes": {
                "MathRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/mathWSRecognizer.js": {
            "name": "src/recognition/mathWSRecognizer.js",
            "modules": {},
            "classes": {
                "MathWSRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/musicRecognizer.js": {
            "name": "src/recognition/musicRecognizer.js",
            "modules": {},
            "classes": {
                "MusicRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/shapeRecognizer.js": {
            "name": "src/recognition/shapeRecognizer.js",
            "modules": {},
            "classes": {
                "ShapeRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/textRecognizer.js": {
            "name": "src/recognition/textRecognizer.js",
            "modules": {},
            "classes": {
                "TextRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/recognition/textWSRecognizer.js": {
            "name": "src/recognition/textWSRecognizer.js",
            "modules": {},
            "classes": {
                "TextWSRecognizer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/abstractRenderer.js": {
            "name": "src/rendering/abstractRenderer.js",
            "modules": {},
            "classes": {
                "AbstractRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/analyzerRenderer.js": {
            "name": "src/rendering/analyzerRenderer.js",
            "modules": {},
            "classes": {
                "AnalyzerRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/mathRenderer.js": {
            "name": "src/rendering/mathRenderer.js",
            "modules": {},
            "classes": {
                "MathRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/musicRenderer.js": {
            "name": "src/rendering/musicRenderer.js",
            "modules": {},
            "classes": {
                "MusicRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/renderingParameters.js": {
            "name": "src/rendering/renderingParameters.js",
            "modules": {},
            "classes": {
                "RenderingParameters": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/shapeRenderer.js": {
            "name": "src/rendering/shapeRenderer.js",
            "modules": {},
            "classes": {
                "ShapeRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/rendering/textRenderer.js": {
            "name": "src/rendering/textRenderer.js",
            "modules": {},
            "classes": {
                "TextRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/MyScript.js": {
            "name": "src/MyScript.js",
            "modules": {
                "MyScript": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "MyScript": {
            "name": "MyScript",
            "submodules": {},
            "classes": {
                "Point": 1,
                "QuadraticPoint": 1,
                "Rectangle": 1,
                "AbstractWSMessage": 1,
                "InkManager": 1,
                "MathUtil": 1,
                "AnalyzerParameter": 1,
                "AnalyzerRecognitionData": 1,
                "AnalyzerRecognitionInput": 1,
                "AbstractComponent": 1,
                "Stroke": 1,
                "AbstractContinueRequestWSMessage": 1,
                "AbstractParameter": 1,
                "AbstractRecognitionData": 1,
                "AbstractRecognitionInput": 1,
                "AbstractStartRequestWSMessage": 1,
                "ChallengeRequestWSMessage": 1,
                "InitRequestWSMessage": 1,
                "RecognitionLanguagesData": 1,
                "ResetRequestWSMessage": 1,
                "MathContinueRequestWSMessage": 1,
                "MathParameter": 1,
                "MathRecognitionData": 1,
                "MathRecognitionInput": 1,
                "MathStartRequestWSMessage": 1,
                "AbstractMusicInputComponent": 1,
                "MusicAccidentalInputComponent": 1,
                "MusicArpeggiateInputComponent": 1,
                "MusicBarInput": 1,
                "MusicBarInputComponent": 1,
                "MusicBeamInput": 1,
                "MusicBeamInputComponent": 1,
                "MusicClefInput": 1,
                "MusicClefInputComponent": 1,
                "MusicDecorationInput": 1,
                "MusicDecorationInputComponent": 1,
                "MusicDotsInputComponent": 1,
                "MusicHeadInputComponent": 1,
                "MusicLedgerLineInputComponent": 1,
                "MusicRestInputComponent": 1,
                "MusicStemInputComponent": 1,
                "MusicTieOrSlurInputComponent": 1,
                "MusicTimeSignatureInputComponent": 1,
                "MusicParameter": 1,
                "MusicRecognitionData": 1,
                "MusicRecognitionInput": 1,
                "MusicStaff": 1,
                "ShapeParameter": 1,
                "ShapeRecognitionData": 1,
                "ShapeRecognitionInput": 1,
                "AbstractTextInputComponent": 1,
                "CharInputComponent": 1,
                "CharacterInputComponent": 1,
                "CharacterInputComponentAlternate": 1,
                "StringInputComponent": 1,
                "TextContinueRequestWSMessage": 1,
                "TextInputUnit": 1,
                "TextParameter": 1,
                "TextProperties": 1,
                "TextRecognitionData": 1,
                "TextRecognitionInput": 1,
                "TextStartRequestWSMessage": 1,
                "NetworkInterface": 1,
                "AnalyzerCell": 1,
                "AnalyzerCellData": 1,
                "AnalyzerDocument": 1,
                "AnalyzerElement": 1,
                "AnalyzerElementReference": 1,
                "AnalyzerGroup": 1,
                "AnalyzerInkRange": 1,
                "AnalyzerLine": 1,
                "AnalyzerLineData": 1,
                "AnalyzerPointData": 1,
                "AnalyzerRecognizedStroke": 1,
                "AnalyzerResult": 1,
                "AnalyzerStrokeType": 1,
                "AnalyzerTable": 1,
                "AnalyzerTableData": 1,
                "AnalyzerTextLine": 1,
                "AnalyzerTextLineData": 1,
                "AnalyzerUnderline": 1,
                "AnalyzerUnderlineData": 1,
                "AbstractRecoResponseWSMessage": 1,
                "AbstractResult": 1,
                "ChallengeResponseWSMessage": 1,
                "ErrorResponseWSMessage": 1,
                "InitResponseWSMessage": 1,
                "MathDocument": 1,
                "MathExponentiableNonTerminalNode": 1,
                "MathExpressionNonTerminalNode": 1,
                "MathFenceRuleNode": 1,
                "MathFractionRuleNode": 1,
                "MathHorizontalPairRuleNode": 1,
                "MathIdentityRuleNode": 1,
                "MathInkRange": 1,
                "MathLaTexResultElement": 1,
                "MathLeftFenceRuleNode": 1,
                "MathMathMLResultElement": 1,
                "MathNode": 1,
                "MathNonTerminalNode": 1,
                "MathOverscriptRuleNode": 1,
                "MathPreSuperscriptRuleNode": 1,
                "MathResponseWSMessage": 1,
                "MathResult": 1,
                "MathResultElement": 1,
                "MathRuleNode": 1,
                "MathScratchOut": 1,
                "MathSqrtNonTerminalNode": 1,
                "MathSqrtRuleNode": 1,
                "MathSubSuperscriptRuleNode": 1,
                "MathSubscriptRuleNode": 1,
                "MathSuperscriptRuleNode": 1,
                "MathSymbolTreeResultElement": 1,
                "MathSystemNonTerminalNode": 1,
                "MathTermNonTerminalNode": 1,
                "MathTerminalNode": 1,
                "MathTerminalNodeCandidate": 1,
                "MathUnderOverscriptRuleNode": 1,
                "MathUnderscriptRuleNode": 1,
                "MathVectorNonTerminalNode": 1,
                "MathVerticalPairRuleNode": 1,
                "MusicAccidental": 1,
                "MusicAnnotation": 1,
                "MusicArpeggiate": 1,
                "MusicBar": 1,
                "MusicBeam": 1,
                "MusicChord": 1,
                "MusicClef": 1,
                "MusicDecoration": 1,
                "MusicDocument": 1,
                "MusicDots": 1,
                "MusicElement": 1,
                "MusicHead": 1,
                "MusicInputRange": 1,
                "MusicKeySignature": 1,
                "MusicKeySignatureData": 1,
                "MusicLedgerLine": 1,
                "MusicNote": 1,
                "MusicPart": 1,
                "MusicPitchData": 1,
                "MusicRest": 1,
                "MusicResult": 1,
                "MusicResultElement": 1,
                "MusicScore": 1,
                "MusicScoreTreeResultElement": 1,
                "MusicScratchOut": 1,
                "MusicSlur": 1,
                "MusicStem": 1,
                "MusicTie": 1,
                "MusicTimeModificationData": 1,
                "MusicTimeSignature": 1,
                "MusicTuplet": 1,
                "MusicTupletBracket": 1,
                "MusicXMLResultElement": 1,
                "AbstractDecoratedShape": 1,
                "AbstractShapePrimitive": 1,
                "ShapeCandidate": 1,
                "ShapeDocument": 1,
                "ShapeEllipse": 1,
                "ShapeErased": 1,
                "ShapeInkRange": 1,
                "ShapeLine": 1,
                "ShapeNotRecognized": 1,
                "ShapePoint": 1,
                "ShapeRecognized": 1,
                "ShapeResult": 1,
                "ShapeScratchOut": 1,
                "ShapeSegment": 1,
                "TextCandidate": 1,
                "TextDocument": 1,
                "TextResponseWSMessage": 1,
                "TextResult": 1,
                "TextSegment": 1,
                "TextSegmentResult": 1,
                "TextTagItem": 1,
                "AbstractRecognizer": 1,
                "AbstractWSRecognizer": 1,
                "AnalyzerRecognizer": 1,
                "MathRecognizer": 1,
                "MathWSRecognizer": 1,
                "MusicRecognizer": 1,
                "ShapeRecognizer": 1,
                "TextRecognizer": 1,
                "TextWSRecognizer": 1,
                "AbstractRenderer": 1,
                "AnalyzerRenderer": 1,
                "MathRenderer": 1,
                "MusicRenderer": 1,
                "RenderingParameters": 1,
                "ShapeRenderer": 1,
                "TextRenderer": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/rendering/textRenderer.js",
            "line": 4,
            "description": "MyScript javascript library to facilitate the use of cloud handwriting recognition",
            "requires": [
                "Q",
                "CryptoJS"
            ]
        }
    },
    "classes": {
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/generic/point.js",
            "line": 4,
            "description": "Point",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "QuadraticPoint": {
            "name": "QuadraticPoint",
            "shortname": "QuadraticPoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/generic/quadraticPoint.js",
            "line": 4,
            "description": "Complex Point object used for quadratic calculation",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "Rectangle": {
            "name": "Rectangle",
            "shortname": "Rectangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/generic/rectangle.js",
            "line": 4,
            "description": "Rectangle",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractWSMessage": {
            "name": "AbstractWSMessage",
            "shortname": "AbstractWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/abstractWSMessage.js",
            "line": 4,
            "description": "Abstract WebSocket recognition message",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "InkManager": {
            "name": "InkManager",
            "shortname": "InkManager",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/inkManager.js",
            "line": 4,
            "description": "The InkManager class that can use to store writing strokes and manage the undo/redo/clear system",
            "is_constructor": 1
        },
        "MathUtil": {
            "name": "MathUtil",
            "shortname": "MathUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/common/mathUtils.js",
            "line": 4,
            "description": "The mathUtil class is use to calculate lines",
            "is_constructor": 1
        },
        "AnalyzerParameter": {
            "name": "AnalyzerParameter",
            "shortname": "AnalyzerParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 4,
            "description": "Parameters used for analyzer recognition",
            "extends": "AbstractParameter",
            "is_constructor": 1
        },
        "AnalyzerRecognitionData": {
            "name": "AnalyzerRecognitionData",
            "shortname": "AnalyzerRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/analyzer/analyzerRecognitionData.js",
            "line": 4,
            "description": "Recognition data for analyzer input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "AnalyzerRecognitionInput": {
            "name": "AnalyzerRecognitionInput",
            "shortname": "AnalyzerRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 4,
            "description": "Recognition input object for analyzer recognition",
            "extends": "AbstractRecognitionInput",
            "is_constructor": 1
        },
        "AbstractComponent": {
            "name": "AbstractComponent",
            "shortname": "AbstractComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/components/abstractComponent.js",
            "line": 4,
            "description": "Represent an abstract input component",
            "is_constructor": 1
        },
        "Stroke": {
            "name": "Stroke",
            "shortname": "Stroke",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/components/stroke.js",
            "line": 4,
            "description": "Represent a simple stroke input component",
            "extends": "AbstractComponent",
            "is_constructor": 1
        },
        "AbstractContinueRequestWSMessage": {
            "name": "AbstractContinueRequestWSMessage",
            "shortname": "AbstractContinueRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/abstractContinueRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket continue math recognition message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractParameter": {
            "name": "AbstractParameter",
            "shortname": "AbstractParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/abstractParameter.js",
            "line": 4,
            "description": "Abstract parameters used for recognition",
            "is_constructor": 1
        },
        "AbstractRecognitionData": {
            "name": "AbstractRecognitionData",
            "shortname": "AbstractRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 4,
            "description": "Abstract input recognition data",
            "is_constructor": 1
        },
        "AbstractRecognitionInput": {
            "name": "AbstractRecognitionInput",
            "shortname": "AbstractRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/abstractRecognitionInput.js",
            "line": 4,
            "description": "Abstraction of recognizer input",
            "is_constructor": 1
        },
        "AbstractStartRequestWSMessage": {
            "name": "AbstractStartRequestWSMessage",
            "shortname": "AbstractStartRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/abstractStartRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket start math recognition message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ChallengeRequestWSMessage": {
            "name": "ChallengeRequestWSMessage",
            "shortname": "ChallengeRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition hmac challenge message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "InitRequestWSMessage": {
            "name": "InitRequestWSMessage",
            "shortname": "InitRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/initRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition hmac challenge message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "RecognitionLanguagesData": {
            "name": "RecognitionLanguagesData",
            "shortname": "RecognitionLanguagesData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/recognitionLanguagesData.js",
            "line": 4,
            "description": "List of languages recognition input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "ResetRequestWSMessage": {
            "name": "ResetRequestWSMessage",
            "shortname": "ResetRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/generic/resetRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition hmac challenge message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathContinueRequestWSMessage": {
            "name": "MathContinueRequestWSMessage",
            "shortname": "MathContinueRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/math/mathContinueRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket continue math recognition message",
            "extends": "AbstractContinueRequestWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathParameter": {
            "name": "MathParameter",
            "shortname": "MathParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/math/mathParameter.js",
            "line": 4,
            "description": "Parameters used for math recognition",
            "extends": "AbstractParameter",
            "is_constructor": 1
        },
        "MathRecognitionData": {
            "name": "MathRecognitionData",
            "shortname": "MathRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/math/mathRecognitionData.js",
            "line": 4,
            "description": "Recognition data for math input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "MathRecognitionInput": {
            "name": "MathRecognitionInput",
            "shortname": "MathRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 4,
            "description": "Recognition input object for math recognition",
            "extends": "AbstractRecognitionInput",
            "is_constructor": 1
        },
        "MathStartRequestWSMessage": {
            "name": "MathStartRequestWSMessage",
            "shortname": "MathStartRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket start math recognition message",
            "extends": "AbstractStartRequestWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractMusicInputComponent": {
            "name": "AbstractMusicInputComponent",
            "shortname": "AbstractMusicInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/abstractMusicInputComponent.js",
            "line": 4,
            "description": "Abstract music input component",
            "extends": "AbstractComponent",
            "is_constructor": 1
        },
        "MusicAccidentalInputComponent": {
            "name": "MusicAccidentalInputComponent",
            "shortname": "MusicAccidentalInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicAccidentalInputComponent.js",
            "line": 4,
            "description": "Accidental input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicArpeggiateInputComponent": {
            "name": "MusicArpeggiateInputComponent",
            "shortname": "MusicArpeggiateInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicArpeggiateInputComponent.js",
            "line": 4,
            "description": "Arpeggiate input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicBarInput": {
            "name": "MusicBarInput",
            "shortname": "MusicBarInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicBarInput.js",
            "line": 4,
            "description": "Music bar input",
            "is_constructor": 1
        },
        "MusicBarInputComponent": {
            "name": "MusicBarInputComponent",
            "shortname": "MusicBarInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicBarInputComponent.js",
            "line": 4,
            "description": "Bar input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicBeamInput": {
            "name": "MusicBeamInput",
            "shortname": "MusicBeamInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 4,
            "description": "Music beam input",
            "is_constructor": 1
        },
        "MusicBeamInputComponent": {
            "name": "MusicBeamInputComponent",
            "shortname": "MusicBeamInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicBeamInputComponent.js",
            "line": 4,
            "description": "Beam input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicClefInput": {
            "name": "MusicClefInput",
            "shortname": "MusicClefInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicClefInput.js",
            "line": 4,
            "description": "Music clef input\ndefault values: symbol='G', octave=0",
            "is_constructor": 1
        },
        "MusicClefInputComponent": {
            "name": "MusicClefInputComponent",
            "shortname": "MusicClefInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicClefInputComponent.js",
            "line": 4,
            "description": "Clef input component\ndefault clef values: symbol='G', octave=0",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicDecorationInput": {
            "name": "MusicDecorationInput",
            "shortname": "MusicDecorationInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicDecorationInput.js",
            "line": 4,
            "description": "Music decoration input",
            "is_constructor": 1
        },
        "MusicDecorationInputComponent": {
            "name": "MusicDecorationInputComponent",
            "shortname": "MusicDecorationInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicDecorationInputComponent.js",
            "line": 4,
            "description": "Decoration input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicDotsInputComponent": {
            "name": "MusicDotsInputComponent",
            "shortname": "MusicDotsInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicDotsInputComponent.js",
            "line": 4,
            "description": "Dots input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicHeadInputComponent": {
            "name": "MusicHeadInputComponent",
            "shortname": "MusicHeadInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicHeadInputComponent.js",
            "line": 4,
            "description": "Head input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicLedgerLineInputComponent": {
            "name": "MusicLedgerLineInputComponent",
            "shortname": "MusicLedgerLineInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicLedgerLineInputComponent.js",
            "line": 4,
            "description": "Ledger line input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicRestInputComponent": {
            "name": "MusicRestInputComponent",
            "shortname": "MusicRestInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicRestInputComponent.js",
            "line": 4,
            "description": "Rest input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicStemInputComponent": {
            "name": "MusicStemInputComponent",
            "shortname": "MusicStemInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicStemInputComponent.js",
            "line": 4,
            "description": "Stem input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicTieOrSlurInputComponent": {
            "name": "MusicTieOrSlurInputComponent",
            "shortname": "MusicTieOrSlurInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "line": 4,
            "description": "Tie ro slur input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicTimeSignatureInputComponent": {
            "name": "MusicTimeSignatureInputComponent",
            "shortname": "MusicTimeSignatureInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "line": 4,
            "description": "Time signature input component",
            "extends": "AbstractMusicInputComponent",
            "is_constructor": 1
        },
        "MusicParameter": {
            "name": "MusicParameter",
            "shortname": "MusicParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/musicParameter.js",
            "line": 4,
            "description": "Parameters used for music recognition",
            "extends": "AbstractParameter",
            "is_constructor": 1
        },
        "MusicRecognitionData": {
            "name": "MusicRecognitionData",
            "shortname": "MusicRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/musicRecognitionData.js",
            "line": 4,
            "description": "Recognition data for music input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "MusicRecognitionInput": {
            "name": "MusicRecognitionInput",
            "shortname": "MusicRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 4,
            "description": "Recognition input object for music recognition",
            "extends": "AbstractRecognitionInput",
            "is_constructor": 1
        },
        "MusicStaff": {
            "name": "MusicStaff",
            "shortname": "MusicStaff",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/music/musicStaff.js",
            "line": 4,
            "description": "Represents a staff used for music recognition\ndefault values: count=5, gap=20",
            "is_constructor": 1
        },
        "ShapeParameter": {
            "name": "ShapeParameter",
            "shortname": "ShapeParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/shape/shapeParameter.js",
            "line": 4,
            "description": "Parameters used for shape recognition",
            "extends": "AbstractParameter",
            "is_constructor": 1
        },
        "ShapeRecognitionData": {
            "name": "ShapeRecognitionData",
            "shortname": "ShapeRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/shape/shapeRecognitionData.js",
            "line": 4,
            "description": "Recognition data for shape input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "ShapeRecognitionInput": {
            "name": "ShapeRecognitionInput",
            "shortname": "ShapeRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 4,
            "description": "Recognition input object for shape recognition",
            "extends": "AbstractRecognitionInput",
            "is_constructor": 1
        },
        "AbstractTextInputComponent": {
            "name": "AbstractTextInputComponent",
            "shortname": "AbstractTextInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/components/abstractTextInputComponent.js",
            "line": 4,
            "description": "Abstract text input component",
            "extends": "AbstractComponent",
            "is_constructor": 1
        },
        "CharInputComponent": {
            "name": "CharInputComponent",
            "shortname": "CharInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/components/charInputComponent.js",
            "line": 4,
            "description": "Char input component",
            "extends": "AbstractTextInputComponent",
            "is_constructor": 1
        },
        "CharacterInputComponent": {
            "name": "CharacterInputComponent",
            "shortname": "CharacterInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 4,
            "description": "Char input component",
            "extends": "AbstractTextInputComponent",
            "is_constructor": 1
        },
        "CharacterInputComponentAlternate": {
            "name": "CharacterInputComponentAlternate",
            "shortname": "CharacterInputComponentAlternate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/components/characterInputComponentAlternate.js",
            "line": 4,
            "description": "Character input component alternate",
            "is_constructor": 1
        },
        "StringInputComponent": {
            "name": "StringInputComponent",
            "shortname": "StringInputComponent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/components/stringInputComponent.js",
            "line": 4,
            "description": "String input component",
            "extends": "AbstractTextInputComponent",
            "is_constructor": 1
        },
        "TextContinueRequestWSMessage": {
            "name": "TextContinueRequestWSMessage",
            "shortname": "TextContinueRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textContinueRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket continue text recognition message",
            "extends": "AbstractContinueRequestWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextInputUnit": {
            "name": "TextInputUnit",
            "shortname": "TextInputUnit",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textInputUnit.js",
            "line": 4,
            "description": "Input unit used for text recognition",
            "is_constructor": 1
        },
        "TextParameter": {
            "name": "TextParameter",
            "shortname": "TextParameter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textParameter.js",
            "line": 4,
            "description": "Parameters used for text recognition",
            "extends": "AbstractParameter",
            "is_constructor": 1
        },
        "TextProperties": {
            "name": "TextProperties",
            "shortname": "TextProperties",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textProperties.js",
            "line": 4,
            "description": "Text recognition properties",
            "is_constructor": 1
        },
        "TextRecognitionData": {
            "name": "TextRecognitionData",
            "shortname": "TextRecognitionData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textRecognitionData.js",
            "line": 4,
            "description": "Recognition data for text input",
            "extends": "AbstractRecognitionData",
            "is_constructor": 1
        },
        "TextRecognitionInput": {
            "name": "TextRecognitionInput",
            "shortname": "TextRecognitionInput",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textRecognitionInput.js",
            "line": 4,
            "description": "Recognition input object for text recognition",
            "extends": "AbstractRecognitionInput",
            "is_constructor": 1
        },
        "TextStartRequestWSMessage": {
            "name": "TextStartRequestWSMessage",
            "shortname": "TextStartRequestWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 4,
            "description": "WebSocket start text recognition message",
            "extends": "AbstractStartRequestWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "NetworkInterface": {
            "name": "NetworkInterface",
            "shortname": "NetworkInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/networking/networkInterface.js",
            "line": 4,
            "description": "Network interface",
            "is_constructor": 1
        },
        "AnalyzerCell": {
            "name": "AnalyzerCell",
            "shortname": "AnalyzerCell",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerCell.js",
            "line": 4,
            "description": "Analyzer table cell",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerCellData": {
            "name": "AnalyzerCellData",
            "shortname": "AnalyzerCellData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 4,
            "description": "Analyzer cell data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerDocument": {
            "name": "AnalyzerDocument",
            "shortname": "AnalyzerDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 4,
            "description": "Analyzer document",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerElement": {
            "name": "AnalyzerElement",
            "shortname": "AnalyzerElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerElement.js",
            "line": 4,
            "description": "Analyzer element",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerElementReference": {
            "name": "AnalyzerElementReference",
            "shortname": "AnalyzerElementReference",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerElementReference.js",
            "line": 4,
            "description": "Analyzer element reference",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerGroup": {
            "name": "AnalyzerGroup",
            "shortname": "AnalyzerGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 4,
            "description": "Analyzer group",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerInkRange": {
            "name": "AnalyzerInkRange",
            "shortname": "AnalyzerInkRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerInkRange.js",
            "line": 4,
            "description": "Analyzer ink range",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerLine": {
            "name": "AnalyzerLine",
            "shortname": "AnalyzerLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerLine.js",
            "line": 4,
            "description": "Analyzer line",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerLineData": {
            "name": "AnalyzerLineData",
            "shortname": "AnalyzerLineData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerLineData.js",
            "line": 4,
            "description": "Analyzer line data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerPointData": {
            "name": "AnalyzerPointData",
            "shortname": "AnalyzerPointData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerPointData.js",
            "line": 4,
            "description": "Analyzer point data",
            "extends": "MyScript.Point",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerRecognizedStroke": {
            "name": "AnalyzerRecognizedStroke",
            "shortname": "AnalyzerRecognizedStroke",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerRecognizedStroke.js",
            "line": 4,
            "description": "AnalyzerRecognizedStroke",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerResult": {
            "name": "AnalyzerResult",
            "shortname": "AnalyzerResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerResult.js",
            "line": 4,
            "description": "Analyzer result",
            "extends": "AbstractResult",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerStrokeType": {
            "name": "AnalyzerStrokeType",
            "shortname": "AnalyzerStrokeType",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerStrokeType.js",
            "line": 4,
            "description": "Analyzer stroke type",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerTable": {
            "name": "AnalyzerTable",
            "shortname": "AnalyzerTable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 4,
            "description": "Analyzer table",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerTableData": {
            "name": "AnalyzerTableData",
            "shortname": "AnalyzerTableData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerTableData.js",
            "line": 4,
            "description": "Analyzer table data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerTextLine": {
            "name": "AnalyzerTextLine",
            "shortname": "AnalyzerTextLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 4,
            "description": "Analyzer text line",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerTextLineData": {
            "name": "AnalyzerTextLineData",
            "shortname": "AnalyzerTextLineData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 4,
            "description": "Analyzer text line data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerUnderline": {
            "name": "AnalyzerUnderline",
            "shortname": "AnalyzerUnderline",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerUnderline.js",
            "line": 4,
            "description": "Analyzer underline",
            "extends": "AnalyzerElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerUnderlineData": {
            "name": "AnalyzerUnderlineData",
            "shortname": "AnalyzerUnderlineData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/analyzer/analyzerUnderlineData.js",
            "line": 4,
            "description": "Analyzer underline data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractRecoResponseWSMessage": {
            "name": "AbstractRecoResponseWSMessage",
            "shortname": "AbstractRecoResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/generic/abstractRecoResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition text result message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractResult": {
            "name": "AbstractResult",
            "shortname": "AbstractResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/generic/abstractResult.js",
            "line": 4,
            "description": "Abstract result",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ChallengeResponseWSMessage": {
            "name": "ChallengeResponseWSMessage",
            "shortname": "ChallengeResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/generic/challengeResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition hmac challenge message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ErrorResponseWSMessage": {
            "name": "ErrorResponseWSMessage",
            "shortname": "ErrorResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/generic/errorResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition error message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "InitResponseWSMessage": {
            "name": "InitResponseWSMessage",
            "shortname": "InitResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/generic/initResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition init message",
            "extends": "AbstractWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathDocument": {
            "name": "MathDocument",
            "shortname": "MathDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathDocument.js",
            "line": 4,
            "description": "Math document",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathExponentiableNonTerminalNode": {
            "name": "MathExponentiableNonTerminalNode",
            "shortname": "MathExponentiableNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathExponentiableNonTerminalNode.js",
            "line": 4,
            "description": "Math exponentiable non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathExpressionNonTerminalNode": {
            "name": "MathExpressionNonTerminalNode",
            "shortname": "MathExpressionNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathExpressionNonTerminalNode.js",
            "line": 4,
            "description": "Math expression non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathFenceRuleNode": {
            "name": "MathFenceRuleNode",
            "shortname": "MathFenceRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathFenceRuleNode.js",
            "line": 4,
            "description": "Math fence rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathFractionRuleNode": {
            "name": "MathFractionRuleNode",
            "shortname": "MathFractionRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathFractionRuleNode.js",
            "line": 4,
            "description": "Math fraction rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathHorizontalPairRuleNode": {
            "name": "MathHorizontalPairRuleNode",
            "shortname": "MathHorizontalPairRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathHorizontalPairRuleNode.js",
            "line": 4,
            "description": "Math horizontal pair rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathIdentityRuleNode": {
            "name": "MathIdentityRuleNode",
            "shortname": "MathIdentityRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathIdentityRuleNode.js",
            "line": 4,
            "description": "Math identity rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathInkRange": {
            "name": "MathInkRange",
            "shortname": "MathInkRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathInkRange.js",
            "line": 4,
            "description": "Math ink range",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathLaTexResultElement": {
            "name": "MathLaTexResultElement",
            "shortname": "MathLaTexResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathLaTexResultElement.js",
            "line": 4,
            "description": "LaTex result element",
            "extends": "MathResultElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathLeftFenceRuleNode": {
            "name": "MathLeftFenceRuleNode",
            "shortname": "MathLeftFenceRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathLeftFenceRuleNode.js",
            "line": 4,
            "description": "Math rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathMathMLResultElement": {
            "name": "MathMathMLResultElement",
            "shortname": "MathMathMLResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathMathMLResultElement.js",
            "line": 4,
            "description": "MathML result element",
            "extends": "MathResultElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathNode": {
            "name": "MathNode",
            "shortname": "MathNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathNode.js",
            "line": 4,
            "description": "Math node",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathNonTerminalNode": {
            "name": "MathNonTerminalNode",
            "shortname": "MathNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 4,
            "description": "Math non-terminal node",
            "extends": "MathNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathOverscriptRuleNode": {
            "name": "MathOverscriptRuleNode",
            "shortname": "MathOverscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathOverscriptRuleNode.js",
            "line": 4,
            "description": "Math overscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathPreSuperscriptRuleNode": {
            "name": "MathPreSuperscriptRuleNode",
            "shortname": "MathPreSuperscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathPreSuperscriptRuleNode.js",
            "line": 4,
            "description": "Math pre-superscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathResponseWSMessage": {
            "name": "MathResponseWSMessage",
            "shortname": "MathResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition math result message",
            "extends": "AbstractRecoResponseWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathResult": {
            "name": "MathResult",
            "shortname": "MathResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathResult.js",
            "line": 4,
            "description": "Math result",
            "extends": "AbstractResult",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathResultElement": {
            "name": "MathResultElement",
            "shortname": "MathResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathResultElement.js",
            "line": 4,
            "description": "Abstract math result",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathRuleNode": {
            "name": "MathRuleNode",
            "shortname": "MathRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathRuleNode.js",
            "line": 3,
            "description": "Math rule node",
            "extends": "MathNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathScratchOut": {
            "name": "MathScratchOut",
            "shortname": "MathScratchOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathScratchOut.js",
            "line": 4,
            "description": "Math scratch-out",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSqrtNonTerminalNode": {
            "name": "MathSqrtNonTerminalNode",
            "shortname": "MathSqrtNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSqrtNonTerminalNode.js",
            "line": 4,
            "description": "Math term non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSqrtRuleNode": {
            "name": "MathSqrtRuleNode",
            "shortname": "MathSqrtRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSqrtRuleNode.js",
            "line": 4,
            "description": "Math sqrt rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSubSuperscriptRuleNode": {
            "name": "MathSubSuperscriptRuleNode",
            "shortname": "MathSubSuperscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSubSuperscriptRuleNode.js",
            "line": 4,
            "description": "Math sub-superscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSubscriptRuleNode": {
            "name": "MathSubscriptRuleNode",
            "shortname": "MathSubscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSubscriptRuleNode.js",
            "line": 4,
            "description": "Math subscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSuperscriptRuleNode": {
            "name": "MathSuperscriptRuleNode",
            "shortname": "MathSuperscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSuperscriptRuleNode.js",
            "line": 4,
            "description": "Math superscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSymbolTreeResultElement": {
            "name": "MathSymbolTreeResultElement",
            "shortname": "MathSymbolTreeResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSymbolTreeResultElement.js",
            "line": 4,
            "description": "Math symbol tree",
            "extends": "MathResultElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathSystemNonTerminalNode": {
            "name": "MathSystemNonTerminalNode",
            "shortname": "MathSystemNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathSystemNonTerminalNode.js",
            "line": 4,
            "description": "Math term non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathTermNonTerminalNode": {
            "name": "MathTermNonTerminalNode",
            "shortname": "MathTermNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathTermNonTerminalNode.js",
            "line": 4,
            "description": "Math term non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathTerminalNode": {
            "name": "MathTerminalNode",
            "shortname": "MathTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathTerminalNode.js",
            "line": 4,
            "description": "Math terminal node",
            "extends": "MathNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathTerminalNodeCandidate": {
            "name": "MathTerminalNodeCandidate",
            "shortname": "MathTerminalNodeCandidate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathTerminalNodeCandidate.js",
            "line": 4,
            "description": "Math terminal node candidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathUnderOverscriptRuleNode": {
            "name": "MathUnderOverscriptRuleNode",
            "shortname": "MathUnderOverscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathUnderOverscriptRuleNode.js",
            "line": 4,
            "description": "Math under-overscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathUnderscriptRuleNode": {
            "name": "MathUnderscriptRuleNode",
            "shortname": "MathUnderscriptRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathUnderscriptRuleNode.js",
            "line": 4,
            "description": "Math underscript rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathVectorNonTerminalNode": {
            "name": "MathVectorNonTerminalNode",
            "shortname": "MathVectorNonTerminalNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathVectorNonTerminalNode.js",
            "line": 4,
            "description": "Math term non-terminal node",
            "extends": "MathNonTerminalNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MathVerticalPairRuleNode": {
            "name": "MathVerticalPairRuleNode",
            "shortname": "MathVerticalPairRuleNode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/math/mathVerticalPairRuleNode.js",
            "line": 4,
            "description": "Math vertical pair rule node",
            "extends": "MathRuleNode",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicAccidental": {
            "name": "MusicAccidental",
            "shortname": "MusicAccidental",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicAccidental.js",
            "line": 4,
            "description": "Music accidental",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicAnnotation": {
            "name": "MusicAnnotation",
            "shortname": "MusicAnnotation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicAnnotation.js",
            "line": 4,
            "description": "Music annotation",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicArpeggiate": {
            "name": "MusicArpeggiate",
            "shortname": "MusicArpeggiate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicArpeggiate.js",
            "line": 4,
            "description": "Music arpeggiate",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicBar": {
            "name": "MusicBar",
            "shortname": "MusicBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicBar.js",
            "line": 4,
            "description": "Music bar",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicBeam": {
            "name": "MusicBeam",
            "shortname": "MusicBeam",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicBeam.js",
            "line": 4,
            "description": "Music beam",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicChord": {
            "name": "MusicChord",
            "shortname": "MusicChord",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicChord.js",
            "line": 4,
            "description": "Music chord",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicClef": {
            "name": "MusicClef",
            "shortname": "MusicClef",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicClef.js",
            "line": 4,
            "description": "Music clef",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicDecoration": {
            "name": "MusicDecoration",
            "shortname": "MusicDecoration",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicDecoration.js",
            "line": 4,
            "description": "Music decoration",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicDocument": {
            "name": "MusicDocument",
            "shortname": "MusicDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicDocument.js",
            "line": 4,
            "description": "Music document",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicDots": {
            "name": "MusicDots",
            "shortname": "MusicDots",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicDots.js",
            "line": 4,
            "description": "Music dots",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicElement": {
            "name": "MusicElement",
            "shortname": "MusicElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicElement.js",
            "line": 4,
            "description": "Abstract music element",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicHead": {
            "name": "MusicHead",
            "shortname": "MusicHead",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicHead.js",
            "line": 4,
            "description": "Music head",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicInputRange": {
            "name": "MusicInputRange",
            "shortname": "MusicInputRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicInputRange.js",
            "line": 4,
            "description": "Music input range",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicKeySignature": {
            "name": "MusicKeySignature",
            "shortname": "MusicKeySignature",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicKeySignature.js",
            "line": 4,
            "description": "Music key signature",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicKeySignatureData": {
            "name": "MusicKeySignatureData",
            "shortname": "MusicKeySignatureData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicKeySignatureData.js",
            "line": 4,
            "description": "Music key signature data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicLedgerLine": {
            "name": "MusicLedgerLine",
            "shortname": "MusicLedgerLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicLedgerLine.js",
            "line": 4,
            "description": "Music ledger line",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicNote": {
            "name": "MusicNote",
            "shortname": "MusicNote",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicNote.js",
            "line": 4,
            "description": "Music note",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicPart": {
            "name": "MusicPart",
            "shortname": "MusicPart",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicPart.js",
            "line": 4,
            "description": "Music part",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicPitchData": {
            "name": "MusicPitchData",
            "shortname": "MusicPitchData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicPitchData.js",
            "line": 4,
            "description": "Music pitch data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicRest": {
            "name": "MusicRest",
            "shortname": "MusicRest",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicRest.js",
            "line": 4,
            "description": "Music rest",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicResult": {
            "name": "MusicResult",
            "shortname": "MusicResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicResult.js",
            "line": 4,
            "description": "Music result",
            "extends": "AbstractResult",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicResultElement": {
            "name": "MusicResultElement",
            "shortname": "MusicResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicResultElement.js",
            "line": 4,
            "description": "Abstract music result element",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicScore": {
            "name": "MusicScore",
            "shortname": "MusicScore",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicScore.js",
            "line": 4,
            "description": "Music score",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicScoreTreeResultElement": {
            "name": "MusicScoreTreeResultElement",
            "shortname": "MusicScoreTreeResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicScoreTreeResultElement.js",
            "line": 4,
            "description": "Music score tree",
            "extends": "MusicResultElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicScratchOut": {
            "name": "MusicScratchOut",
            "shortname": "MusicScratchOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicScratchOut.js",
            "line": 4,
            "description": "Music scratch-out",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicSlur": {
            "name": "MusicSlur",
            "shortname": "MusicSlur",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicSlur.js",
            "line": 4,
            "description": "Music slur",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicStem": {
            "name": "MusicStem",
            "shortname": "MusicStem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicStem.js",
            "line": 4,
            "description": "Music stem",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicTie": {
            "name": "MusicTie",
            "shortname": "MusicTie",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicTie.js",
            "line": 4,
            "description": "Music tie",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicTimeModificationData": {
            "name": "MusicTimeModificationData",
            "shortname": "MusicTimeModificationData",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicTimeModificationData.js",
            "line": 4,
            "description": "Music time modification data",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicTimeSignature": {
            "name": "MusicTimeSignature",
            "shortname": "MusicTimeSignature",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicTimeSignature.js",
            "line": 4,
            "description": "Music time signature",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicTuplet": {
            "name": "MusicTuplet",
            "shortname": "MusicTuplet",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicTuplet.js",
            "line": 4,
            "description": "Music tuplet",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicTupletBracket": {
            "name": "MusicTupletBracket",
            "shortname": "MusicTupletBracket",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicTupletBracket.js",
            "line": 4,
            "description": "Music tuplet bracket",
            "extends": "AbstractMusicElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "MusicXMLResultElement": {
            "name": "MusicXMLResultElement",
            "shortname": "MusicXMLResultElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/music/musicXMLResultElement.js",
            "line": 4,
            "description": "MusicXML result",
            "extends": "MusicResultElement",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractDecoratedShape": {
            "name": "AbstractDecoratedShape",
            "shortname": "AbstractDecoratedShape",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 4,
            "description": "Abstract decorated shape",
            "extends": "AbstractShapePrimitive",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractShapePrimitive": {
            "name": "AbstractShapePrimitive",
            "shortname": "AbstractShapePrimitive",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/abstractShapePrimitive.js",
            "line": 4,
            "description": "Abstract shape primitive",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeCandidate": {
            "name": "ShapeCandidate",
            "shortname": "ShapeCandidate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeCandidate.js",
            "line": 4,
            "description": "Shape candidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeDocument": {
            "name": "ShapeDocument",
            "shortname": "ShapeDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeDocument.js",
            "line": 4,
            "description": "Shape document",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeEllipse": {
            "name": "ShapeEllipse",
            "shortname": "ShapeEllipse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeEllipse.js",
            "line": 4,
            "description": "Shape ellipse",
            "extends": "AbstractDecoratedShape",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeErased": {
            "name": "ShapeErased",
            "shortname": "ShapeErased",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeErased.js",
            "line": 4,
            "description": "Shape erased",
            "extends": "ShapeCandidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeInkRange": {
            "name": "ShapeInkRange",
            "shortname": "ShapeInkRange",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeInkRange.js",
            "line": 4,
            "description": "Shape ink range",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeLine": {
            "name": "ShapeLine",
            "shortname": "ShapeLine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeLine.js",
            "line": 4,
            "description": "Shape line",
            "extends": "AbstractDecoratedShape",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeNotRecognized": {
            "name": "ShapeNotRecognized",
            "shortname": "ShapeNotRecognized",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeNotRecognized.js",
            "line": 4,
            "description": "Shape not recognized",
            "extends": "ShapeCandidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapePoint": {
            "name": "ShapePoint",
            "shortname": "ShapePoint",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapePoint.js",
            "line": 4,
            "description": "Shape point",
            "extends": "Point",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeRecognized": {
            "name": "ShapeRecognized",
            "shortname": "ShapeRecognized",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeRecognized.js",
            "line": 4,
            "description": "Shape recognized",
            "extends": "ShapeCandidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeResult": {
            "name": "ShapeResult",
            "shortname": "ShapeResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeResult.js",
            "line": 4,
            "description": "Shape result",
            "extends": "AbstractResult",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeScratchOut": {
            "name": "ShapeScratchOut",
            "shortname": "ShapeScratchOut",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeScratchOut.js",
            "line": 4,
            "description": "Shape scratch-out",
            "extends": "ShapeCandidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "ShapeSegment": {
            "name": "ShapeSegment",
            "shortname": "ShapeSegment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/shape/shapeSegment.js",
            "line": 4,
            "description": "Shape segment",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextCandidate": {
            "name": "TextCandidate",
            "shortname": "TextCandidate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textCandidate.js",
            "line": 4,
            "description": "Text candidate",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextDocument": {
            "name": "TextDocument",
            "shortname": "TextDocument",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textDocument.js",
            "line": 4,
            "description": "Text document",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextResponseWSMessage": {
            "name": "TextResponseWSMessage",
            "shortname": "TextResponseWSMessage",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textResponseWSMessage.js",
            "line": 4,
            "description": "WebSocket recognition text result message",
            "extends": "AbstractRecoResponseWSMessage",
            "params": [
                {
                    "name": "obj",
                    "description": "Recognition WebSocket message",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextResult": {
            "name": "TextResult",
            "shortname": "TextResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textResult.js",
            "line": 4,
            "description": "Text result",
            "extends": "AbstractResult",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextSegment": {
            "name": "TextSegment",
            "shortname": "TextSegment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textSegment.js",
            "line": 4,
            "description": "Text segment",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextSegmentResult": {
            "name": "TextSegmentResult",
            "shortname": "TextSegmentResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textSegmentResult.js",
            "line": 4,
            "description": "Text segment result",
            "extends": "TextSegment",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "TextTagItem": {
            "name": "TextTagItem",
            "shortname": "TextTagItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/output/text/textTagItem.js",
            "line": 4,
            "description": "Text tag item",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "is_constructor": 1
        },
        "AbstractRecognizer": {
            "name": "AbstractRecognizer",
            "shortname": "AbstractRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/abstractRecognizer.js",
            "line": 4,
            "description": "Abstract recognizer interface",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "AbstractWSRecognizer": {
            "name": "AbstractWSRecognizer",
            "shortname": "AbstractWSRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 4,
            "description": "Abstract WebSocket recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "AnalyzerRecognizer": {
            "name": "AnalyzerRecognizer",
            "shortname": "AnalyzerRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 4,
            "description": "Analyzer recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "MathRecognizer": {
            "name": "MathRecognizer",
            "shortname": "MathRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/mathRecognizer.js",
            "line": 4,
            "description": "Math recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "MathWSRecognizer": {
            "name": "MathWSRecognizer",
            "shortname": "MathWSRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 4,
            "description": "Math WebSocket recognizer interface",
            "extends": "AbstractWSRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "MusicRecognizer": {
            "name": "MusicRecognizer",
            "shortname": "MusicRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/musicRecognizer.js",
            "line": 4,
            "description": "Music recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "ShapeRecognizer": {
            "name": "ShapeRecognizer",
            "shortname": "ShapeRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/shapeRecognizer.js",
            "line": 4,
            "description": "Shape recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "TextRecognizer": {
            "name": "TextRecognizer",
            "shortname": "TextRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/textRecognizer.js",
            "line": 4,
            "description": "Text recognizer interface",
            "extends": "AbstractRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "TextWSRecognizer": {
            "name": "TextWSRecognizer",
            "shortname": "TextWSRecognizer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/recognition/textWSRecognizer.js",
            "line": 4,
            "description": "Text WebSocket recognizer interface",
            "extends": "AbstractWSRecognizer",
            "params": [
                {
                    "name": "host",
                    "description": "Recognition service host",
                    "type": "String",
                    "optional": true,
                    "optdefault": "'cloud.myscript.com'"
                }
            ],
            "is_constructor": 1
        },
        "AbstractRenderer": {
            "name": "AbstractRenderer",
            "shortname": "AbstractRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/abstractRenderer.js",
            "line": 4,
            "description": "Represent the Abstract Renderer. It's used to calculate the ink rendering in HTML5 canvas",
            "is_constructor": 1
        },
        "AnalyzerRenderer": {
            "name": "AnalyzerRenderer",
            "shortname": "AnalyzerRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/analyzerRenderer.js",
            "line": 4,
            "description": "Represent the Analyzer Renderer. It's used to calculate the analyzer ink rendering in HTML5 canvas",
            "extends": "AbstractRenderer",
            "is_constructor": 1
        },
        "MathRenderer": {
            "name": "MathRenderer",
            "shortname": "MathRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/mathRenderer.js",
            "line": 4,
            "description": "Represent the Math Renderer. It's used to calculate the math ink rendering in HTML5 canvas",
            "extends": "AbstractRenderer",
            "is_constructor": 1
        },
        "MusicRenderer": {
            "name": "MusicRenderer",
            "shortname": "MusicRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/musicRenderer.js",
            "line": 4,
            "description": "Represent the Music Renderer. It's used to calculate the music ink rendering in HTML5 canvas",
            "extends": "AbstractRenderer",
            "is_constructor": 1
        },
        "RenderingParameters": {
            "name": "RenderingParameters",
            "shortname": "RenderingParameters",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/renderingParameters.js",
            "line": 4,
            "description": "Parameters used for both input and output canvas draw. Default values:\ncolor: 'black';\nrectColor: 'rgba(0, 0, 0, 0.2)';\nfont: 'Times New Roman';\ndecoration: '';\nwidth: 4;\npressureType: 'SIMULATED';\nalpha: '1.0';\ndoFadeOutLoop: false;\nshowBoundingBoxes: false;",
            "is_constructor": 1
        },
        "ShapeRenderer": {
            "name": "ShapeRenderer",
            "shortname": "ShapeRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/shapeRenderer.js",
            "line": 4,
            "description": "Represent the Shape Renderer. It's used to calculate the shape ink rendering in HTML5 canvas",
            "is_constructor": 1
        },
        "TextRenderer": {
            "name": "TextRenderer",
            "shortname": "TextRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MyScript",
            "file": "src/rendering/textRenderer.js",
            "line": 4,
            "description": "Represent the Text Renderer. It's used to calculate the text ink rendering in HTML5 canvas",
            "extends": "AbstractRenderer",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src/common/generic/point.js",
            "line": 18,
            "description": "Get x",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Point"
        },
        {
            "file": "src/common/generic/point.js",
            "line": 28,
            "description": "Set x",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Point"
        },
        {
            "file": "src/common/generic/point.js",
            "line": 38,
            "description": "Get y",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Point"
        },
        {
            "file": "src/common/generic/point.js",
            "line": 48,
            "description": "Set y",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Point"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 24,
            "description": "Inheritance property",
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 29,
            "description": "Constructor property",
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 34,
            "description": "Get pressure",
            "itemtype": "method",
            "name": "getPressure",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 44,
            "description": "Set pressure",
            "itemtype": "method",
            "name": "setPressure",
            "params": [
                {
                    "name": "pressure",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 54,
            "description": "Get distance",
            "itemtype": "method",
            "name": "getDistance",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 64,
            "description": "Set distance",
            "itemtype": "method",
            "name": "setDistance",
            "params": [
                {
                    "name": "distance",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 74,
            "description": "Get length",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 84,
            "description": "Set length",
            "itemtype": "method",
            "name": "setLength",
            "params": [
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 94,
            "description": "Get ux",
            "itemtype": "method",
            "name": "getUx",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 104,
            "description": "Set ux",
            "itemtype": "method",
            "name": "setUx",
            "params": [
                {
                    "name": "ux",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 114,
            "description": "Get uy",
            "itemtype": "method",
            "name": "getUy",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 124,
            "description": "Set uy",
            "itemtype": "method",
            "name": "setUy",
            "params": [
                {
                    "name": "uy",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 134,
            "description": "Get x1",
            "itemtype": "method",
            "name": "getX1",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 144,
            "description": "Set x1",
            "itemtype": "method",
            "name": "setX1",
            "params": [
                {
                    "name": "x1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 154,
            "description": "Get x2",
            "itemtype": "method",
            "name": "getX2",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 164,
            "description": "Set x2",
            "itemtype": "method",
            "name": "setX2",
            "params": [
                {
                    "name": "x2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 174,
            "description": "Get y1",
            "itemtype": "method",
            "name": "getY1",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 184,
            "description": "Set y2",
            "itemtype": "method",
            "name": "setY1",
            "params": [
                {
                    "name": "y1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 194,
            "description": "Get y2",
            "itemtype": "method",
            "name": "getY2",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/quadraticPoint.js",
            "line": 204,
            "description": "Set y2",
            "itemtype": "method",
            "name": "setY2",
            "params": [
                {
                    "name": "y2",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "QuadraticPoint"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 20,
            "description": "Get top-left x",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 30,
            "description": "Set top-left x",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 40,
            "description": "Get top-left y",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 50,
            "description": "Set top-left y",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 60,
            "description": "Get top-left point",
            "itemtype": "method",
            "name": "getTopLeftPoint",
            "return": {
                "description": "",
                "type": "Point"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 73,
            "description": "Set top-left point",
            "itemtype": "method",
            "name": "setTopLeftPoint",
            "params": [
                {
                    "name": "topLeftPoint",
                    "description": "",
                    "type": "Point"
                }
            ],
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 84,
            "description": "Get width",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 94,
            "description": "Set width",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 104,
            "description": "Get height",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/generic/rectangle.js",
            "line": 114,
            "description": "Set height",
            "itemtype": "method",
            "name": "setHeight",
            "return": {
                "description": "height",
                "type": "Number"
            },
            "class": "Rectangle"
        },
        {
            "file": "src/common/abstractWSMessage.js",
            "line": 17,
            "description": "Get the message type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractWSMessage"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 17,
            "description": "Is Wrinting a stoke",
            "itemtype": "method",
            "name": "isWriting",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 27,
            "description": "Get the last current Stroke write",
            "itemtype": "method",
            "name": "getCurrentStroke",
            "return": {
                "description": "",
                "type": "Stroke"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 37,
            "description": "Start ink capture",
            "itemtype": "method",
            "name": "startInkCapture",
            "params": [
                {
                    "name": "x",
                    "description": "abscissa coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ordinate coordinate",
                    "type": "Number"
                },
                {
                    "name": "t",
                    "description": "event timestamp",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 57,
            "description": "Continue ink capture",
            "itemtype": "method",
            "name": "continueInkCapture",
            "params": [
                {
                    "name": "x",
                    "description": "abscissa coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "ordinate coordinate",
                    "type": "Number"
                },
                {
                    "name": "t",
                    "description": "event timestamp",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 75,
            "description": "End ink capture",
            "itemtype": "method",
            "name": "endInkCapture",
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 89,
            "description": "Clear the strokes list",
            "itemtype": "method",
            "name": "clear",
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 101,
            "description": "Is The Strokes list is empty",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 111,
            "description": "Is the Undo/Redo Stack empty",
            "itemtype": "method",
            "name": "isRedoEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 121,
            "description": "Make an undo",
            "itemtype": "method",
            "name": "undo",
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 133,
            "description": "Make a redo",
            "itemtype": "method",
            "name": "redo",
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 145,
            "description": "Get the strokes list",
            "itemtype": "method",
            "name": "getStokes",
            "return": {
                "description": "",
                "type": "Stroke[]"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 155,
            "description": "Get the Undo/Redo Stack",
            "itemtype": "method",
            "name": "getUndoRedoStack",
            "return": {
                "description": "",
                "type": "Stroke[]"
            },
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 165,
            "description": "Clear the Undo/Redo Stack",
            "itemtype": "method",
            "name": "clearUndoRedoStack",
            "class": "InkManager"
        },
        {
            "file": "src/common/inkManager.js",
            "line": 174,
            "description": "Copy the strokes values from index on an other list of strokes",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "strokes",
                    "description": "List of strokes",
                    "type": "Stroke[]"
                },
                {
                    "name": "index",
                    "description": "Position to start the copy",
                    "type": "Number"
                }
            ],
            "class": "InkManager"
        },
        {
            "file": "src/common/mathUtils.js",
            "line": 13,
            "description": "This method is use to calculate the size of the rectangle that contains an ellipse arc.",
            "itemtype": "method",
            "name": "getEllipseArcRect",
            "params": [
                {
                    "name": "center",
                    "description": "",
                    "type": "Point"
                },
                {
                    "name": "maxRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "minRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "startAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "sweepAngle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "MathUtil"
        },
        {
            "file": "src/common/mathUtils.js",
            "line": 89,
            "description": "This method is use to calculate the size of the rectangle that contains a line.",
            "itemtype": "method",
            "name": "getLineRect",
            "params": [
                {
                    "name": "firstPoint",
                    "description": "",
                    "type": "Point"
                },
                {
                    "name": "lastPoint",
                    "description": "",
                    "type": "Point"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "MathUtil"
        },
        {
            "file": "src/common/mathUtils.js",
            "line": 112,
            "description": "This method is use to calculate the size of the rectangle that contains bounding boxes.",
            "itemtype": "method",
            "name": "getBoundingRect",
            "params": [
                {
                    "name": "boundingBoxes",
                    "description": "List of bounding box",
                    "type": "Rectangle[]"
                }
            ],
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "MathUtil"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 18,
            "description": "Inheritance property",
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 23,
            "description": "Constructor property",
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 28,
            "description": "Get text recognition parameters",
            "itemtype": "method",
            "name": "getTextParameters",
            "return": {
                "description": "",
                "type": "TextParameter"
            },
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 38,
            "description": "Set text recognition parameters",
            "itemtype": "method",
            "name": "setTextParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                }
            ],
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 48,
            "description": "Get analyzer coordinate resolution",
            "itemtype": "method",
            "name": "getCoordinateResolution",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerParameter.js",
            "line": 58,
            "description": "Set analyzer coordinate resolution",
            "itemtype": "method",
            "name": "setCoordinateResolution",
            "params": [
                {
                    "name": "coordinateResolution",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "AnalyzerParameter"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "AnalyzerRecognitionData"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "AnalyzerRecognitionData"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionData.js",
            "line": 24,
            "description": "Get analyzer input",
            "itemtype": "method",
            "name": "getAnalyzerRecognitionInput",
            "return": {
                "description": "",
                "type": "AnalyzerRecognitionInput"
            },
            "class": "AnalyzerRecognitionData"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionData.js",
            "line": 34,
            "description": "Set analyzer input",
            "itemtype": "method",
            "name": "setAnalyzerRecognitionInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "AnalyzerRecognitionInput"
                }
            ],
            "class": "AnalyzerRecognitionData"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 20,
            "description": "Constructor property",
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 25,
            "description": "Get analyzer recognition parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "AnalyzerParameter"
            },
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 35,
            "description": "Set analyzer recognition parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "AnalyzerParameter"
                }
            ],
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 45,
            "description": "Get input components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "AbstractComponent[]"
            },
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/analyzer/analyzerRecognitionInput.js",
            "line": 55,
            "description": "Set input components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                }
            ],
            "class": "AnalyzerRecognitionInput"
        },
        {
            "file": "src/input/generic/components/abstractComponent.js",
            "line": 13,
            "description": "Get the type of the input component",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractComponent"
        },
        {
            "file": "src/input/generic/components/abstractComponent.js",
            "line": 23,
            "description": "Set the type of the input component",
            "itemtype": "method",
            "name": "setType",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractComponent"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 18,
            "description": "Inheritance property",
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 23,
            "description": "Constructor property",
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 28,
            "description": "Get the list of x coordinates",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 38,
            "description": "Set the list of x coordinates",
            "itemtype": "method",
            "name": "setX",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 48,
            "description": "Add a x to the list of x coordinates",
            "itemtype": "method",
            "name": "addX",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 60,
            "description": "Get the list of y coordinates",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 70,
            "description": "Set the list of y coordinates",
            "itemtype": "method",
            "name": "setY",
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 80,
            "description": "Add a y to the list of y coordinates",
            "itemtype": "method",
            "name": "addY",
            "params": [
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 92,
            "description": "Get the list of timestamps",
            "itemtype": "method",
            "name": "getT",
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 102,
            "description": "Set the list of timestamps",
            "itemtype": "method",
            "name": "setT",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number[]"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 112,
            "description": "Add a timestamp to the list",
            "itemtype": "method",
            "name": "addT",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 124,
            "description": "Get the number of points for this stroke",
            "itemtype": "method",
            "name": "getLength",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/components/stroke.js",
            "line": 135,
            "description": "Get the boundingBox",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "Stroke"
        },
        {
            "file": "src/input/generic/abstractContinueRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "AbstractContinueRequestWSMessage"
        },
        {
            "file": "src/input/generic/abstractContinueRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "AbstractContinueRequestWSMessage"
        },
        {
            "file": "src/input/generic/abstractContinueRequestWSMessage.js",
            "line": 27,
            "description": "Get instanceId",
            "itemtype": "method",
            "name": "getInstanceId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractContinueRequestWSMessage"
        },
        {
            "file": "src/input/generic/abstractContinueRequestWSMessage.js",
            "line": 37,
            "description": "Set instanceId",
            "itemtype": "method",
            "name": "setInstanceId",
            "params": [
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractContinueRequestWSMessage"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 13,
            "description": "Get the application key",
            "itemtype": "method",
            "name": "getApplicationKey",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 23,
            "description": "Set the application key",
            "itemtype": "method",
            "name": "setApplicationKey",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 33,
            "description": "Get the instanceId",
            "itemtype": "method",
            "name": "getInstanceId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 43,
            "description": "Set the instanceId",
            "itemtype": "method",
            "name": "setInstanceId",
            "params": [
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 53,
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractRecognitionData.js",
            "line": 60,
            "params": [
                {
                    "name": "hmac",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractRecognitionData"
        },
        {
            "file": "src/input/generic/abstractStartRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "AbstractStartRequestWSMessage"
        },
        {
            "file": "src/input/generic/abstractStartRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "AbstractStartRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 27,
            "description": "Get the challenge",
            "itemtype": "method",
            "name": "getChallenge",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 37,
            "description": "Set the challenge",
            "itemtype": "method",
            "name": "setChallenge",
            "params": [
                {
                    "name": "challenge",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 47,
            "description": "Get the application key",
            "itemtype": "method",
            "name": "getApplicationKey",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 57,
            "description": "Set the application key",
            "itemtype": "method",
            "name": "setApplicationKey",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 67,
            "description": "Get HMAC signature",
            "itemtype": "method",
            "name": "getHmacSignature",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/challengeRequestWSMessage.js",
            "line": 77,
            "description": "Set HMAC signature",
            "itemtype": "method",
            "name": "setHmacSignature",
            "params": [
                {
                    "name": "hmac",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "ChallengeRequestWSMessage"
        },
        {
            "file": "src/input/generic/initRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "InitRequestWSMessage"
        },
        {
            "file": "src/input/generic/initRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "InitRequestWSMessage"
        },
        {
            "file": "src/input/generic/initRequestWSMessage.js",
            "line": 27,
            "description": "Get the application key",
            "itemtype": "method",
            "name": "getApplicationKey",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "InitRequestWSMessage"
        },
        {
            "file": "src/input/generic/initRequestWSMessage.js",
            "line": 37,
            "description": "Set the application key",
            "itemtype": "method",
            "name": "setApplicationKey",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "InitRequestWSMessage"
        },
        {
            "file": "src/input/generic/recognitionLanguagesData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "RecognitionLanguagesData"
        },
        {
            "file": "src/input/generic/recognitionLanguagesData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "RecognitionLanguagesData"
        },
        {
            "file": "src/input/generic/recognitionLanguagesData.js",
            "line": 24,
            "description": "Get the recognition input mode",
            "itemtype": "method",
            "name": "getInputMode",
            "return": {
                "description": "inputMode",
                "type": "String"
            },
            "class": "RecognitionLanguagesData"
        },
        {
            "file": "src/input/generic/recognitionLanguagesData.js",
            "line": 34,
            "description": "Set the recognition input mode",
            "itemtype": "method",
            "name": "setInputMode",
            "params": [
                {
                    "name": "inputMode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RecognitionLanguagesData"
        },
        {
            "file": "src/input/generic/resetRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "ResetRequestWSMessage"
        },
        {
            "file": "src/input/generic/resetRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "ResetRequestWSMessage"
        },
        {
            "file": "src/input/math/mathContinueRequestWSMessage.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MathContinueRequestWSMessage"
        },
        {
            "file": "src/input/math/mathContinueRequestWSMessage.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MathContinueRequestWSMessage"
        },
        {
            "file": "src/input/math/mathContinueRequestWSMessage.js",
            "line": 27,
            "description": "Get components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "MathInputUnit[]"
            },
            "class": "MathContinueRequestWSMessage"
        },
        {
            "file": "src/input/math/mathContinueRequestWSMessage.js",
            "line": 37,
            "description": "Set components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "MathInputUnit[]"
                }
            ],
            "class": "MathContinueRequestWSMessage"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 27,
            "description": "Get the math result types (e.g. LaTex, MathML, SymbolTree)",
            "itemtype": "method",
            "name": "getResultTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 37,
            "description": "Set the math result types (e.g. LaTex, MathML, SymbolTree)",
            "itemtype": "method",
            "name": "setResultTypes",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 47,
            "description": "Get the math result result orientation to columnar operations",
            "itemtype": "method",
            "name": "isColumnar",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 57,
            "description": "Set the math result orientation to columnar operations",
            "itemtype": "method",
            "name": "setColumnar",
            "params": [
                {
                    "name": "columnar",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 67,
            "description": "Get the user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 77,
            "description": "Set the user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 87,
            "description": "Get the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "getScratchOutDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathParameter.js",
            "line": 97,
            "description": "Set the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "setScratchOutDetectionSensitivity",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MathParameter"
        },
        {
            "file": "src/input/math/mathRecognitionData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "MathRecognitionData"
        },
        {
            "file": "src/input/math/mathRecognitionData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "MathRecognitionData"
        },
        {
            "file": "src/input/math/mathRecognitionData.js",
            "line": 24,
            "description": "Get math input",
            "itemtype": "method",
            "name": "getMathRecognitionInput",
            "return": {
                "description": "",
                "type": "MathRecognitionInput"
            },
            "class": "MathRecognitionData"
        },
        {
            "file": "src/input/math/mathRecognitionData.js",
            "line": 34,
            "description": "Set math input",
            "itemtype": "method",
            "name": "setMathRecognitionInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "MathRecognitionInput"
                }
            ],
            "class": "MathRecognitionData"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 19,
            "description": "Constructor property",
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 24,
            "description": "Get input components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "AbstractComponent[]"
            },
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 34,
            "description": "Set input components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                }
            ],
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 44,
            "description": "Get the math result types (e.g. LaTex, MathML, SymbolTree)",
            "itemtype": "method",
            "name": "getResultTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 54,
            "description": "Set the math result types (e.g. LaTex, MathML, SymbolTree)",
            "itemtype": "method",
            "name": "setResultTypes",
            "params": [
                {
                    "name": "resultTypes",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 64,
            "description": "Get the math result result orientation to columnar operations",
            "itemtype": "method",
            "name": "isColumnar",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 74,
            "description": "Set the math result orientation to columnar operations",
            "itemtype": "method",
            "name": "setColumnar",
            "params": [
                {
                    "name": "columnar",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 84,
            "description": "Get the user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 94,
            "description": "Set the user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "userResources",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 104,
            "description": "Get the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "getScratchOutDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathRecognitionInput.js",
            "line": 114,
            "description": "Set the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "setScratchOutDetectionSensitivity",
            "params": [
                {
                    "name": "scratchOutDetectionSensitivity",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MathRecognitionInput"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 26,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "MathParameter"
            },
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 36,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter"
                }
            ],
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 46,
            "description": "Get components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "MathInputUnit[]"
            },
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/math/mathStartRequestWSMessage.js",
            "line": 56,
            "description": "Set components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "MathInputUnit[]"
                }
            ],
            "class": "MathStartRequestWSMessage"
        },
        {
            "file": "src/input/music/components/abstractMusicInputComponent.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "AbstractMusicInputComponent"
        },
        {
            "file": "src/input/music/components/abstractMusicInputComponent.js",
            "line": 19,
            "description": "Constructor property",
            "class": "AbstractMusicInputComponent"
        },
        {
            "file": "src/input/music/components/abstractMusicInputComponent.js",
            "line": 24,
            "description": "Get input component bounding-box",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "AbstractMusicInputComponent"
        },
        {
            "file": "src/input/music/components/abstractMusicInputComponent.js",
            "line": 34,
            "description": "Set input component bounding-box",
            "itemtype": "method",
            "name": "setBoundingBox",
            "params": [
                {
                    "name": "boundingBox",
                    "description": "",
                    "type": "Rectangle"
                }
            ],
            "class": "AbstractMusicInputComponent"
        },
        {
            "file": "src/input/music/components/musicAccidentalInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicAccidentalInputComponent"
        },
        {
            "file": "src/input/music/components/musicAccidentalInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicAccidentalInputComponent"
        },
        {
            "file": "src/input/music/components/musicAccidentalInputComponent.js",
            "line": 25,
            "description": "Get accidental input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicAccidentalInputComponent"
        },
        {
            "file": "src/input/music/components/musicAccidentalInputComponent.js",
            "line": 35,
            "description": "Set accidental input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicAccidentalInputComponent"
        },
        {
            "file": "src/input/music/components/musicArpeggiateInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicArpeggiateInputComponent"
        },
        {
            "file": "src/input/music/components/musicArpeggiateInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicArpeggiateInputComponent"
        },
        {
            "file": "src/input/music/components/musicArpeggiateInputComponent.js",
            "line": 25,
            "description": "Get arpeggiate input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicArpeggiateInputComponent"
        },
        {
            "file": "src/input/music/components/musicArpeggiateInputComponent.js",
            "line": 35,
            "description": "Set arpeggiate input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicArpeggiateInputComponent"
        },
        {
            "file": "src/input/music/components/musicBarInput.js",
            "line": 13,
            "description": "Get repeat direction",
            "itemtype": "method",
            "name": "getRepeatDirection",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBarInput"
        },
        {
            "file": "src/input/music/components/musicBarInput.js",
            "line": 23,
            "description": "Set repeat direction",
            "itemtype": "method",
            "name": "setRepeatDirection",
            "params": [
                {
                    "name": "repeatDirection",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicBarInput"
        },
        {
            "file": "src/input/music/components/musicBarInput.js",
            "line": 33,
            "description": "Get style",
            "itemtype": "method",
            "name": "getStyle",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBarInput"
        },
        {
            "file": "src/input/music/components/musicBarInput.js",
            "line": 43,
            "description": "Set style",
            "itemtype": "method",
            "name": "setStyle",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicBarInput"
        },
        {
            "file": "src/input/music/components/musicBarInputComponent.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MusicBarInputComponent"
        },
        {
            "file": "src/input/music/components/musicBarInputComponent.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MusicBarInputComponent"
        },
        {
            "file": "src/input/music/components/musicBarInputComponent.js",
            "line": 26,
            "description": "Get bar input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "MusicBarInput"
            },
            "class": "MusicBarInputComponent"
        },
        {
            "file": "src/input/music/components/musicBarInputComponent.js",
            "line": 36,
            "description": "Set bar input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "MusicBarInput"
                }
            ],
            "class": "MusicBarInputComponent"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 13,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 23,
            "description": "Set placement",
            "itemtype": "method",
            "name": "setPlacement",
            "params": [
                {
                    "name": "placement",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 33,
            "description": "Get slope",
            "itemtype": "method",
            "name": "getSlope",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 43,
            "description": "Set slope",
            "itemtype": "method",
            "name": "setSlope",
            "params": [
                {
                    "name": "slope",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 53,
            "description": "Get left count",
            "itemtype": "method",
            "name": "getLeftCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 63,
            "description": "Set left count",
            "itemtype": "method",
            "name": "setLeftCount",
            "params": [
                {
                    "name": "leftCount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 73,
            "description": "Get right count",
            "itemtype": "method",
            "name": "getRightCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 83,
            "description": "Set right count",
            "itemtype": "method",
            "name": "setRightCount",
            "params": [
                {
                    "name": "rightCount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 93,
            "description": "Get gap",
            "itemtype": "method",
            "name": "getGap",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInput.js",
            "line": 103,
            "description": "Set gap",
            "itemtype": "method",
            "name": "setGap",
            "params": [
                {
                    "name": "gap",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicBeamInput"
        },
        {
            "file": "src/input/music/components/musicBeamInputComponent.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MusicBeamInputComponent"
        },
        {
            "file": "src/input/music/components/musicBeamInputComponent.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MusicBeamInputComponent"
        },
        {
            "file": "src/input/music/components/musicBeamInputComponent.js",
            "line": 26,
            "description": "Get beam input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "MusicBeamInput"
            },
            "class": "MusicBeamInputComponent"
        },
        {
            "file": "src/input/music/components/musicBeamInputComponent.js",
            "line": 36,
            "description": "Set beam input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "MusicBeamInput"
                }
            ],
            "class": "MusicBeamInputComponent"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 16,
            "description": "Get y anchor",
            "itemtype": "method",
            "name": "getYAnchor",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 26,
            "description": "Set y anchor",
            "itemtype": "method",
            "name": "setYAnchor",
            "params": [
                {
                    "name": "yAnchor",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 36,
            "description": "Get octave",
            "itemtype": "method",
            "name": "getOctave",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 46,
            "description": "Set octave",
            "itemtype": "method",
            "name": "setOctave",
            "params": [
                {
                    "name": "octave",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 56,
            "description": "Get symbol",
            "itemtype": "method",
            "name": "getSymbol",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInput.js",
            "line": 66,
            "description": "Set symbol",
            "itemtype": "method",
            "name": "setSymbol",
            "params": [
                {
                    "name": "symbol",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicClefInput"
        },
        {
            "file": "src/input/music/components/musicClefInputComponent.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MusicClefInputComponent"
        },
        {
            "file": "src/input/music/components/musicClefInputComponent.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MusicClefInputComponent"
        },
        {
            "file": "src/input/music/components/musicClefInputComponent.js",
            "line": 27,
            "description": "Get clef input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "MusicClefInput"
            },
            "class": "MusicClefInputComponent"
        },
        {
            "file": "src/input/music/components/musicClefInputComponent.js",
            "line": 37,
            "description": "Set clef input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "MusicClefInput"
                }
            ],
            "class": "MusicClefInputComponent"
        },
        {
            "file": "src/input/music/components/musicDecorationInput.js",
            "line": 13,
            "description": "Get symbol",
            "itemtype": "method",
            "name": "getSymbol",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicDecorationInput"
        },
        {
            "file": "src/input/music/components/musicDecorationInput.js",
            "line": 23,
            "description": "Set symbol",
            "itemtype": "method",
            "name": "setSymbol",
            "params": [
                {
                    "name": "symbol",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicDecorationInput"
        },
        {
            "file": "src/input/music/components/musicDecorationInput.js",
            "line": 33,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicDecorationInput"
        },
        {
            "file": "src/input/music/components/musicDecorationInput.js",
            "line": 43,
            "description": "Set placement",
            "itemtype": "method",
            "name": "setPlacement",
            "params": [
                {
                    "name": "placement",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicDecorationInput"
        },
        {
            "file": "src/input/music/components/musicDecorationInputComponent.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MusicDecorationInputComponent"
        },
        {
            "file": "src/input/music/components/musicDecorationInputComponent.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MusicDecorationInputComponent"
        },
        {
            "file": "src/input/music/components/musicDecorationInputComponent.js",
            "line": 26,
            "description": "Get decoration input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "MusicDecorationInput"
            },
            "class": "MusicDecorationInputComponent"
        },
        {
            "file": "src/input/music/components/musicDecorationInputComponent.js",
            "line": 36,
            "description": "Set decoration input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "MusicDecorationInput"
                }
            ],
            "class": "MusicDecorationInputComponent"
        },
        {
            "file": "src/input/music/components/musicDotsInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicDotsInputComponent"
        },
        {
            "file": "src/input/music/components/musicDotsInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicDotsInputComponent"
        },
        {
            "file": "src/input/music/components/musicDotsInputComponent.js",
            "line": 25,
            "description": "Get dots input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicDotsInputComponent"
        },
        {
            "file": "src/input/music/components/musicDotsInputComponent.js",
            "line": 35,
            "description": "Set dots input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicDotsInputComponent"
        },
        {
            "file": "src/input/music/components/musicHeadInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicHeadInputComponent"
        },
        {
            "file": "src/input/music/components/musicHeadInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicHeadInputComponent"
        },
        {
            "file": "src/input/music/components/musicHeadInputComponent.js",
            "line": 25,
            "description": "Get head input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicHeadInputComponent"
        },
        {
            "file": "src/input/music/components/musicHeadInputComponent.js",
            "line": 35,
            "description": "Set head input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicHeadInputComponent"
        },
        {
            "file": "src/input/music/components/musicLedgerLineInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicLedgerLineInputComponent"
        },
        {
            "file": "src/input/music/components/musicLedgerLineInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicLedgerLineInputComponent"
        },
        {
            "file": "src/input/music/components/musicRestInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicRestInputComponent"
        },
        {
            "file": "src/input/music/components/musicRestInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicRestInputComponent"
        },
        {
            "file": "src/input/music/components/musicRestInputComponent.js",
            "line": 25,
            "description": "Get rest input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicRestInputComponent"
        },
        {
            "file": "src/input/music/components/musicRestInputComponent.js",
            "line": 35,
            "description": "Set rest input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicRestInputComponent"
        },
        {
            "file": "src/input/music/components/musicStemInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicStemInputComponent"
        },
        {
            "file": "src/input/music/components/musicStemInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicStemInputComponent"
        },
        {
            "file": "src/input/music/components/musicStemInputComponent.js",
            "line": 25,
            "description": "Get stem input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicStemInputComponent"
        },
        {
            "file": "src/input/music/components/musicStemInputComponent.js",
            "line": 35,
            "description": "Set stem input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicStemInputComponent"
        },
        {
            "file": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicTieOrSlurInputComponent"
        },
        {
            "file": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicTieOrSlurInputComponent"
        },
        {
            "file": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "line": 25,
            "description": "Get tie or slur input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTieOrSlurInputComponent"
        },
        {
            "file": "src/input/music/components/musicTieOrSlurInputComponent.js",
            "line": 35,
            "description": "Set tie or slur input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicTieOrSlurInputComponent"
        },
        {
            "file": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicTimeSignatureInputComponent"
        },
        {
            "file": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicTimeSignatureInputComponent"
        },
        {
            "file": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "line": 25,
            "description": "Get time signature input component value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTimeSignatureInputComponent"
        },
        {
            "file": "src/input/music/components/musicTimeSignatureInputComponent.js",
            "line": 35,
            "description": "Set time signature input component value",
            "itemtype": "method",
            "name": "setValue",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "MusicTimeSignatureInputComponent"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 27,
            "description": "Get the music result types (e.g. MusicXML, ScoreTree)",
            "itemtype": "method",
            "name": "getResultTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 37,
            "description": "Set the music result types (e.g. MusicXML, ScoreTree)",
            "itemtype": "method",
            "name": "setResultTypes",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 47,
            "description": "Get the user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 57,
            "description": "Set the user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 67,
            "description": "Get the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "getScratchOutDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 77,
            "description": "Set the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "setScratchOutDetectionSensitivity",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 87,
            "description": "Get the staff",
            "itemtype": "method",
            "name": "getStaff",
            "return": {
                "description": "",
                "type": "MusicStaff"
            },
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 97,
            "description": "Set the staff",
            "itemtype": "method",
            "name": "setStaff",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "MusicStaff"
                }
            ],
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 107,
            "description": "Get the number of divisions",
            "itemtype": "method",
            "name": "getDivisions",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicParameter.js",
            "line": 117,
            "description": "Set the number of divisions",
            "itemtype": "method",
            "name": "setDivisions",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicParameter"
        },
        {
            "file": "src/input/music/musicRecognitionData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "MusicRecognitionData"
        },
        {
            "file": "src/input/music/musicRecognitionData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "MusicRecognitionData"
        },
        {
            "file": "src/input/music/musicRecognitionData.js",
            "line": 24,
            "description": "Get music input",
            "itemtype": "method",
            "name": "getMusicRecognitionInput",
            "return": {
                "description": "",
                "type": "MusicRecognitionInput"
            },
            "class": "MusicRecognitionData"
        },
        {
            "file": "src/input/music/musicRecognitionData.js",
            "line": 34,
            "description": "Set music input",
            "itemtype": "method",
            "name": "setMusicRecognitionInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "MusicRecognitionInput"
                }
            ],
            "class": "MusicRecognitionData"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 19,
            "description": "Constructor property",
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 24,
            "description": "Get input components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "AbstractComponent[]"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 34,
            "description": "Set input components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 44,
            "description": "Get the result types",
            "itemtype": "method",
            "name": "getResultTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 54,
            "description": "Set the result types",
            "itemtype": "method",
            "name": "setResultTypes",
            "params": [
                {
                    "name": "resultTypes",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 64,
            "description": "Get the user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 74,
            "description": "Set the user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "userResources",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 84,
            "description": "Get the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "getScratchOutDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 94,
            "description": "Set the sensitivity of the scratch-out detection",
            "itemtype": "method",
            "name": "setScratchOutDetectionSensitivity",
            "params": [
                {
                    "name": "scratchOutDetectionSensitivity",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 104,
            "description": "Get the staff",
            "itemtype": "method",
            "name": "getStaff",
            "return": {
                "description": "",
                "type": "MusicStaff"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 114,
            "description": "Set the staff",
            "itemtype": "method",
            "name": "setStaff",
            "params": [
                {
                    "name": "staff",
                    "description": "",
                    "type": "MusicStaff"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 124,
            "description": "Get the number of divisions",
            "itemtype": "method",
            "name": "getDivisions",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicRecognitionInput.js",
            "line": 134,
            "description": "Set the number of divisions",
            "itemtype": "method",
            "name": "setDivisions",
            "params": [
                {
                    "name": "divisions",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicRecognitionInput"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 16,
            "description": "Get the lines count",
            "itemtype": "method",
            "name": "getCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicStaff"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 26,
            "description": "Set the lines count",
            "itemtype": "method",
            "name": "setCount",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicStaff"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 36,
            "description": "Get the spacing from the top",
            "itemtype": "method",
            "name": "getTop",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicStaff"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 46,
            "description": "Set the spacing from the top",
            "itemtype": "method",
            "name": "setTop",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicStaff"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 56,
            "description": "Get the gap between lines",
            "itemtype": "method",
            "name": "getGap",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicStaff"
        },
        {
            "file": "src/input/music/musicStaff.js",
            "line": 66,
            "description": "Set the gap between lines",
            "itemtype": "method",
            "name": "setGap",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "MusicStaff"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 20,
            "description": "Constructor property",
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 25,
            "description": "Get the sensitivity of the reject detection",
            "itemtype": "method",
            "name": "getRejectDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 35,
            "description": "Set the sensitivity of the reject detection",
            "itemtype": "method",
            "name": "setRejectDetectionSensitivity",
            "params": [
                {
                    "name": "rejectDetectionSensitivity",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 45,
            "description": "Get the beautification",
            "itemtype": "method",
            "name": "hasBeautification",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 55,
            "description": "Set the beautification",
            "itemtype": "method",
            "name": "setBeautification",
            "params": [
                {
                    "name": "doBeautification",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 65,
            "description": "Get the user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeParameter.js",
            "line": 75,
            "description": "Set the user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "UNKNOWN",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "ShapeParameter"
        },
        {
            "file": "src/input/shape/shapeRecognitionData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "ShapeRecognitionData"
        },
        {
            "file": "src/input/shape/shapeRecognitionData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "ShapeRecognitionData"
        },
        {
            "file": "src/input/shape/shapeRecognitionData.js",
            "line": 24,
            "description": "Get shape input",
            "itemtype": "method",
            "name": "getShapeRecognitionInput",
            "return": {
                "description": "",
                "type": "ShapeRecognitionInput"
            },
            "class": "ShapeRecognitionData"
        },
        {
            "file": "src/input/shape/shapeRecognitionData.js",
            "line": 34,
            "description": "Set shape input",
            "itemtype": "method",
            "name": "setShapeRecognitionInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "ShapeRecognitionInput"
                }
            ],
            "class": "ShapeRecognitionData"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 19,
            "description": "Constructor property",
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 24,
            "description": "Get input components",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "AbstractComponent[]"
            },
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 34,
            "description": "Set input components",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                }
            ],
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 44,
            "description": "Get the beautification",
            "itemtype": "method",
            "name": "getDoBeautification",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 54,
            "description": "Set the beautification",
            "itemtype": "method",
            "name": "setDoBeautification",
            "params": [
                {
                    "name": "doBeautification",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 64,
            "description": "Get the sensitivity of the reject detection",
            "itemtype": "method",
            "name": "getRejectDetectionSensitivity",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/shape/shapeRecognitionInput.js",
            "line": 74,
            "description": "Set the sensitivity of the reject detection",
            "itemtype": "method",
            "name": "setRejectDetectionSensitivity",
            "params": [
                {
                    "name": "rejectDetectionSensitivity",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "ShapeRecognitionInput"
        },
        {
            "file": "src/input/text/components/abstractTextInputComponent.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "AbstractTextInputComponent"
        },
        {
            "file": "src/input/text/components/abstractTextInputComponent.js",
            "line": 19,
            "description": "Constructor property",
            "class": "AbstractTextInputComponent"
        },
        {
            "file": "src/input/text/components/abstractTextInputComponent.js",
            "line": 24,
            "description": "Get input component bounding-box",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "AbstractTextInputComponent"
        },
        {
            "file": "src/input/text/components/abstractTextInputComponent.js",
            "line": 34,
            "description": "Set input component bounding-box",
            "itemtype": "method",
            "name": "setBoundingBox",
            "params": [
                {
                    "name": "boundingBox",
                    "description": "",
                    "type": "Rectangle"
                }
            ],
            "class": "AbstractTextInputComponent"
        },
        {
            "file": "src/input/text/components/charInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "CharInputComponent"
        },
        {
            "file": "src/input/text/components/charInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "CharInputComponent"
        },
        {
            "file": "src/input/text/components/charInputComponent.js",
            "line": 25,
            "description": "Get character",
            "itemtype": "method",
            "name": "getCharacter",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CharInputComponent"
        },
        {
            "file": "src/input/text/components/charInputComponent.js",
            "line": 35,
            "description": "Set character",
            "itemtype": "method",
            "name": "setCharacter",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "CharInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "CharacterInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 21,
            "description": "Constructor property",
            "class": "CharacterInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 26,
            "description": "Get character input alternates",
            "itemtype": "method",
            "name": "getAlternates",
            "return": {
                "description": "",
                "type": "CharacterInputComponentAlternate[]"
            },
            "class": "CharacterInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 36,
            "description": "Set character input alternates",
            "itemtype": "method",
            "name": "setAlternates",
            "params": [
                {
                    "name": "alternates",
                    "description": "",
                    "type": "CharacterInputComponentAlternate[]"
                }
            ],
            "class": "CharacterInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponent.js",
            "line": 46,
            "description": "Add a character input alternate",
            "itemtype": "method",
            "name": "addAlternate",
            "params": [
                {
                    "name": "alternate",
                    "description": "",
                    "type": "CharacterInputComponent"
                }
            ],
            "class": "CharacterInputComponent"
        },
        {
            "file": "src/input/text/components/characterInputComponentAlternate.js",
            "line": 15,
            "description": "Get alternate",
            "itemtype": "method",
            "name": "getAlternate",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "CharacterInputComponentAlternate"
        },
        {
            "file": "src/input/text/components/characterInputComponentAlternate.js",
            "line": 25,
            "description": "Set alternate",
            "itemtype": "method",
            "name": "setAlternate",
            "params": [
                {
                    "name": "alternate",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "CharacterInputComponentAlternate"
        },
        {
            "file": "src/input/text/components/characterInputComponentAlternate.js",
            "line": 35,
            "description": "Get probability",
            "itemtype": "method",
            "name": "getProbability",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "CharacterInputComponentAlternate"
        },
        {
            "file": "src/input/text/components/characterInputComponentAlternate.js",
            "line": 45,
            "description": "Set probability",
            "itemtype": "method",
            "name": "setProbability",
            "params": [
                {
                    "name": "probability",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "CharacterInputComponentAlternate"
        },
        {
            "file": "src/input/text/components/stringInputComponent.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "StringInputComponent"
        },
        {
            "file": "src/input/text/components/stringInputComponent.js",
            "line": 20,
            "description": "Constructor property",
            "class": "StringInputComponent"
        },
        {
            "file": "src/input/text/components/stringInputComponent.js",
            "line": 25,
            "description": "Get string",
            "itemtype": "method",
            "name": "getString",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "StringInputComponent"
        },
        {
            "file": "src/input/text/components/stringInputComponent.js",
            "line": 35,
            "description": "Set string",
            "itemtype": "method",
            "name": "setString",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "StringInputComponent"
        },
        {
            "file": "src/input/text/textContinueRequestWSMessage.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "TextContinueRequestWSMessage"
        },
        {
            "file": "src/input/text/textContinueRequestWSMessage.js",
            "line": 21,
            "description": "Constructor property",
            "class": "TextContinueRequestWSMessage"
        },
        {
            "file": "src/input/text/textContinueRequestWSMessage.js",
            "line": 26,
            "description": "Get input units",
            "itemtype": "method",
            "name": "getInputUnits",
            "return": {
                "description": "",
                "type": "TextInputUnit[]"
            },
            "class": "TextContinueRequestWSMessage"
        },
        {
            "file": "src/input/text/textContinueRequestWSMessage.js",
            "line": 36,
            "description": "Set input units",
            "itemtype": "method",
            "name": "setInputUnits",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                }
            ],
            "class": "TextContinueRequestWSMessage"
        },
        {
            "file": "src/input/text/textInputUnit.js",
            "line": 15,
            "description": "Get the input type",
            "itemtype": "method",
            "name": "getInputType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextInputUnit"
        },
        {
            "file": "src/input/text/textInputUnit.js",
            "line": 25,
            "description": "Set the input type",
            "itemtype": "method",
            "name": "setInputType",
            "return": {
                "description": "inputType",
                "type": "String"
            },
            "class": "TextInputUnit"
        },
        {
            "file": "src/input/text/textInputUnit.js",
            "line": 35,
            "description": "Get components for this input unit",
            "itemtype": "method",
            "name": "getComponents",
            "return": {
                "description": "",
                "type": "AbstractComponent[]"
            },
            "class": "TextInputUnit"
        },
        {
            "file": "src/input/text/textInputUnit.js",
            "line": 45,
            "description": "Set components for this input unit",
            "itemtype": "method",
            "name": "setComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                }
            ],
            "class": "TextInputUnit"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 20,
            "description": "Constructor property",
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 25,
            "description": "Get recognition language",
            "itemtype": "method",
            "name": "getLanguage",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 35,
            "description": "Set recognition language",
            "itemtype": "method",
            "name": "getLanguage",
            "params": [
                {
                    "name": "language",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 45,
            "description": "Get input mode",
            "itemtype": "method",
            "name": "getInputMode",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 55,
            "description": "Set input mode",
            "itemtype": "method",
            "name": "setInputMode",
            "params": [
                {
                    "name": "inputMode",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 65,
            "description": "Get content types",
            "itemtype": "method",
            "name": "getContentTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 75,
            "description": "Set content types",
            "itemtype": "method",
            "name": "setContentTypes",
            "params": [
                {
                    "name": "contentTypes",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 85,
            "description": "Get SK",
            "itemtype": "method",
            "name": "getSubsetKnowledges",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 95,
            "description": "Set SK",
            "itemtype": "method",
            "name": "setSubsetKnowledges",
            "params": [
                {
                    "name": "subsetKnowledges",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 105,
            "description": "Get user resources",
            "itemtype": "method",
            "name": "getUserResources",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 115,
            "description": "Set user resources",
            "itemtype": "method",
            "name": "setUserResources",
            "params": [
                {
                    "name": "userResources",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 125,
            "description": "Get user LK words",
            "itemtype": "method",
            "name": "getUserLkWords",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 135,
            "description": "Set user LK words",
            "itemtype": "method",
            "name": "setUserLkWords",
            "params": [
                {
                    "name": "userLkWords",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 145,
            "description": "Get result detail (e.g. TEXT, WORD ...)",
            "itemtype": "method",
            "name": "getResultDetail",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 155,
            "description": "Set result detail (e.g. TEXT, WORD ...)",
            "itemtype": "method",
            "name": "setResultDetail",
            "params": [
                {
                    "name": "resultDetail",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 165,
            "description": "Get text properties",
            "itemtype": "method",
            "name": "getTextProperties",
            "return": {
                "description": "",
                "type": "TextProperties"
            },
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textParameter.js",
            "line": 175,
            "description": "Set text properties",
            "itemtype": "method",
            "name": "setTextProperties",
            "params": [
                {
                    "name": "properties",
                    "description": "",
                    "type": "TextProperties"
                }
            ],
            "class": "TextParameter"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 13,
            "description": "Get the number of text candidates requested",
            "itemtype": "method",
            "name": "getTextCandidateListSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 23,
            "description": "Set the number of text candidates requested",
            "itemtype": "method",
            "name": "setTextCandidateListSize",
            "params": [
                {
                    "name": "textCandidateListSize",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 33,
            "description": "Get the number of word candidates requested",
            "itemtype": "method",
            "name": "getWordCandidateListSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 43,
            "description": "Set the number of word candidates requested",
            "itemtype": "method",
            "name": "setWordCandidateListSize",
            "params": [
                {
                    "name": "wordCandidateListSize",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 53,
            "description": "Get the number of word prediction candidates requested",
            "itemtype": "method",
            "name": "getWordPredictionListSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 63,
            "description": "Set the number of word prediction candidates requested",
            "itemtype": "method",
            "name": "setWordPredictionListSize",
            "params": [
                {
                    "name": "wordPredictionListSize",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 73,
            "description": "Get the number of word completion candidates requested",
            "itemtype": "method",
            "name": "getWordCompletionListSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 83,
            "description": "Set the number of word completion candidates requested",
            "itemtype": "method",
            "name": "setWordCompletionListSize",
            "params": [
                {
                    "name": "wordCompletionListSize",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 93,
            "description": "Get the number of character candidates requested",
            "itemtype": "method",
            "name": "getCharacterCandidateListSize",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 103,
            "description": "Set the number of character candidates requested",
            "itemtype": "method",
            "name": "setCharacterCandidateListSize",
            "params": [
                {
                    "name": "characterCandidateListSize",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 113,
            "description": "Get the discard case variations",
            "itemtype": "method",
            "name": "getDiscardCaseVariations",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 123,
            "description": "Set the discard case variations",
            "itemtype": "method",
            "name": "setDiscardCaseVariations",
            "params": [
                {
                    "name": "discardCaseVariations",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 133,
            "description": "Get the discard accentuation variations",
            "itemtype": "method",
            "name": "getDiscardAccentuationVariations",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 143,
            "description": "Set the discard accentuation variations",
            "itemtype": "method",
            "name": "setDiscardAccentuationVariations",
            "params": [
                {
                    "name": "discardAccentuationVariations",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 153,
            "description": "Get disable spatial ordering",
            "itemtype": "method",
            "name": "getDisableSpatialOrdering",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 163,
            "description": "Set disable spatial ordering",
            "itemtype": "method",
            "name": "setDisableSpatialOrdering",
            "params": [
                {
                    "name": "disableSpatialOrdering",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 173,
            "description": "Get glyph distortion",
            "itemtype": "method",
            "name": "getGlyphDistortion",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 183,
            "description": "Set glyph distortion",
            "itemtype": "method",
            "name": "setGlyphDistortion",
            "params": [
                {
                    "name": "glyphDistortion",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 193,
            "description": "Get enable out of lexicon",
            "itemtype": "method",
            "name": "getEnableOutOfLexicon",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 203,
            "description": "Set enable out of lexicon",
            "itemtype": "method",
            "name": "setEnableOutOfLexicon",
            "params": [
                {
                    "name": "enableOutOfLexicon",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 213,
            "description": "Get spelling distortion",
            "itemtype": "method",
            "name": "getSpellingDistortion",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textProperties.js",
            "line": 223,
            "description": "Set spelling distortion",
            "itemtype": "method",
            "name": "setSpellingDistortion",
            "params": [
                {
                    "name": "spellingDistortion",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "TextProperties"
        },
        {
            "file": "src/input/text/textRecognitionData.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "TextRecognitionData"
        },
        {
            "file": "src/input/text/textRecognitionData.js",
            "line": 19,
            "description": "Constructor property",
            "class": "TextRecognitionData"
        },
        {
            "file": "src/input/text/textRecognitionData.js",
            "line": 24,
            "description": "Get text input",
            "itemtype": "method",
            "name": "getTextRecognitionInput",
            "return": {
                "description": "inputMode",
                "type": "TextRecognitionInput"
            },
            "class": "TextRecognitionData"
        },
        {
            "file": "src/input/text/textRecognitionData.js",
            "line": 34,
            "description": "Set text input",
            "itemtype": "method",
            "name": "setTextRecognitionInput",
            "params": [
                {
                    "name": "input",
                    "description": "",
                    "type": "TextRecognitionInput"
                }
            ],
            "class": "TextRecognitionData"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 19,
            "description": "Constructor property",
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 24,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "TextParameter"
            },
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 34,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                }
            ],
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 44,
            "description": "Get input units",
            "itemtype": "method",
            "name": "getInputUnits",
            "return": {
                "description": "",
                "type": "TextInputUnit[]"
            },
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textRecognitionInput.js",
            "line": 54,
            "description": "Set input units",
            "itemtype": "method",
            "name": "setInputUnits",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                }
            ],
            "class": "TextRecognitionInput"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 21,
            "description": "Constructor property",
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 26,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "TextParameter"
            },
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 36,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                }
            ],
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 46,
            "description": "Get input units",
            "itemtype": "method",
            "name": "getInputUnits",
            "return": {
                "description": "",
                "type": "TextInputUnit[]"
            },
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/input/text/textStartRequestWSMessage.js",
            "line": 56,
            "description": "Set input units",
            "itemtype": "method",
            "name": "setInputUnits",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                }
            ],
            "class": "TextStartRequestWSMessage"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 13,
            "description": "Parse JSON String to Object",
            "itemtype": "method",
            "name": "parse",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 30,
            "description": "Transform object data request to a list of parameters",
            "itemtype": "method",
            "name": "transformRequest",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 48,
            "description": "Send request to the network and return a promise",
            "itemtype": "method",
            "name": "xhr",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 100,
            "description": "Get request",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 120,
            "description": "Put request",
            "itemtype": "method",
            "name": "put",
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 137,
            "description": "Post request",
            "itemtype": "method",
            "name": "post",
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/networking/networkInterface.js",
            "line": 154,
            "description": "Delete request",
            "itemtype": "method",
            "name": "delete",
            "params": [
                {
                    "name": "src",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "NetworkInterface"
        },
        {
            "file": "src/output/analyzer/analyzerCell.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "AnalyzerCell"
        },
        {
            "file": "src/output/analyzer/analyzerCell.js",
            "line": 24,
            "description": "Constructor property",
            "class": "AnalyzerCell"
        },
        {
            "file": "src/output/analyzer/analyzerCell.js",
            "line": 29,
            "description": "Get analyzer cell data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "AnalyzerCellData"
            },
            "class": "AnalyzerCell"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 28,
            "description": "Get first column",
            "itemtype": "method",
            "name": "getFirstColumn",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 38,
            "description": "Get last column",
            "itemtype": "method",
            "name": "getLastColumn",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 48,
            "description": "Get first row",
            "itemtype": "method",
            "name": "getFirstRow",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 58,
            "description": "Get last row",
            "itemtype": "method",
            "name": "getLastRow",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 68,
            "description": "Get height",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 78,
            "description": "Get width",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 88,
            "description": "Get orientation",
            "itemtype": "method",
            "name": "getOrientation",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 98,
            "description": "Get top-left point",
            "itemtype": "method",
            "name": "getTopLeftPoint",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 108,
            "description": "Has top border",
            "itemtype": "method",
            "name": "hasTopBorder",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 118,
            "description": "Has bottom border",
            "itemtype": "method",
            "name": "hasBottomBorder",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 128,
            "description": "Has left border",
            "itemtype": "method",
            "name": "hasLeftBorder",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 138,
            "description": "Has right border",
            "itemtype": "method",
            "name": "hasRightBorder",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerCellData.js",
            "line": 148,
            "description": "Get bounding box",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "AnalyzerCellData"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 34,
            "description": "Inheritance property",
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 39,
            "description": "Constructor property",
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 44,
            "description": "Get text lines",
            "itemtype": "method",
            "name": "getTextLines",
            "return": {
                "description": "",
                "type": "AnalyzerTextLine[]"
            },
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 54,
            "description": "Get shapes",
            "itemtype": "method",
            "name": "getShapes",
            "return": {
                "description": "",
                "type": "ShapeSegment[]"
            },
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 64,
            "description": "Get tables",
            "itemtype": "method",
            "name": "getTables",
            "return": {
                "description": "",
                "type": "AnalyzerTable[]"
            },
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerDocument.js",
            "line": 74,
            "description": "Get groups",
            "itemtype": "method",
            "name": "getGroups",
            "return": {
                "description": "",
                "type": "AnalyzerGroup[]"
            },
            "class": "AnalyzerDocument"
        },
        {
            "file": "src/output/analyzer/analyzerElement.js",
            "line": 17,
            "description": "Get element type",
            "itemtype": "method",
            "name": "getElementType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerElement"
        },
        {
            "file": "src/output/analyzer/analyzerElementReference.js",
            "line": 18,
            "description": "Get unique id",
            "itemtype": "method",
            "name": "getUniqueId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerElementReference"
        },
        {
            "file": "src/output/analyzer/analyzerElementReference.js",
            "line": 28,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerElementReference"
        },
        {
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 24,
            "description": "Inheritance property",
            "class": "AnalyzerGroup"
        },
        {
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 29,
            "description": "Constructor property",
            "class": "AnalyzerGroup"
        },
        {
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 34,
            "description": "Get element references",
            "itemtype": "method",
            "name": "getElementReferences",
            "return": {
                "description": "",
                "type": "AnalyzerElementReference[]"
            },
            "class": "AnalyzerGroup"
        },
        {
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 44,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerGroup"
        },
        {
            "file": "src/output/analyzer/analyzerGroup.js",
            "line": 54,
            "description": "Get unique Id",
            "itemtype": "method",
            "name": "getUniqueId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerGroup"
        },
        {
            "file": "src/output/analyzer/analyzerInkRange.js",
            "line": 19,
            "description": "Get first point",
            "itemtype": "method",
            "name": "getFirstPoint",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerInkRange"
        },
        {
            "file": "src/output/analyzer/analyzerInkRange.js",
            "line": 29,
            "description": "Get last point",
            "itemtype": "method",
            "name": "getLastPoint",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerInkRange"
        },
        {
            "file": "src/output/analyzer/analyzerInkRange.js",
            "line": 39,
            "description": "Get stroke",
            "itemtype": "method",
            "name": "getStroke",
            "return": {
                "description": "",
                "type": "Null|*"
            },
            "class": "AnalyzerInkRange"
        },
        {
            "file": "src/output/analyzer/analyzerLine.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "AnalyzerLine"
        },
        {
            "file": "src/output/analyzer/analyzerLine.js",
            "line": 24,
            "description": "Constructor property",
            "class": "AnalyzerLine"
        },
        {
            "file": "src/output/analyzer/analyzerLine.js",
            "line": 29,
            "description": "Get data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "AnalyzerLineData"
            },
            "class": "AnalyzerLine"
        },
        {
            "file": "src/output/analyzer/analyzerLineData.js",
            "line": 18,
            "description": "Get p1",
            "itemtype": "method",
            "name": "getP1",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerLineData"
        },
        {
            "file": "src/output/analyzer/analyzerLineData.js",
            "line": 28,
            "description": "Get p2",
            "itemtype": "method",
            "name": "getP2",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerLineData"
        },
        {
            "file": "src/output/analyzer/analyzerPointData.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "AnalyzerPointData"
        },
        {
            "file": "src/output/analyzer/analyzerPointData.js",
            "line": 21,
            "description": "Constructor property",
            "class": "AnalyzerPointData"
        },
        {
            "file": "src/output/analyzer/analyzerRecognizedStroke.js",
            "line": 19,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerRecognizedStroke"
        },
        {
            "file": "src/output/analyzer/analyzerRecognizedStroke.js",
            "line": 29,
            "description": "Get x",
            "itemtype": "method",
            "name": "getX",
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "AnalyzerRecognizedStroke"
        },
        {
            "file": "src/output/analyzer/analyzerRecognizedStroke.js",
            "line": 39,
            "description": "Get y",
            "itemtype": "method",
            "name": "getY",
            "return": {
                "description": "",
                "type": "Number[]"
            },
            "class": "AnalyzerRecognizedStroke"
        },
        {
            "file": "src/output/analyzer/analyzerResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "AnalyzerResult"
        },
        {
            "file": "src/output/analyzer/analyzerResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "AnalyzerResult"
        },
        {
            "file": "src/output/analyzer/analyzerResult.js",
            "line": 29,
            "description": "Get analyzer document",
            "itemtype": "method",
            "name": "getAnalyzerDocument",
            "return": {
                "description": "",
                "type": "AnalyzerDocument"
            },
            "class": "AnalyzerResult"
        },
        {
            "file": "src/output/analyzer/analyzerStrokeType.js",
            "line": 18,
            "description": "Get ink range",
            "itemtype": "method",
            "name": "getInkRange",
            "return": {
                "description": "",
                "type": "AnalyzerInkRange"
            },
            "class": "AnalyzerStrokeType"
        },
        {
            "file": "src/output/analyzer/analyzerStrokeType.js",
            "line": 28,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerStrokeType"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 31,
            "description": "Inheritance property",
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 36,
            "description": "Constructor property",
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 41,
            "description": "Get data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "AnalyzerTableData"
            },
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 51,
            "description": "Get lines",
            "itemtype": "method",
            "name": "getLines",
            "return": {
                "description": "",
                "type": "AnalyzerLine[]"
            },
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 61,
            "description": "Get cells",
            "itemtype": "method",
            "name": "getCells",
            "return": {
                "description": "",
                "type": "AnalyzerCell[]"
            },
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTable.js",
            "line": 71,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "AnalyzerInkRange[]"
            },
            "class": "AnalyzerTable"
        },
        {
            "file": "src/output/analyzer/analyzerTableData.js",
            "line": 18,
            "description": "Get column count",
            "itemtype": "method",
            "name": "getColumnCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTableData"
        },
        {
            "file": "src/output/analyzer/analyzerTableData.js",
            "line": 28,
            "description": "Get row count",
            "itemtype": "method",
            "name": "getRowCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTableData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 28,
            "description": "Inheritance property",
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 33,
            "description": "Constructor property",
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 38,
            "description": "Get data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "AnalyzerTextLineData"
            },
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 48,
            "description": "Get text document",
            "itemtype": "method",
            "name": "getTextDocument",
            "return": {
                "description": "",
                "type": "TextDocument"
            },
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 58,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "AnalyzerInkRange[]"
            },
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLine.js",
            "line": 68,
            "description": "Get underline list",
            "itemtype": "method",
            "name": "getUnderlineList",
            "return": {
                "description": "",
                "type": "AnalyzerUnderline[]"
            },
            "class": "AnalyzerTextLine"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 24,
            "description": "Get baseline position",
            "itemtype": "method",
            "name": "getBaselinePos",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 34,
            "description": "Get to midline",
            "itemtype": "method",
            "name": "getToMidline",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 44,
            "description": "Get orientation",
            "itemtype": "method",
            "name": "getOrientation",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 54,
            "description": "Get top-left point",
            "itemtype": "method",
            "name": "getTopLeftPoint",
            "return": {
                "description": "",
                "type": "AnalyzerPointData"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 64,
            "description": "Get text height",
            "itemtype": "method",
            "name": "getTextHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 74,
            "description": "Get justification type",
            "itemtype": "method",
            "name": "getJustificationType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 84,
            "description": "Get height",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 94,
            "description": "Get width",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerTextLineData.js",
            "line": 104,
            "description": "Get bounding box",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "AnalyzerTextLineData"
        },
        {
            "file": "src/output/analyzer/analyzerUnderline.js",
            "line": 23,
            "description": "Inheritance property",
            "class": "AnalyzerUnderline"
        },
        {
            "file": "src/output/analyzer/analyzerUnderline.js",
            "line": 28,
            "description": "Constructor property",
            "class": "AnalyzerUnderline"
        },
        {
            "file": "src/output/analyzer/analyzerUnderline.js",
            "line": 33,
            "description": "Get data",
            "itemtype": "method",
            "name": "getData",
            "return": {
                "description": "",
                "type": "AnalyzerUnderlineData"
            },
            "class": "AnalyzerUnderline"
        },
        {
            "file": "src/output/analyzer/analyzerUnderline.js",
            "line": 43,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "AnalyzerInkRange[]"
            },
            "class": "AnalyzerUnderline"
        },
        {
            "file": "src/output/analyzer/analyzerUnderlineData.js",
            "line": 18,
            "description": "Get first character",
            "itemtype": "method",
            "name": "getFirstCharacter",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerUnderlineData"
        },
        {
            "file": "src/output/analyzer/analyzerUnderlineData.js",
            "line": 28,
            "description": "Get last character",
            "itemtype": "method",
            "name": "getLastCharacter",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AnalyzerUnderlineData"
        },
        {
            "file": "src/output/generic/abstractRecoResponseWSMessage.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "AbstractRecoResponseWSMessage"
        },
        {
            "file": "src/output/generic/abstractRecoResponseWSMessage.js",
            "line": 24,
            "description": "Constructor property",
            "class": "AbstractRecoResponseWSMessage"
        },
        {
            "file": "src/output/generic/abstractRecoResponseWSMessage.js",
            "line": 29,
            "description": "Get instance id",
            "itemtype": "method",
            "name": "getInstanceId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractRecoResponseWSMessage"
        },
        {
            "file": "src/output/generic/abstractResult.js",
            "line": 17,
            "description": "Get instance id",
            "itemtype": "method",
            "name": "getInstanceId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractResult"
        },
        {
            "file": "src/output/generic/challengeResponseWSMessage.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "ChallengeResponseWSMessage"
        },
        {
            "file": "src/output/generic/challengeResponseWSMessage.js",
            "line": 24,
            "description": "Constructor property",
            "class": "ChallengeResponseWSMessage"
        },
        {
            "file": "src/output/generic/challengeResponseWSMessage.js",
            "line": 29,
            "description": "Get the challenge",
            "itemtype": "method",
            "name": "getChallenge",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ChallengeResponseWSMessage"
        },
        {
            "file": "src/output/generic/errorResponseWSMessage.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "ErrorResponseWSMessage"
        },
        {
            "file": "src/output/generic/errorResponseWSMessage.js",
            "line": 24,
            "description": "Constructor property",
            "class": "ErrorResponseWSMessage"
        },
        {
            "file": "src/output/generic/errorResponseWSMessage.js",
            "line": 29,
            "description": "Get the error",
            "itemtype": "method",
            "name": "getError",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ErrorResponseWSMessage"
        },
        {
            "file": "src/output/generic/initResponseWSMessage.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "InitResponseWSMessage"
        },
        {
            "file": "src/output/generic/initResponseWSMessage.js",
            "line": 21,
            "description": "Constructor property",
            "class": "InitResponseWSMessage"
        },
        {
            "file": "src/output/math/mathDocument.js",
            "line": 34,
            "description": "Get result elements",
            "itemtype": "method",
            "name": "getResultElements",
            "return": {
                "description": "",
                "type": "MathResultElement[]"
            },
            "class": "MathDocument"
        },
        {
            "file": "src/output/math/mathDocument.js",
            "line": 44,
            "description": "Get scratch-out results",
            "itemtype": "method",
            "name": "getScratchOutResults",
            "return": {
                "description": "",
                "type": "MathScratchOut[]"
            },
            "class": "MathDocument"
        },
        {
            "file": "src/output/math/mathExponentiableNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathExponentiableNonTerminalNode"
        },
        {
            "file": "src/output/math/mathExponentiableNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathExponentiableNonTerminalNode"
        },
        {
            "file": "src/output/math/mathExpressionNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathExpressionNonTerminalNode"
        },
        {
            "file": "src/output/math/mathExpressionNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathExpressionNonTerminalNode"
        },
        {
            "file": "src/output/math/mathFenceRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathFenceRuleNode"
        },
        {
            "file": "src/output/math/mathFenceRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathFenceRuleNode"
        },
        {
            "file": "src/output/math/mathFractionRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathFractionRuleNode"
        },
        {
            "file": "src/output/math/mathFractionRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathFractionRuleNode"
        },
        {
            "file": "src/output/math/mathHorizontalPairRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathHorizontalPairRuleNode"
        },
        {
            "file": "src/output/math/mathHorizontalPairRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathHorizontalPairRuleNode"
        },
        {
            "file": "src/output/math/mathIdentityRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathIdentityRuleNode"
        },
        {
            "file": "src/output/math/mathIdentityRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathIdentityRuleNode"
        },
        {
            "file": "src/output/math/mathInkRange.js",
            "line": 19,
            "description": "Get component",
            "itemtype": "method",
            "name": "getComponent",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathInkRange"
        },
        {
            "file": "src/output/math/mathInkRange.js",
            "line": 29,
            "description": "Get first item",
            "itemtype": "method",
            "name": "getFirstItem",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathInkRange"
        },
        {
            "file": "src/output/math/mathInkRange.js",
            "line": 39,
            "description": "Get last item",
            "itemtype": "method",
            "name": "getLastItem",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathInkRange"
        },
        {
            "file": "src/output/math/mathLaTexResultElement.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MathLaTexResultElement"
        },
        {
            "file": "src/output/math/mathLaTexResultElement.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MathLaTexResultElement"
        },
        {
            "file": "src/output/math/mathLaTexResultElement.js",
            "line": 29,
            "description": "Get value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathLaTexResultElement"
        },
        {
            "file": "src/output/math/mathLeftFenceRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathLeftFenceRuleNode"
        },
        {
            "file": "src/output/math/mathLeftFenceRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathLeftFenceRuleNode"
        },
        {
            "file": "src/output/math/mathMathMLResultElement.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MathMathMLResultElement"
        },
        {
            "file": "src/output/math/mathMathMLResultElement.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MathMathMLResultElement"
        },
        {
            "file": "src/output/math/mathMathMLResultElement.js",
            "line": 29,
            "description": "Get value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathMathMLResultElement"
        },
        {
            "file": "src/output/math/mathNode.js",
            "line": 18,
            "description": "Get name",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathNode"
        },
        {
            "file": "src/output/math/mathNode.js",
            "line": 28,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 101,
            "description": "Inheritance property",
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 106,
            "description": "Constructor property",
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 111,
            "description": "Get candidates",
            "itemtype": "method",
            "name": "getCandidates",
            "return": {
                "description": "",
                "type": "MathNode[]"
            },
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 121,
            "description": "Get selected candidate index",
            "itemtype": "method",
            "name": "getSelectedCandidateIdx",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 131,
            "description": "Get selected candidate",
            "itemtype": "method",
            "name": "getSelectedCandidate",
            "return": {
                "description": "",
                "type": "MathNode"
            },
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathNonTerminalNode.js",
            "line": 141,
            "description": "Get bounding box",
            "itemtype": "method",
            "name": "getBoundingBox",
            "return": {
                "description": "",
                "type": "Rectangle"
            },
            "class": "MathNonTerminalNode"
        },
        {
            "file": "src/output/math/mathOverscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathOverscriptRuleNode"
        },
        {
            "file": "src/output/math/mathOverscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathOverscriptRuleNode"
        },
        {
            "file": "src/output/math/mathPreSuperscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathPreSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathPreSuperscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathPreSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathResponseWSMessage.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MathResponseWSMessage"
        },
        {
            "file": "src/output/math/mathResponseWSMessage.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MathResponseWSMessage"
        },
        {
            "file": "src/output/math/mathResponseWSMessage.js",
            "line": 29,
            "description": "Get math document",
            "itemtype": "method",
            "name": "getMathDocument",
            "return": {
                "description": "",
                "type": "MathDocument"
            },
            "class": "MathResponseWSMessage"
        },
        {
            "file": "src/output/math/mathResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MathResult"
        },
        {
            "file": "src/output/math/mathResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MathResult"
        },
        {
            "file": "src/output/math/mathResult.js",
            "line": 29,
            "description": "Get math document",
            "itemtype": "method",
            "name": "getMathDocument",
            "return": {
                "description": "",
                "type": "MathDocument"
            },
            "class": "MathResult"
        },
        {
            "file": "src/output/math/mathResultElement.js",
            "line": 17,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathResultElement"
        },
        {
            "file": "src/output/math/mathResultElement.js",
            "line": 27,
            "description": "Is LaTeX result",
            "itemtype": "method",
            "name": "isLatex",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathResultElement"
        },
        {
            "file": "src/output/math/mathResultElement.js",
            "line": 37,
            "description": "Is MathML result",
            "itemtype": "method",
            "name": "isMathMl",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathResultElement"
        },
        {
            "file": "src/output/math/mathResultElement.js",
            "line": 47,
            "description": "Is SymbolTree result",
            "itemtype": "method",
            "name": "isSymbolTree",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MathResultElement"
        },
        {
            "file": "src/output/math/mathRuleNode.js",
            "line": 100,
            "description": "Inheritance property",
            "class": "MathRuleNode"
        },
        {
            "file": "src/output/math/mathRuleNode.js",
            "line": 105,
            "description": "Constructor property",
            "class": "MathRuleNode"
        },
        {
            "file": "src/output/math/mathRuleNode.js",
            "line": 110,
            "description": "Get name",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathRuleNode"
        },
        {
            "file": "src/output/math/mathRuleNode.js",
            "line": 120,
            "description": "Get children",
            "itemtype": "method",
            "name": "getChildren",
            "return": {
                "description": "",
                "type": "MathNode[]"
            },
            "class": "MathRuleNode"
        },
        {
            "file": "src/output/math/mathScratchOut.js",
            "line": 24,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "MathInkRange[]"
            },
            "class": "MathScratchOut"
        },
        {
            "file": "src/output/math/mathScratchOut.js",
            "line": 34,
            "description": "Get erased ink ranges",
            "itemtype": "method",
            "name": "getErasedInkRanges",
            "return": {
                "description": "",
                "type": "MathInkRange[]"
            },
            "class": "MathScratchOut"
        },
        {
            "file": "src/output/math/mathSqrtNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSqrtNonTerminalNode"
        },
        {
            "file": "src/output/math/mathSqrtNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSqrtNonTerminalNode"
        },
        {
            "file": "src/output/math/mathSqrtRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSqrtRuleNode"
        },
        {
            "file": "src/output/math/mathSqrtRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSqrtRuleNode"
        },
        {
            "file": "src/output/math/mathSubSuperscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSubSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSubSuperscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSubSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSubscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSubscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSubscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSubscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSuperscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSuperscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSuperscriptRuleNode"
        },
        {
            "file": "src/output/math/mathSymbolTreeResultElement.js",
            "line": 98,
            "description": "Inheritance property",
            "class": "MathSymbolTreeResultElement"
        },
        {
            "file": "src/output/math/mathSymbolTreeResultElement.js",
            "line": 103,
            "description": "Constructor property",
            "class": "MathSymbolTreeResultElement"
        },
        {
            "file": "src/output/math/mathSymbolTreeResultElement.js",
            "line": 108,
            "description": "Get tree root",
            "itemtype": "method",
            "name": "getRoot",
            "return": {
                "description": "",
                "type": "MathNode"
            },
            "class": "MathSymbolTreeResultElement"
        },
        {
            "file": "src/output/math/mathSystemNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathSystemNonTerminalNode"
        },
        {
            "file": "src/output/math/mathSystemNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathSystemNonTerminalNode"
        },
        {
            "file": "src/output/math/mathTermNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathTermNonTerminalNode"
        },
        {
            "file": "src/output/math/mathTermNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathTermNonTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNode.js",
            "line": 27,
            "description": "Inheritance property",
            "class": "MathTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNode.js",
            "line": 32,
            "description": "Constructor property",
            "class": "MathTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNode.js",
            "line": 37,
            "description": "Get candidates",
            "itemtype": "method",
            "name": "getCandidates",
            "return": {
                "description": "",
                "type": "MathTerminalNodeCandidate[]"
            },
            "class": "MathTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNode.js",
            "line": 47,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "MathInkRange[]"
            },
            "class": "MathTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNode.js",
            "line": 57,
            "description": "Get selected candidate",
            "itemtype": "method",
            "name": "getSelectedCandidate",
            "return": {
                "description": "",
                "type": "MathNode"
            },
            "class": "MathTerminalNode"
        },
        {
            "file": "src/output/math/mathTerminalNodeCandidate.js",
            "line": 18,
            "description": "Get label",
            "itemtype": "method",
            "name": "getLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MathTerminalNodeCandidate"
        },
        {
            "file": "src/output/math/mathTerminalNodeCandidate.js",
            "line": 28,
            "description": "Get score",
            "itemtype": "method",
            "name": "getNormalizedRecognitionScore",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MathTerminalNodeCandidate"
        },
        {
            "file": "src/output/math/mathUnderOverscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathUnderOverscriptRuleNode"
        },
        {
            "file": "src/output/math/mathUnderOverscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathUnderOverscriptRuleNode"
        },
        {
            "file": "src/output/math/mathUnderscriptRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathUnderscriptRuleNode"
        },
        {
            "file": "src/output/math/mathUnderscriptRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathUnderscriptRuleNode"
        },
        {
            "file": "src/output/math/mathVectorNonTerminalNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathVectorNonTerminalNode"
        },
        {
            "file": "src/output/math/mathVectorNonTerminalNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathVectorNonTerminalNode"
        },
        {
            "file": "src/output/math/mathVerticalPairRuleNode.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MathVerticalPairRuleNode"
        },
        {
            "file": "src/output/math/mathVerticalPairRuleNode.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MathVerticalPairRuleNode"
        },
        {
            "file": "src/output/music/musicAccidental.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicAccidental"
        },
        {
            "file": "src/output/music/musicAccidental.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicAccidental"
        },
        {
            "file": "src/output/music/musicAccidental.js",
            "line": 29,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicAccidental"
        },
        {
            "file": "src/output/music/musicAnnotation.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicAnnotation"
        },
        {
            "file": "src/output/music/musicAnnotation.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicAnnotation"
        },
        {
            "file": "src/output/music/musicAnnotation.js",
            "line": 29,
            "description": "Get label",
            "itemtype": "method",
            "name": "getLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicAnnotation"
        },
        {
            "file": "src/output/music/musicArpeggiate.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicArpeggiate"
        },
        {
            "file": "src/output/music/musicArpeggiate.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicArpeggiate"
        },
        {
            "file": "src/output/music/musicArpeggiate.js",
            "line": 29,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicArpeggiate"
        },
        {
            "file": "src/output/music/musicBar.js",
            "line": 24,
            "description": "Inheritance property",
            "class": "MusicBar"
        },
        {
            "file": "src/output/music/musicBar.js",
            "line": 29,
            "description": "Constructor property",
            "class": "MusicBar"
        },
        {
            "file": "src/output/music/musicBar.js",
            "line": 34,
            "description": "Get repeat direction",
            "itemtype": "method",
            "name": "getRepeatDirection",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBar"
        },
        {
            "file": "src/output/music/musicBar.js",
            "line": 44,
            "description": "Get style",
            "itemtype": "method",
            "name": "getStyle",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBar"
        },
        {
            "file": "src/output/music/musicBar.js",
            "line": 54,
            "description": "Get decorations",
            "itemtype": "method",
            "name": "getDecorations",
            "return": {
                "description": "",
                "type": "MusicDecoration[]"
            },
            "class": "MusicBar"
        },
        {
            "file": "src/output/music/musicBeam.js",
            "line": 21,
            "description": "Inheritance property",
            "class": "MusicBeam"
        },
        {
            "file": "src/output/music/musicBeam.js",
            "line": 26,
            "description": "Constructor property",
            "class": "MusicBeam"
        },
        {
            "file": "src/output/music/musicBeam.js",
            "line": 31,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicBeam"
        },
        {
            "file": "src/output/music/musicBeam.js",
            "line": 41,
            "description": "Get left count",
            "itemtype": "method",
            "name": "getLeftCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicBeam"
        },
        {
            "file": "src/output/music/musicBeam.js",
            "line": 51,
            "description": "Get right count",
            "itemtype": "method",
            "name": "getRightCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicBeam"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 47,
            "description": "Inheritance property",
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 52,
            "description": "Constructor property",
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 57,
            "description": "Get duration",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 67,
            "description": "Get arpeggiate",
            "itemtype": "method",
            "name": "getArpeggiate",
            "return": {
                "description": "",
                "type": "MusicArpeggiate"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 77,
            "description": "Get start beam",
            "itemtype": "method",
            "name": "getStartBeam",
            "return": {
                "description": "",
                "type": "MusicBeam"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 87,
            "description": "Get stop beam",
            "itemtype": "method",
            "name": "getStopBeam",
            "return": {
                "description": "",
                "type": "MusicBeam"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 97,
            "description": "Get stem",
            "itemtype": "method",
            "name": "getStem",
            "return": {
                "description": "",
                "type": "MusicStem"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 107,
            "description": "Get decorations",
            "itemtype": "method",
            "name": "getDecorations",
            "return": {
                "description": "",
                "type": "MusicDecoration[]"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 117,
            "description": "Get notes",
            "itemtype": "method",
            "name": "getNotes",
            "return": {
                "description": "",
                "type": "MusicNote[]"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 127,
            "description": "Get beam types",
            "itemtype": "method",
            "name": "getBeamTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 137,
            "description": "Get ledger lines",
            "itemtype": "method",
            "name": "getLedgerLines",
            "return": {
                "description": "",
                "type": "MusicLedgerLine[]"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 147,
            "description": "Get start slurs",
            "itemtype": "method",
            "name": "getStartSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicChord.js",
            "line": 157,
            "description": "Get stop slurs",
            "itemtype": "method",
            "name": "getStopSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicChord"
        },
        {
            "file": "src/output/music/musicClef.js",
            "line": 21,
            "description": "Inheritance property",
            "class": "MusicClef"
        },
        {
            "file": "src/output/music/musicClef.js",
            "line": 26,
            "description": "Constructor property",
            "class": "MusicClef"
        },
        {
            "file": "src/output/music/musicClef.js",
            "line": 31,
            "description": "Get line",
            "itemtype": "method",
            "name": "getLine",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicClef"
        },
        {
            "file": "src/output/music/musicClef.js",
            "line": 41,
            "description": "Get octave",
            "itemtype": "method",
            "name": "getOctave",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicClef"
        },
        {
            "file": "src/output/music/musicClef.js",
            "line": 51,
            "description": "Get symbol",
            "itemtype": "method",
            "name": "getSymbol",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicClef"
        },
        {
            "file": "src/output/music/musicDecoration.js",
            "line": 20,
            "description": "Inheritance property",
            "class": "MusicDecoration"
        },
        {
            "file": "src/output/music/musicDecoration.js",
            "line": 25,
            "description": "Constructor property",
            "class": "MusicDecoration"
        },
        {
            "file": "src/output/music/musicDecoration.js",
            "line": 30,
            "description": "Get symbol",
            "itemtype": "method",
            "name": "getSymbol",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicDecoration"
        },
        {
            "file": "src/output/music/musicDecoration.js",
            "line": 40,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicDecoration"
        },
        {
            "file": "src/output/music/musicDocument.js",
            "line": 31,
            "description": "Get result elements",
            "itemtype": "method",
            "name": "getResultElements",
            "return": {
                "description": "",
                "type": "MusicResultElement[]"
            },
            "class": "MusicDocument"
        },
        {
            "file": "src/output/music/musicDocument.js",
            "line": 41,
            "description": "Get scratch-out results",
            "itemtype": "method",
            "name": "getScratchOutResults",
            "return": {
                "description": "",
                "type": "MusicScratchOut[]"
            },
            "class": "MusicDocument"
        },
        {
            "file": "src/output/music/musicDots.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicDots"
        },
        {
            "file": "src/output/music/musicDots.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicDots"
        },
        {
            "file": "src/output/music/musicDots.js",
            "line": 29,
            "description": "Get dots counts",
            "itemtype": "method",
            "name": "getCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicDots"
        },
        {
            "file": "src/output/music/musicElement.js",
            "line": 19,
            "description": "Get element type",
            "itemtype": "method",
            "name": "getElementType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicElement"
        },
        {
            "file": "src/output/music/musicElement.js",
            "line": 29,
            "description": "Get input ranges",
            "itemtype": "method",
            "name": "getInputRanges",
            "return": {
                "description": "",
                "type": "MusicInputRange[]"
            },
            "class": "MusicElement"
        },
        {
            "file": "src/output/music/musicHead.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicHead"
        },
        {
            "file": "src/output/music/musicHead.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicHead"
        },
        {
            "file": "src/output/music/musicHead.js",
            "line": 29,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicHead"
        },
        {
            "file": "src/output/music/musicInputRange.js",
            "line": 19,
            "description": "Get component",
            "itemtype": "method",
            "name": "getComponent",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicInputRange"
        },
        {
            "file": "src/output/music/musicInputRange.js",
            "line": 29,
            "description": "Get first item",
            "itemtype": "method",
            "name": "getFirstItem",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicInputRange"
        },
        {
            "file": "src/output/music/musicInputRange.js",
            "line": 39,
            "description": "Get last item",
            "itemtype": "method",
            "name": "getLastItem",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicInputRange"
        },
        {
            "file": "src/output/music/musicKeySignature.js",
            "line": 23,
            "description": "Inheritance property",
            "class": "MusicKeySignature"
        },
        {
            "file": "src/output/music/musicKeySignature.js",
            "line": 28,
            "description": "Constructor property",
            "class": "MusicKeySignature"
        },
        {
            "file": "src/output/music/musicKeySignature.js",
            "line": 33,
            "description": "Get signature",
            "itemtype": "method",
            "name": "getSignature",
            "return": {
                "description": "",
                "type": "MusicKeySignatureData"
            },
            "class": "MusicKeySignature"
        },
        {
            "file": "src/output/music/musicKeySignature.js",
            "line": 43,
            "description": "Get accidentals",
            "itemtype": "method",
            "name": "getAccidentals",
            "return": {
                "description": "",
                "type": "MusicAccidental[]"
            },
            "class": "MusicKeySignature"
        },
        {
            "file": "src/output/music/musicKeySignatureData.js",
            "line": 18,
            "description": "Get fifths",
            "itemtype": "method",
            "name": "getFifths",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicKeySignatureData"
        },
        {
            "file": "src/output/music/musicKeySignatureData.js",
            "line": 28,
            "description": "Get cancel",
            "itemtype": "method",
            "name": "getCancel",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicKeySignatureData"
        },
        {
            "file": "src/output/music/musicLedgerLine.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "MusicLedgerLine"
        },
        {
            "file": "src/output/music/musicLedgerLine.js",
            "line": 21,
            "description": "Constructor property",
            "class": "MusicLedgerLine"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 53,
            "description": "Inheritance property",
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 58,
            "description": "Constructor property",
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 63,
            "description": "Get accidental",
            "itemtype": "method",
            "name": "getAccidental",
            "return": {
                "description": "",
                "type": "MusicAccidental"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 73,
            "description": "Get dots",
            "itemtype": "method",
            "name": "getDots",
            "return": {
                "description": "",
                "type": "MusicDots"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 83,
            "description": "Get duration",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 93,
            "description": "Get head",
            "itemtype": "method",
            "name": "getHead",
            "return": {
                "description": "",
                "type": "MusicHead"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 103,
            "description": "Get line",
            "itemtype": "method",
            "name": "getLine",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 113,
            "description": "Get pitch",
            "itemtype": "method",
            "name": "getPitch",
            "return": {
                "description": "",
                "type": "MusicPitchData"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 123,
            "description": "Get start beam",
            "itemtype": "method",
            "name": "getStartBeam",
            "return": {
                "description": "",
                "type": "MusicBeam"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 133,
            "description": "Get stop beam",
            "itemtype": "method",
            "name": "getStopBeam",
            "return": {
                "description": "",
                "type": "MusicBeam"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 143,
            "description": "Get stem",
            "itemtype": "method",
            "name": "getStem",
            "return": {
                "description": "",
                "type": "MusicStem"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 153,
            "description": "Get start tie",
            "itemtype": "method",
            "name": "getStartTie",
            "return": {
                "description": "",
                "type": "MusicTie"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 163,
            "description": "Get stop tie",
            "itemtype": "method",
            "name": "getStopTie",
            "return": {
                "description": "",
                "type": "MusicTie"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 173,
            "description": "Get start tuplet",
            "itemtype": "method",
            "name": "getStartTuplet",
            "return": {
                "description": "",
                "type": "MusicTuplet"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 183,
            "description": "Get stop tuplet",
            "itemtype": "method",
            "name": "getStopTuplet",
            "return": {
                "description": "",
                "type": "MusicTuplet"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 193,
            "description": "Get time modification",
            "itemtype": "method",
            "name": "getTimeModification",
            "return": {
                "description": "",
                "type": "MusicTimeModificationData"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 203,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 213,
            "description": "Get decorations",
            "itemtype": "method",
            "name": "getDecorations",
            "return": {
                "description": "",
                "type": "MusicDecoration[]"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 223,
            "description": "Get beam types",
            "itemtype": "method",
            "name": "getBeamTypes",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 233,
            "description": "Get ledger lines",
            "itemtype": "method",
            "name": "getLedgerLines",
            "return": {
                "description": "",
                "type": "MusicLedgerLine[]"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 243,
            "description": "Get start slurs",
            "itemtype": "method",
            "name": "getStartSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicNote.js",
            "line": 253,
            "description": "Get stop slurs",
            "itemtype": "method",
            "name": "getStopSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicNote"
        },
        {
            "file": "src/output/music/musicPart.js",
            "line": 83,
            "description": "Get elements",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "",
                "type": "AbstractMusicElement[]"
            },
            "class": "MusicPart"
        },
        {
            "file": "src/output/music/musicPitchData.js",
            "line": 19,
            "description": "Get alteration",
            "itemtype": "method",
            "name": "getAlteration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicPitchData"
        },
        {
            "file": "src/output/music/musicPitchData.js",
            "line": 29,
            "description": "Get octave",
            "itemtype": "method",
            "name": "getOctave",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicPitchData"
        },
        {
            "file": "src/output/music/musicPitchData.js",
            "line": 39,
            "description": "Get step",
            "itemtype": "method",
            "name": "getStep",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicPitchData"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 36,
            "description": "Inheritance property",
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 41,
            "description": "Constructor property",
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 46,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 56,
            "description": "Get dots",
            "itemtype": "method",
            "name": "getDots",
            "return": {
                "description": "",
                "type": "MusicDots"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 66,
            "description": "Get start tuplet",
            "itemtype": "method",
            "name": "getStartTuplet",
            "return": {
                "description": "",
                "type": "MusicTuplet"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 76,
            "description": "Get stop tuplet",
            "itemtype": "method",
            "name": "getStopTuplet",
            "return": {
                "description": "",
                "type": "MusicTuplet"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 86,
            "description": "Get time modification",
            "itemtype": "method",
            "name": "getTimeModification",
            "return": {
                "description": "",
                "type": "MusicTimeModificationData"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 96,
            "description": "Get duration",
            "itemtype": "method",
            "name": "getDuration",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 106,
            "description": "Get decorations",
            "itemtype": "method",
            "name": "getDecorations",
            "return": {
                "description": "",
                "type": "MusicDecoration[]"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 116,
            "description": "Get start slurs",
            "itemtype": "method",
            "name": "getStartSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicRest.js",
            "line": 126,
            "description": "Get stop slurs",
            "itemtype": "method",
            "name": "getStopSlurs",
            "return": {
                "description": "",
                "type": "MusicSlur[]"
            },
            "class": "MusicRest"
        },
        {
            "file": "src/output/music/musicResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicResult"
        },
        {
            "file": "src/output/music/musicResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicResult"
        },
        {
            "file": "src/output/music/musicResult.js",
            "line": 29,
            "description": "Get music document",
            "itemtype": "method",
            "name": "getMusicDocument",
            "return": {
                "description": "",
                "type": "MusicDocument"
            },
            "class": "MusicResult"
        },
        {
            "file": "src/output/music/musicResultElement.js",
            "line": 17,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicResultElement"
        },
        {
            "file": "src/output/music/musicResultElement.js",
            "line": 27,
            "description": "Is MusicXML",
            "itemtype": "method",
            "name": "isMusicXML",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MusicResultElement"
        },
        {
            "file": "src/output/music/musicResultElement.js",
            "line": 37,
            "description": "Is ScoreTree",
            "itemtype": "method",
            "name": "isScoreTree",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "MusicResultElement"
        },
        {
            "file": "src/output/music/musicScore.js",
            "line": 20,
            "description": "Get parts",
            "itemtype": "method",
            "name": "getParts",
            "return": {
                "description": "",
                "type": "MusicPart[]"
            },
            "class": "MusicScore"
        },
        {
            "file": "src/output/music/musicScoreTreeResultElement.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicScoreTreeResultElement"
        },
        {
            "file": "src/output/music/musicScoreTreeResultElement.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicScoreTreeResultElement"
        },
        {
            "file": "src/output/music/musicScoreTreeResultElement.js",
            "line": 29,
            "description": "Get score",
            "itemtype": "method",
            "name": "getScore",
            "return": {
                "description": "",
                "type": "MusicScore"
            },
            "class": "MusicScoreTreeResultElement"
        },
        {
            "file": "src/output/music/musicScratchOut.js",
            "line": 24,
            "description": "Get input ranges",
            "itemtype": "method",
            "name": "getInputRanges",
            "return": {
                "description": "",
                "type": "MusicInputRange[]"
            },
            "class": "MusicScratchOut"
        },
        {
            "file": "src/output/music/musicScratchOut.js",
            "line": 34,
            "description": "Get erased input ranges",
            "itemtype": "method",
            "name": "getErasedInputRanges",
            "return": {
                "description": "",
                "type": "MusicInputRange[]"
            },
            "class": "MusicScratchOut"
        },
        {
            "file": "src/output/music/musicSlur.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicSlur"
        },
        {
            "file": "src/output/music/musicSlur.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicSlur"
        },
        {
            "file": "src/output/music/musicSlur.js",
            "line": 29,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicSlur"
        },
        {
            "file": "src/output/music/musicStem.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicStem"
        },
        {
            "file": "src/output/music/musicStem.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicStem"
        },
        {
            "file": "src/output/music/musicStem.js",
            "line": 29,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicStem"
        },
        {
            "file": "src/output/music/musicTie.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicTie"
        },
        {
            "file": "src/output/music/musicTie.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicTie"
        },
        {
            "file": "src/output/music/musicTie.js",
            "line": 29,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTie"
        },
        {
            "file": "src/output/music/musicTimeModificationData.js",
            "line": 20,
            "description": "Get actual",
            "itemtype": "method",
            "name": "getActual",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicTimeModificationData"
        },
        {
            "file": "src/output/music/musicTimeModificationData.js",
            "line": 30,
            "description": "Get dots",
            "itemtype": "method",
            "name": "getDots",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicTimeModificationData"
        },
        {
            "file": "src/output/music/musicTimeModificationData.js",
            "line": 40,
            "description": "Get normal",
            "itemtype": "method",
            "name": "getNormal",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "MusicTimeModificationData"
        },
        {
            "file": "src/output/music/musicTimeModificationData.js",
            "line": 50,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTimeModificationData"
        },
        {
            "file": "src/output/music/musicTimeSignature.js",
            "line": 21,
            "description": "Inheritance property",
            "class": "MusicTimeSignature"
        },
        {
            "file": "src/output/music/musicTimeSignature.js",
            "line": 26,
            "description": "Constructor property",
            "class": "MusicTimeSignature"
        },
        {
            "file": "src/output/music/musicTimeSignature.js",
            "line": 31,
            "description": "Get top",
            "itemtype": "method",
            "name": "getTop",
            "return": {
                "description": "",
                "type": "MusicAnnotation"
            },
            "class": "MusicTimeSignature"
        },
        {
            "file": "src/output/music/musicTimeSignature.js",
            "line": 41,
            "description": "Get bottom",
            "itemtype": "method",
            "name": "getBottom",
            "return": {
                "description": "",
                "type": "MusicAnnotation"
            },
            "class": "MusicTimeSignature"
        },
        {
            "file": "src/output/music/musicTimeSignature.js",
            "line": 51,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTimeSignature"
        },
        {
            "file": "src/output/music/musicTuplet.js",
            "line": 24,
            "description": "Inheritance property",
            "class": "MusicTuplet"
        },
        {
            "file": "src/output/music/musicTuplet.js",
            "line": 29,
            "description": "Constructor property",
            "class": "MusicTuplet"
        },
        {
            "file": "src/output/music/musicTuplet.js",
            "line": 34,
            "description": "Get placement",
            "itemtype": "method",
            "name": "getPlacement",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTuplet"
        },
        {
            "file": "src/output/music/musicTuplet.js",
            "line": 44,
            "description": "Get number",
            "itemtype": "method",
            "name": "getNumber",
            "return": {
                "description": "",
                "type": "MusicAnnotation"
            },
            "class": "MusicTuplet"
        },
        {
            "file": "src/output/music/musicTuplet.js",
            "line": 54,
            "description": "Get brackets",
            "itemtype": "method",
            "name": "getBrackets",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "MusicTuplet"
        },
        {
            "file": "src/output/music/musicTupletBracket.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicTupletBracket"
        },
        {
            "file": "src/output/music/musicTupletBracket.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicTupletBracket"
        },
        {
            "file": "src/output/music/musicTupletBracket.js",
            "line": 29,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicTupletBracket"
        },
        {
            "file": "src/output/music/musicXMLResultElement.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "MusicXMLResultElement"
        },
        {
            "file": "src/output/music/musicXMLResultElement.js",
            "line": 24,
            "description": "Constructor property",
            "class": "MusicXMLResultElement"
        },
        {
            "file": "src/output/music/musicXMLResultElement.js",
            "line": 29,
            "description": "Get value",
            "itemtype": "method",
            "name": "getValue",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "MusicXMLResultElement"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 22,
            "description": "Inheritance property",
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 27,
            "description": "Constructor property",
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 32,
            "description": "Has begin decoration",
            "itemtype": "method",
            "name": "hasBeginDecoration",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 42,
            "description": "Has end decoration",
            "itemtype": "method",
            "name": "hasEndDecoration",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 52,
            "description": "Get begin decoration",
            "itemtype": "method",
            "name": "getBeginDecoration",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 62,
            "description": "Get end decoration",
            "itemtype": "method",
            "name": "getEndDecoration",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 72,
            "description": "Get begin tangent angle",
            "itemtype": "method",
            "name": "getBeginTangentAngle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractDecoratedShape.js",
            "line": 82,
            "description": "Get end tangent angle",
            "itemtype": "method",
            "name": "getEndTangentAngle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AbstractDecoratedShape"
        },
        {
            "file": "src/output/shape/abstractShapePrimitive.js",
            "line": 17,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "AbstractShapePrimitive"
        },
        {
            "file": "src/output/shape/abstractShapePrimitive.js",
            "line": 27,
            "description": "Is line",
            "itemtype": "method",
            "name": "isLine",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractShapePrimitive"
        },
        {
            "file": "src/output/shape/abstractShapePrimitive.js",
            "line": 37,
            "description": "Is ellipse",
            "itemtype": "method",
            "name": "isEllipse",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "AbstractShapePrimitive"
        },
        {
            "file": "src/output/shape/shapeCandidate.js",
            "line": 17,
            "description": "Get type",
            "itemtype": "method",
            "name": "getType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ShapeCandidate"
        },
        {
            "file": "src/output/shape/shapeCandidate.js",
            "line": 27,
            "description": "Is erased",
            "itemtype": "method",
            "name": "isErased",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeCandidate"
        },
        {
            "file": "src/output/shape/shapeCandidate.js",
            "line": 37,
            "description": "Is scratch-out",
            "itemtype": "method",
            "name": "isScratchOut",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeCandidate"
        },
        {
            "file": "src/output/shape/shapeCandidate.js",
            "line": 47,
            "description": "Is not recognized",
            "itemtype": "method",
            "name": "isNotRecognized",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeCandidate"
        },
        {
            "file": "src/output/shape/shapeCandidate.js",
            "line": 57,
            "description": "Is recognized",
            "itemtype": "method",
            "name": "isRecognized",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "ShapeCandidate"
        },
        {
            "file": "src/output/shape/shapeDocument.js",
            "line": 20,
            "description": "Get segments",
            "itemtype": "method",
            "name": "getSegments",
            "return": {
                "description": "",
                "type": "ShapeSegment[]"
            },
            "class": "ShapeDocument"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 24,
            "description": "Inheritance property",
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 29,
            "description": "Constructor property",
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 34,
            "description": "Get center",
            "itemtype": "method",
            "name": "getCenter",
            "return": {
                "description": "",
                "type": "ShapePoint"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 44,
            "description": "Get min radius",
            "itemtype": "method",
            "name": "getMinRadius",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 54,
            "description": "Get max radius",
            "itemtype": "method",
            "name": "getMaxRadius",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 64,
            "description": "Get orientation",
            "itemtype": "method",
            "name": "getOrientation",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 74,
            "description": "Get start angle",
            "itemtype": "method",
            "name": "getStartAngle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeEllipse.js",
            "line": 84,
            "description": "Get sweep angle",
            "itemtype": "method",
            "name": "getSweepAngle",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeEllipse"
        },
        {
            "file": "src/output/shape/shapeErased.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "ShapeErased"
        },
        {
            "file": "src/output/shape/shapeErased.js",
            "line": 21,
            "description": "Constructor property",
            "class": "ShapeErased"
        },
        {
            "file": "src/output/shape/shapeInkRange.js",
            "line": 20,
            "description": "Get first stroke",
            "itemtype": "method",
            "name": "getFirstStroke",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeInkRange"
        },
        {
            "file": "src/output/shape/shapeInkRange.js",
            "line": 30,
            "description": "Get last stroke",
            "itemtype": "method",
            "name": "getLastStroke",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeInkRange"
        },
        {
            "file": "src/output/shape/shapeInkRange.js",
            "line": 40,
            "description": "Get first point",
            "itemtype": "method",
            "name": "getFirstPoint",
            "return": {
                "description": "",
                "type": "ShapePoint"
            },
            "class": "ShapeInkRange"
        },
        {
            "file": "src/output/shape/shapeInkRange.js",
            "line": 50,
            "description": "Get last point",
            "itemtype": "method",
            "name": "getLastPoint",
            "return": {
                "description": "",
                "type": "ShapePoint"
            },
            "class": "ShapeInkRange"
        },
        {
            "file": "src/output/shape/shapeLine.js",
            "line": 20,
            "description": "Inheritance property",
            "class": "ShapeLine"
        },
        {
            "file": "src/output/shape/shapeLine.js",
            "line": 25,
            "description": "Constructor property",
            "class": "ShapeLine"
        },
        {
            "file": "src/output/shape/shapeLine.js",
            "line": 30,
            "description": "Get first point",
            "itemtype": "method",
            "name": "getFirstPoint",
            "return": {
                "description": "",
                "type": "ShapePoint"
            },
            "class": "ShapeLine"
        },
        {
            "file": "src/output/shape/shapeLine.js",
            "line": 40,
            "description": "Get last point",
            "itemtype": "method",
            "name": "getLastPoint",
            "return": {
                "description": "",
                "type": "ShapePoint"
            },
            "class": "ShapeLine"
        },
        {
            "file": "src/output/shape/shapeNotRecognized.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "ShapeNotRecognized"
        },
        {
            "file": "src/output/shape/shapeNotRecognized.js",
            "line": 21,
            "description": "Constructor property",
            "class": "ShapeNotRecognized"
        },
        {
            "file": "src/output/shape/shapePoint.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "ShapePoint"
        },
        {
            "file": "src/output/shape/shapePoint.js",
            "line": 21,
            "description": "Constructor property",
            "class": "ShapePoint"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 34,
            "description": "Inheritance property",
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 39,
            "description": "Constructor property",
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 44,
            "description": "Get primitives",
            "itemtype": "method",
            "name": "getPrimitives",
            "return": {
                "description": "",
                "type": "AbstractDecoratedShape[]"
            },
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 54,
            "description": "Get label",
            "itemtype": "method",
            "name": "getLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 64,
            "description": "Get normalized score",
            "itemtype": "method",
            "name": "getNormalizedRecognitionScore",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeRecognized.js",
            "line": 74,
            "description": "Get resemblance score",
            "itemtype": "method",
            "name": "getResemblanceScore",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeRecognized"
        },
        {
            "file": "src/output/shape/shapeResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "ShapeResult"
        },
        {
            "file": "src/output/shape/shapeResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "ShapeResult"
        },
        {
            "file": "src/output/shape/shapeResult.js",
            "line": 29,
            "description": "Get shape document",
            "itemtype": "method",
            "name": "getShapeDocument",
            "return": {
                "description": "",
                "type": "ShapeDocument"
            },
            "class": "ShapeResult"
        },
        {
            "file": "src/output/shape/shapeScratchOut.js",
            "line": 22,
            "description": "Inheritance property",
            "class": "ShapeScratchOut"
        },
        {
            "file": "src/output/shape/shapeScratchOut.js",
            "line": 27,
            "description": "Constructor property",
            "class": "ShapeScratchOut"
        },
        {
            "file": "src/output/shape/shapeScratchOut.js",
            "line": 32,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "ShapeInkRange[]"
            },
            "class": "ShapeScratchOut"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 40,
            "description": "Get element type",
            "itemtype": "method",
            "name": "getElementType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 50,
            "description": "Get unique id",
            "itemtype": "method",
            "name": "getUniqueId",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 60,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "ShapeInkRange[]"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 70,
            "description": "Get selected candidate index",
            "itemtype": "method",
            "name": "getSelectedCandidateIndex",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 80,
            "description": "Get candidates",
            "itemtype": "method",
            "name": "getCandidates",
            "return": {
                "description": "",
                "type": "ShapeCandidate[]"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/shape/shapeSegment.js",
            "line": 90,
            "description": "Get selected candidate",
            "itemtype": "method",
            "name": "getSelectedCandidate",
            "return": {
                "description": "",
                "type": "ShapeCandidate"
            },
            "class": "ShapeSegment"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 27,
            "description": "Get label",
            "itemtype": "method",
            "name": "getLabel",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 37,
            "description": "Get normalized score",
            "itemtype": "method",
            "name": "getNormalizedScore",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 47,
            "description": "Get resemblance score",
            "itemtype": "method",
            "name": "getResemblanceScore",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 57,
            "description": "Get spelling distortion ratio",
            "itemtype": "method",
            "name": "getSpellingDistortionRatio",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 67,
            "description": "Get children",
            "itemtype": "method",
            "name": "getChildren",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textCandidate.js",
            "line": 77,
            "description": "Get flags",
            "itemtype": "method",
            "name": "getFlags",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextCandidate"
        },
        {
            "file": "src/output/text/textDocument.js",
            "line": 29,
            "description": "Get tag items",
            "itemtype": "method",
            "name": "getTagItems",
            "return": {
                "description": "",
                "type": "TextTagItem[]"
            },
            "class": "TextDocument"
        },
        {
            "file": "src/output/text/textDocument.js",
            "line": 39,
            "description": "Get word candidates",
            "itemtype": "method",
            "name": "getWordCandidates",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextDocument"
        },
        {
            "file": "src/output/text/textDocument.js",
            "line": 49,
            "description": "Get char candidates",
            "itemtype": "method",
            "name": "getCharCandidates",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "TextDocument"
        },
        {
            "file": "src/output/text/textDocument.js",
            "line": 59,
            "description": "Get text segment result",
            "itemtype": "method",
            "name": "getTextSegmentResult",
            "return": {
                "description": "",
                "type": "TextSegmentResult"
            },
            "class": "TextDocument"
        },
        {
            "file": "src/output/text/textResponseWSMessage.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "TextResponseWSMessage"
        },
        {
            "file": "src/output/text/textResponseWSMessage.js",
            "line": 24,
            "description": "Constructor property",
            "class": "TextResponseWSMessage"
        },
        {
            "file": "src/output/text/textResponseWSMessage.js",
            "line": 29,
            "description": "Get text document",
            "itemtype": "method",
            "name": "getTextDocument",
            "return": {
                "description": "",
                "type": "TextDocument"
            },
            "class": "TextResponseWSMessage"
        },
        {
            "file": "src/output/text/textResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "TextResult"
        },
        {
            "file": "src/output/text/textResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "TextResult"
        },
        {
            "file": "src/output/text/textResult.js",
            "line": 29,
            "description": "Get text document",
            "itemtype": "method",
            "name": "getTextDocument",
            "return": {
                "description": "",
                "type": "TextDocument"
            },
            "class": "TextResult"
        },
        {
            "file": "src/output/text/textSegment.js",
            "line": 21,
            "description": "Get candidates",
            "itemtype": "method",
            "name": "getCandidates",
            "return": {
                "description": "",
                "type": "TextCandidate[]"
            },
            "class": "TextSegment"
        },
        {
            "file": "src/output/text/textSegment.js",
            "line": 31,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextSegment"
        },
        {
            "file": "src/output/text/textSegmentResult.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "TextSegmentResult"
        },
        {
            "file": "src/output/text/textSegmentResult.js",
            "line": 24,
            "description": "Constructor property",
            "class": "TextSegmentResult"
        },
        {
            "file": "src/output/text/textSegmentResult.js",
            "line": 29,
            "description": "Get selected candidate index",
            "itemtype": "method",
            "name": "getSelectedCandidateIdx",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "TextSegmentResult"
        },
        {
            "file": "src/output/text/textSegmentResult.js",
            "line": 39,
            "description": "Get selected candidate",
            "itemtype": "method",
            "name": "getSelectedCandidate",
            "return": {
                "description": "",
                "type": "TextCandidate"
            },
            "class": "TextSegmentResult"
        },
        {
            "file": "src/output/text/textTagItem.js",
            "line": 18,
            "description": "Get tag type",
            "itemtype": "method",
            "name": "getTagType",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextTagItem"
        },
        {
            "file": "src/output/text/textTagItem.js",
            "line": 28,
            "description": "Get ink ranges",
            "itemtype": "method",
            "name": "getInkRanges",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "TextTagItem"
        },
        {
            "file": "src/recognition/abstractRecognizer.js",
            "line": 19,
            "description": "Get the recognition languages available for an application and a specific inputMode",
            "itemtype": "method",
            "name": "getAvailableLanguageList",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "inputMode",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractRecognizer"
        },
        {
            "file": "src/recognition/abstractRecognizer.js",
            "line": 42,
            "description": "Compute HMAC signature for server authentication",
            "itemtype": "method",
            "name": "computeHmac",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "AbstractRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 16,
            "description": "Inheritance property",
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 21,
            "description": "Constructor property",
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 58,
            "description": "Get the current state of the connection",
            "itemtype": "method",
            "name": "getState",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 74,
            "description": "Close the socket",
            "itemtype": "method",
            "name": "close",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 90,
            "description": "Send a message",
            "itemtype": "method",
            "name": "sendMessage",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "AbstractWSMessage"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 107,
            "description": "Initialize the WebSocket",
            "itemtype": "method",
            "name": "initWSRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 120,
            "description": "Authenticate the WebSocket client end with a handshake of HMAC signature",
            "itemtype": "method",
            "name": "takeUpHmacChallenge",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "challenge",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/abstractWSRecognizer.js",
            "line": 137,
            "description": "Reset the WebSocket recognition session",
            "itemtype": "method",
            "name": "resetWSRecognition",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AbstractWSRecognizer"
        },
        {
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "AnalyzerRecognizer"
        },
        {
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "AnalyzerRecognizer"
        },
        {
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 27,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "AnalyzerParameter"
            },
            "class": "AnalyzerRecognizer"
        },
        {
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 37,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "AnalyzerParameter"
                }
            ],
            "class": "AnalyzerRecognizer"
        },
        {
            "file": "src/recognition/analyzerRecognizer.js",
            "line": 47,
            "description": "Do analyzer recognition",
            "itemtype": "method",
            "name": "doSimpleRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "AnalyzerParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "AnalyzerRecognizer"
        },
        {
            "file": "src/recognition/mathRecognizer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MathRecognizer"
        },
        {
            "file": "src/recognition/mathRecognizer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MathRecognizer"
        },
        {
            "file": "src/recognition/mathRecognizer.js",
            "line": 27,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "MathParameter"
            },
            "class": "MathRecognizer"
        },
        {
            "file": "src/recognition/mathRecognizer.js",
            "line": 37,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter"
                }
            ],
            "class": "MathRecognizer"
        },
        {
            "file": "src/recognition/mathRecognizer.js",
            "line": 47,
            "description": "Do math recognition",
            "itemtype": "method",
            "name": "doSimpleRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "MathRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 59,
            "description": "Inheritance property",
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 64,
            "description": "Constructor property",
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 69,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "MathParameter"
            },
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 79,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter"
                }
            ],
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 89,
            "description": "Start the WebSocket session",
            "itemtype": "method",
            "name": "startWSRecognition",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 108,
            "description": "Continue the recognition",
            "itemtype": "method",
            "name": "continueWSRecognition",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/mathWSRecognizer.js",
            "line": 123,
            "description": "Do math WebSocket recognition",
            "itemtype": "method",
            "name": "doWSRecognition",
            "params": [
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "MathWSRecognizer"
        },
        {
            "file": "src/recognition/musicRecognizer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MusicRecognizer"
        },
        {
            "file": "src/recognition/musicRecognizer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MusicRecognizer"
        },
        {
            "file": "src/recognition/musicRecognizer.js",
            "line": 27,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "MusicParameter"
            },
            "class": "MusicRecognizer"
        },
        {
            "file": "src/recognition/musicRecognizer.js",
            "line": 37,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MusicParameter"
                }
            ],
            "class": "MusicRecognizer"
        },
        {
            "file": "src/recognition/musicRecognizer.js",
            "line": 47,
            "description": "Do music recognition",
            "itemtype": "method",
            "name": "doSimpleRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MusicParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "MusicRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 27,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "ShapeParameter"
            },
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 37,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "ShapeParameter"
                }
            ],
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 47,
            "description": "Do shape recognition",
            "itemtype": "method",
            "name": "doSimpleRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "ShapeParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/shapeRecognizer.js",
            "line": 86,
            "description": "Clear shape recognition session",
            "itemtype": "method",
            "name": "clearShapeRecognitionSession",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ShapeRecognizer"
        },
        {
            "file": "src/recognition/textRecognizer.js",
            "line": 19,
            "description": "Inheritance property",
            "class": "TextRecognizer"
        },
        {
            "file": "src/recognition/textRecognizer.js",
            "line": 24,
            "description": "Constructor property",
            "class": "TextRecognizer"
        },
        {
            "file": "src/recognition/textRecognizer.js",
            "line": 29,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "TextParameter"
            },
            "class": "TextRecognizer"
        },
        {
            "file": "src/recognition/textRecognizer.js",
            "line": 39,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                }
            ],
            "class": "TextRecognizer"
        },
        {
            "file": "src/recognition/textRecognizer.js",
            "line": 49,
            "description": "Do text recognition",
            "itemtype": "method",
            "name": "doSimpleRecognition",
            "params": [
                {
                    "name": "applicationKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                },
                {
                    "name": "hmacKey",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "TextRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 61,
            "description": "Inheritance property",
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 66,
            "description": "Constructor property",
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 71,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "TextParameter"
            },
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 81,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter"
                }
            ],
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 91,
            "description": "Start the WebSocket session",
            "itemtype": "method",
            "name": "startWSRecognition",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "TextParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 110,
            "description": "Continue the recognition",
            "itemtype": "method",
            "name": "continueWSRecognition",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                },
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/recognition/textWSRecognizer.js",
            "line": 125,
            "description": "Do text WebSocket recognition",
            "itemtype": "method",
            "name": "doWSRecognition",
            "params": [
                {
                    "name": "instanceId",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "MathParameter",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "TextWSRecognizer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 16,
            "description": "Get parameters",
            "itemtype": "method",
            "name": "getParameters",
            "return": {
                "description": "",
                "type": "RenderingParameters"
            },
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 26,
            "description": "Set parameters",
            "itemtype": "method",
            "name": "setParameters",
            "params": [
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 36,
            "description": "Draw ink strokes on HTML5 canvas.",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 49,
            "description": "Draw input components",
            "itemtype": "method",
            "name": "drawComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 66,
            "description": "Record the beginning of drawing",
            "itemtype": "method",
            "name": "drawStart",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 91,
            "description": "Record the drawing",
            "itemtype": "method",
            "name": "drawContinue",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 131,
            "description": "Stop record of drawing",
            "itemtype": "method",
            "name": "drawEnd",
            "params": [
                {
                    "name": "x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 165,
            "description": "Clear the context's canvas content to erase drawing strokes",
            "itemtype": "method",
            "name": "clear",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 175,
            "description": "Draw guidelines on the HTML5 canvas",
            "itemtype": "method",
            "name": "drawGuidelines",
            "params": [
                {
                    "name": "horizontalSpacing",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "verticalSpacing",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 221,
            "description": "Trace line on context",
            "itemtype": "method",
            "name": "drawLineByCoordinates",
            "params": [
                {
                    "name": "lX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "lY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cX",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "cY",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 259,
            "description": "Draw a line on context",
            "itemtype": "method",
            "name": "drawLineByPoints",
            "params": [
                {
                    "name": "firstPoint",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "lastPoint",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 272,
            "description": "Draw a rectangle on context",
            "itemtype": "method",
            "name": "drawRectangle",
            "params": [
                {
                    "name": "rectangle",
                    "description": "",
                    "type": "Rectangle"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 303,
            "description": "Draw strokes on context",
            "itemtype": "method",
            "name": "drawStrokes",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 317,
            "description": "Draw a stroke on context",
            "itemtype": "method",
            "name": "drawStroke",
            "params": [
                {
                    "name": "stroke",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 354,
            "description": "Draw point on context",
            "itemtype": "method",
            "name": "drawPoint",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 391,
            "description": "Draw an arrow head on context",
            "itemtype": "method",
            "name": "drawArrowHead",
            "params": [
                {
                    "name": "headPoint",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 433,
            "description": "Get Strokes from inkRange",
            "itemtype": "method",
            "name": "extractStroke",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "inkRange",
                    "description": "",
                    "type": "Object"
                }
            ],
            "result": "{Stroke[]} List of strokes from inkRange",
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 464,
            "description": "Draw a quadratic stroke on context",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawQuadratricStart",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 505,
            "description": "Continue to draw a quadratic stroke on context",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawQuadratricContinue",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p3",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 546,
            "description": "Stop to draw a quadratic stroke",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawQuadratricEnd",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 586,
            "description": "Render the first stroke segment.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "strokeFirstSegment",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 615,
            "description": "Render a stroke segment",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "strokeSegment",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p3",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 644,
            "description": "Render the last stroke segment",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "strokeLastSegment",
            "params": [
                {
                    "name": "p1",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "p2",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 672,
            "description": "Clamp an angle into the range [-PI, +PI]",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "phi",
            "params": [
                {
                    "name": "angle",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 688,
            "description": "Compute all necessary point parameters to draw quadratics",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computePoint",
            "params": [
                {
                    "name": "previous",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "point",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "isFirst",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "isLast",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "pressureType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "penWidth",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 736,
            "description": "Compute distance and unit vector from the previous point.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computeDistance",
            "params": [
                {
                    "name": "previous",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "point",
                    "description": "",
                    "type": "QuadraticPoint"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 756,
            "description": "Compute simulated pressure of given point.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computePressure",
            "params": [
                {
                    "name": "point",
                    "description": "",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "distance",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 782,
            "description": "Compute control points of the first point.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computeFirstControls",
            "params": [
                {
                    "name": "first",
                    "description": "First point of the list to be computed",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "next",
                    "description": "Next point",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "penWidth",
                    "description": "Pen width",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 802,
            "description": "Compute control points between two points.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computeControls",
            "params": [
                {
                    "name": "point",
                    "description": "Point to be computed",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "next",
                    "description": "Next point",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "penWidth",
                    "description": "Pen width",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/abstractRenderer.js",
            "line": 834,
            "description": "Compute control points of the last point.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "computeLastControls",
            "params": [
                {
                    "name": "last",
                    "description": "Last point to be computed",
                    "type": "QuadraticPoint"
                },
                {
                    "name": "penWidth",
                    "description": "Pen width",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 20,
            "description": "Constructor property",
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 25,
            "description": "Draw shape strokes on HTML5 canvas",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "AnalyzerDocument"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 41,
            "description": "Draw table",
            "itemtype": "method",
            "name": "drawTables",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "tables",
                    "description": "",
                    "type": "AnalyzerTable[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 67,
            "description": "Draw the text line",
            "itemtype": "method",
            "name": "drawTextLines",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "textLines",
                    "description": "",
                    "type": "AnalyzerTextLine[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 101,
            "description": "Draw text on analyser",
            "itemtype": "method",
            "name": "drawText",
            "params": [
                {
                    "name": "boundingBox",
                    "description": "",
                    "type": "Rectangle"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "justificationType",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "textHeight",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "baseline",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 139,
            "description": "Draw Underline",
            "itemtype": "method",
            "name": "drawUnderline",
            "params": [
                {
                    "name": "boundingBox",
                    "description": "",
                    "type": "Rectangle"
                },
                {
                    "name": "underline",
                    "description": "",
                    "type": "AnalyzerUnderline"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "textHeight",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 169,
            "description": "Draw Groups",
            "itemtype": "method",
            "name": "drawGroups",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "groups",
                    "description": "",
                    "type": "AnalyzerGroup[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 182,
            "description": "Draw a line",
            "itemtype": "method",
            "name": "drawLine",
            "params": [
                {
                    "name": "line",
                    "description": "",
                    "type": "AnalyzerLine"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 196,
            "description": "Draw a cell",
            "itemtype": "method",
            "name": "drawCell",
            "params": [
                {
                    "name": "cell",
                    "description": "",
                    "type": "AnalyzerCell"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 210,
            "description": "Draw the shapes",
            "itemtype": "method",
            "name": "drawShapes",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "shapes",
                    "description": "",
                    "type": "ShapeSegment[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 237,
            "description": "This method allow you to draw recognized shape",
            "itemtype": "method",
            "name": "drawShapeRecognized",
            "params": [
                {
                    "name": "shapeRecognized",
                    "description": "",
                    "type": "ShapeRecognized"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 269,
            "description": "This method allow you to draw not recognized shape",
            "itemtype": "method",
            "name": "drawShapeNotRecognized",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "inkRanges",
                    "description": "",
                    "type": "AnalyzerInkRange[]"
                },
                {
                    "name": "shapeNotRecognized",
                    "description": "",
                    "type": "ShapeNotRecognized"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 287,
            "description": "Draw shape primitive",
            "itemtype": "method",
            "name": "drawShapePrimitive",
            "params": [
                {
                    "name": "primitive",
                    "description": "",
                    "type": "AbstractShapePrimitive"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 303,
            "description": "Draw shape line",
            "itemtype": "method",
            "name": "drawShapeLine",
            "params": [
                {
                    "name": "shapeLine",
                    "description": "",
                    "type": "ShapeLine"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 322,
            "description": "Draw an ellipse arc on context",
            "itemtype": "method",
            "name": "drawEllipseArc",
            "params": [
                {
                    "name": "centerPoint",
                    "description": "",
                    "type": "ShapePoint"
                },
                {
                    "name": "maxRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "minRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "startAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "sweepAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Point[]"
            },
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 400,
            "description": "Draw shape ellipse",
            "itemtype": "method",
            "name": "drawShapeEllipse",
            "params": [
                {
                    "name": "shapeEllipse",
                    "description": "",
                    "type": "ShapeEllipse"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/analyzerRenderer.js",
            "line": 427,
            "description": "Get the bounding box of primitive",
            "itemtype": "method",
            "name": "getPrimitiveBoundingBox",
            "params": [
                {
                    "name": "primitive",
                    "description": "",
                    "type": "AbstractShapePrimitive"
                }
            ],
            "return": {
                "description": "rectangle",
                "type": "Rectangle"
            },
            "class": "AnalyzerRenderer"
        },
        {
            "file": "src/rendering/mathRenderer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "MathRenderer"
        },
        {
            "file": "src/rendering/mathRenderer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "MathRenderer"
        },
        {
            "file": "src/rendering/mathRenderer.js",
            "line": 27,
            "description": "Draw math strokes on HTML5 canvas. Scratch out results are use to redraw HTML5 Canvas",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "MathDocument"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MathRenderer"
        },
        {
            "file": "src/rendering/mathRenderer.js",
            "line": 45,
            "description": "Remove scratch out from input strokes",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "mathScratchOutResults",
                    "description": "",
                    "type": "MathScratchOut[]"
                }
            ],
            "return": {
                "description": "notScratchOutStrokes",
                "type": "Stroke[]"
            },
            "class": "MathRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 15,
            "description": "Inheritance property",
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 20,
            "description": "Constructor property",
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 25,
            "description": "Draw music strokes on HTML5 canvas. Scratch out results are use to redraw HTML5 Canvas",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "MusicDocument"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 39,
            "description": "Remove scratch out from input strokes",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "scratchOutResults",
                    "description": "",
                    "type": "MusicScratchOut[]"
                }
            ],
            "return": {
                "description": "notScratchOutStrokes",
                "type": "Stroke[]"
            },
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 75,
            "description": "Draw staff on the HTML5 canvas",
            "itemtype": "method",
            "name": "staffDrawing",
            "params": [
                {
                    "name": "staff",
                    "description": "",
                    "type": "MusicStaff"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 103,
            "description": "Draw components",
            "itemtype": "method",
            "name": "drawComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractComponent[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 148,
            "description": "Draw accidental",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawAccidental",
            "params": [
                {
                    "name": "accidental",
                    "description": "",
                    "type": "MusicAccidentalInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 161,
            "description": "Draw arpeggiate",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawArpeggiate",
            "params": [
                {
                    "name": "arpeggiate",
                    "description": "",
                    "type": "MusicArpeggiateInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 174,
            "description": "Draw bar",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawBar",
            "params": [
                {
                    "name": "bar",
                    "description": "",
                    "type": "MusicBarInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 187,
            "description": "Draw beam",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawBeam",
            "params": [
                {
                    "name": "beam",
                    "description": "",
                    "type": "MusicBeamInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 200,
            "description": "Draw clef",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawClef",
            "params": [
                {
                    "name": "clef",
                    "description": "",
                    "type": "MusicClefInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 234,
            "description": "Draw decoration",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawDecoration",
            "params": [
                {
                    "name": "decoration",
                    "description": "",
                    "type": "MusicDecorationInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 247,
            "description": "Draw dots",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawDots",
            "params": [
                {
                    "name": "dots",
                    "description": "",
                    "type": "MusicDotsInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 260,
            "description": "Draw head",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawHead",
            "params": [
                {
                    "name": "head",
                    "description": "",
                    "type": "MusicHeadInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 273,
            "description": "Draw ledgerLine",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawLedgerLine",
            "params": [
                {
                    "name": "ledgerLine",
                    "description": "",
                    "type": "MusicLedgerLineInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 286,
            "description": "Draw rest",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawRest",
            "params": [
                {
                    "name": "rest",
                    "description": "",
                    "type": "MusicRestInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 299,
            "description": "Draw stem",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawStem",
            "params": [
                {
                    "name": "stem",
                    "description": "",
                    "type": "MusicStemInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 312,
            "description": "Draw tieOrSlur",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawTieOrSlur",
            "params": [
                {
                    "name": "tieOrSlur",
                    "description": "",
                    "type": "MusicTieOrSlurInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/musicRenderer.js",
            "line": 325,
            "description": "Draw timeSignature",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawTimeSignature",
            "params": [
                {
                    "name": "timeSignature",
                    "description": "",
                    "type": "MusicTimeSignatureInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "MusicRenderer"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 31,
            "description": "Get the color renderer parameter",
            "itemtype": "method",
            "name": "getColor",
            "return": {
                "description": "The color of the ink",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 41,
            "description": "Set the color renderer parameter",
            "itemtype": "method",
            "name": "setColor",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 51,
            "description": "Get the rect renderer parameter",
            "itemtype": "method",
            "name": "getRectColor",
            "return": {
                "description": "the rectangle color",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 61,
            "description": "Set the rect renderer parameter",
            "itemtype": "method",
            "name": "setRectColor",
            "params": [
                {
                    "name": "rectColor",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 71,
            "description": "Get the font renderer parameter",
            "itemtype": "method",
            "name": "getFont",
            "return": {
                "description": "The font",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 81,
            "description": "Set the font renderer parameter",
            "itemtype": "method",
            "name": "setFont",
            "params": [
                {
                    "name": "font",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 91,
            "description": "Get the decoration renderer parameter",
            "itemtype": "method",
            "name": "getDecoration",
            "return": {
                "description": "The decoration",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 101,
            "description": "Set the decoration renderer parameter",
            "itemtype": "method",
            "name": "setDecoration",
            "params": [
                {
                    "name": "decoration",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 111,
            "description": "Get the width renderer parameter",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "The ink width",
                "type": "Number"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 121,
            "description": "Set the width renderer parameter",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 131,
            "description": "Get the pressure renderer parameter",
            "itemtype": "method",
            "name": "getPressureType",
            "return": {
                "description": "The pressure type",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 141,
            "description": "Set the pressure renderer parameter",
            "itemtype": "method",
            "name": "setPressureType",
            "params": [
                {
                    "name": "pressureType",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 151,
            "description": "Get the alpha renderer parameter",
            "itemtype": "method",
            "name": "getAlpha",
            "return": {
                "description": "The alpha",
                "type": "String"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 161,
            "description": "Set the alpha renderer parameter",
            "itemtype": "method",
            "name": "setAlpha",
            "params": [
                {
                    "name": "alpha",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 171,
            "description": "Get fade out ink fore HTML5 canvas",
            "itemtype": "method",
            "name": "getDoFadeOutLoop",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 181,
            "description": "Set fade out ink fore HTML5 canvas",
            "itemtype": "method",
            "name": "setDoFadeOutLoop",
            "params": [
                {
                    "name": "doFadeOutLoop",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 191,
            "description": "This property is use to show or not show the bounding box",
            "itemtype": "method",
            "name": "getShowBoundingBoxes",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/renderingParameters.js",
            "line": 201,
            "description": "Set the show state of bounding box",
            "itemtype": "method",
            "name": "setShowBoundingBoxes",
            "params": [
                {
                    "name": "showBoundingBoxes",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "RenderingParameters"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 14,
            "description": "Inheritance property",
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 19,
            "description": "Constructor property",
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 24,
            "description": "Draw shape strokes on HTML5 canvas",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "ShapeDocument"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 37,
            "description": "Draw components",
            "itemtype": "method",
            "name": "drawComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "Object[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 60,
            "description": "Draw the shapes",
            "itemtype": "method",
            "name": "drawShapes",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "shapes",
                    "description": "",
                    "type": "ShapeSegment[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 87,
            "description": "This method allow you to draw recognized shape",
            "itemtype": "method",
            "name": "drawShapeRecognized",
            "params": [
                {
                    "name": "shapeRecognized",
                    "description": "",
                    "type": "ShapeRecognized"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 119,
            "description": "This method allow you to draw not recognized shape",
            "itemtype": "method",
            "name": "drawShapeNotRecognized",
            "params": [
                {
                    "name": "inkRanges",
                    "description": "",
                    "type": "ShapeInkRange[]"
                },
                {
                    "name": "shapeNotRecognized",
                    "description": "",
                    "type": "ShapeNotRecognized"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 136,
            "description": "Draw shape primitive",
            "itemtype": "method",
            "name": "drawShapePrimitive",
            "params": [
                {
                    "name": "primitive",
                    "description": "",
                    "type": "AbstractShapePrimitive"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 152,
            "description": "Draw shape line",
            "itemtype": "method",
            "name": "drawShapeLine",
            "params": [
                {
                    "name": "shapeLine",
                    "description": "",
                    "type": "ShapeLine"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 173,
            "description": "Draw an ellipse arc on context",
            "itemtype": "method",
            "name": "drawEllipseArc",
            "params": [
                {
                    "name": "centerPoint",
                    "description": "",
                    "type": "ShapePoint"
                },
                {
                    "name": "maxRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "minRadius",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "orientation",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "startAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "sweepAngle",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Point[]"
            },
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 251,
            "description": "Draw shape ellipse",
            "itemtype": "method",
            "name": "drawShapeEllipse",
            "params": [
                {
                    "name": "shapeEllipse",
                    "description": "",
                    "type": "ShapeEllipse"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/shapeRenderer.js",
            "line": 279,
            "description": "Get the bounding box of primitive",
            "itemtype": "method",
            "name": "getPrimitiveBoundingBox",
            "params": [
                {
                    "name": "primitive",
                    "description": "",
                    "type": "AbstractShapePrimitive"
                }
            ],
            "return": {
                "description": "the bounding box",
                "type": "Object"
            },
            "class": "ShapeRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 17,
            "description": "Inheritance property",
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 22,
            "description": "Constructor property",
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 27,
            "description": "Draw text strokes on HTML5 canvas. Scratch out results are use to redraw HTML5 Canvas",
            "itemtype": "method",
            "name": "drawRecognitionResult",
            "params": [
                {
                    "name": "strokes",
                    "description": "",
                    "type": "Stroke[]"
                },
                {
                    "name": "recognitionResult",
                    "description": "",
                    "type": "TextDocument"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 40,
            "description": "Draw input units",
            "itemtype": "method",
            "name": "drawInputUnits",
            "params": [
                {
                    "name": "inputUnits",
                    "description": "",
                    "type": "TextInputUnit[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 54,
            "description": "Draw components",
            "itemtype": "method",
            "name": "drawComponents",
            "params": [
                {
                    "name": "components",
                    "description": "",
                    "type": "AbstractTextInputComponent[]"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 79,
            "description": "Draw char",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawChar",
            "params": [
                {
                    "name": "char",
                    "description": "",
                    "type": "CharInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 92,
            "description": "Draw character",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawCharacter",
            "params": [
                {
                    "name": "character",
                    "description": "",
                    "type": "CharacterInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        },
        {
            "file": "src/rendering/textRenderer.js",
            "line": 105,
            "description": "Draw string",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "drawString",
            "params": [
                {
                    "name": "string",
                    "description": "",
                    "type": "StringInputComponent"
                },
                {
                    "name": "context",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "parameters",
                    "description": "",
                    "type": "RenderingParameters",
                    "optional": true
                }
            ],
            "class": "TextRenderer"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/point.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/point.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:94"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:114"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:154"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:174"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/quadraticPoint.js:194"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:20"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/common/generic/rectangle.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:40"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/common/generic/rectangle.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:60"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/generic/rectangle.js:114"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/abstractWSMessage.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/inkManager.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/mathUtils.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/mathUtils.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/common/mathUtils.js:112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/analyzer/analyzerParameter.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/analyzer/analyzerParameter.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/analyzer/analyzerRecognitionData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/analyzer/analyzerRecognitionInput.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/analyzer/analyzerRecognitionInput.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/abstractComponent.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/stroke.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/stroke.js:60"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/stroke.js:92"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/stroke.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/components/stroke.js:135"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/abstractContinueRequestWSMessage.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/abstractRecognitionData.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/abstractRecognitionData.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/abstractRecognitionData.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/challengeRequestWSMessage.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/challengeRequestWSMessage.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/challengeRequestWSMessage.js:67"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/initRequestWSMessage.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/generic/recognitionLanguagesData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathContinueRequestWSMessage.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathParameter.js:27"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/input/math/mathParameter.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathParameter.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathParameter.js:67"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/input/math/mathParameter.js:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathParameter.js:87"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/math/mathParameter.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionInput.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionInput.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionInput.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionInput.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathRecognitionInput.js:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathStartRequestWSMessage.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/math/mathStartRequestWSMessage.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/abstractMusicInputComponent.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicAccidentalInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicArpeggiateInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBarInput.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBarInput.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBarInputComponent.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInput.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInput.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInput.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInput.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInput.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicBeamInputComponent.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicClefInput.js:16"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicClefInput.js:36"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicClefInput.js:56"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicClefInputComponent.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicDecorationInput.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicDecorationInput.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicDecorationInputComponent.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicDotsInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicHeadInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicRestInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicStemInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicTieOrSlurInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/components/musicTimeSignatureInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicParameter.js:27"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/input/music/musicParameter.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicParameter.js:47"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/input/music/musicParameter.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicParameter.js:67"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/music/musicParameter.js:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicParameter.js:87"
        },
        {
            "message": "param name missing: {MusicStaff}",
            "line": " src/input/music/musicParameter.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicParameter.js:107"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/music/musicParameter.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicRecognitionInput.js:124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicStaff.js:16"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/music/musicStaff.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicStaff.js:36"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/music/musicStaff.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/music/musicStaff.js:56"
        },
        {
            "message": "param name missing: {Number}",
            "line": " src/input/music/musicStaff.js:66"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeParameter.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeParameter.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeParameter.js:65"
        },
        {
            "message": "param name missing: {Array}",
            "line": " src/input/shape/shapeParameter.js:75"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeRecognitionData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeRecognitionInput.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeRecognitionInput.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/shape/shapeRecognitionInput.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/abstractTextInputComponent.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/charInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/characterInputComponent.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/characterInputComponentAlternate.js:15"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/characterInputComponentAlternate.js:35"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/components/stringInputComponent.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textContinueRequestWSMessage.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textInputUnit.js:15"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textInputUnit.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textInputUnit.js:35"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:25"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:65"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:105"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textParameter.js:165"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:153"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textProperties.js:213"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textRecognitionData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textRecognitionInput.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textRecognitionInput.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textStartRequestWSMessage.js:26"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/input/text/textStartRequestWSMessage.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:100"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:137"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/networking/networkInterface.js:154"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCell.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:68"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:78"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:88"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:98"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:128"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:138"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerCellData.js:148"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerDocument.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerDocument.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerDocument.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerDocument.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerElement.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerElementReference.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerElementReference.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerGroup.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerGroup.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerGroup.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerInkRange.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerInkRange.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerInkRange.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerLine.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerLineData.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerLineData.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerRecognizedStroke.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerRecognizedStroke.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerRecognizedStroke.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerStrokeType.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerStrokeType.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTable.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTable.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTable.js:61"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTable.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTableData.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTableData.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLine.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLine.js:48"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLine.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLine.js:68"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:94"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerTextLineData.js:104"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerUnderline.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerUnderline.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerUnderlineData.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/analyzer/analyzerUnderlineData.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/generic/abstractRecoResponseWSMessage.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/generic/abstractResult.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/generic/challengeResponseWSMessage.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/generic/errorResponseWSMessage.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathDocument.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathDocument.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathInkRange.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathInkRange.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathInkRange.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathLaTexResultElement.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathMathMLResultElement.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNode.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNode.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNonTerminalNode.js:111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNonTerminalNode.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNonTerminalNode.js:131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathNonTerminalNode.js:141"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResponseWSMessage.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResultElement.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResultElement.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResultElement.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathResultElement.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathRuleNode.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathRuleNode.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathScratchOut.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathScratchOut.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathSymbolTreeResultElement.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathTerminalNode.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathTerminalNode.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathTerminalNode.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathTerminalNodeCandidate.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/math/mathTerminalNodeCandidate.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicAccidental.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicAnnotation.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicArpeggiate.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBar.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBar.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBar.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBeam.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBeam.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicBeam.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:67"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:87"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:127"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:137"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:147"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicChord.js:157"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicClef.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicClef.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicClef.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicDecoration.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicDecoration.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicDocument.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicDocument.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicDots.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicElement.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicElement.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicHead.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicInputRange.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicInputRange.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicInputRange.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicKeySignature.js:33"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicKeySignature.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicKeySignatureData.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicKeySignatureData.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:63"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:73"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:83"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:93"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:103"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:113"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:153"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:183"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:193"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:203"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:213"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:243"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicNote.js:253"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicPart.js:83"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicPitchData.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicPitchData.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicPitchData.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:46"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:56"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:66"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:86"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:96"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:116"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicRest.js:126"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicResultElement.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicResultElement.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicResultElement.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicScore.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicScoreTreeResultElement.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicScratchOut.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicScratchOut.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicSlur.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicStem.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTie.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeModificationData.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeModificationData.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeModificationData.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeModificationData.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeSignature.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeSignature.js:41"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTimeSignature.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTuplet.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTuplet.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTuplet.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicTupletBracket.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/music/musicXMLResultElement.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:32"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:42"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:52"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:72"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractDecoratedShape.js:82"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractShapePrimitive.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractShapePrimitive.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/abstractShapePrimitive.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeCandidate.js:17"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeCandidate.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeCandidate.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeCandidate.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeCandidate.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeDocument.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:34"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeEllipse.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeInkRange.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeInkRange.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeInkRange.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeInkRange.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeLine.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeLine.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeRecognized.js:44"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeRecognized.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeRecognized.js:64"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeRecognized.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeScratchOut.js:32"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:40"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:50"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:60"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:70"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:80"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/shape/shapeSegment.js:90"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:37"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:57"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:67"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textCandidate.js:77"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textDocument.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textDocument.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textDocument.js:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textDocument.js:59"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textResponseWSMessage.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textSegment.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textSegment.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textSegmentResult.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textSegmentResult.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textTagItem.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/output/text/textTagItem.js:28"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractRecognizer.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:90"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:107"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/abstractWSRecognizer.js:137"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/analyzerRecognizer.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/analyzerRecognizer.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathRecognizer.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathRecognizer.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathWSRecognizer.js:69"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathWSRecognizer.js:89"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathWSRecognizer.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/mathWSRecognizer.js:123"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/musicRecognizer.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/musicRecognizer.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/shapeRecognizer.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/shapeRecognizer.js:47"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/shapeRecognizer.js:86"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textRecognizer.js:29"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textRecognizer.js:49"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textWSRecognizer.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textWSRecognizer.js:91"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textWSRecognizer.js:110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/recognition/textWSRecognizer.js:125"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/abstractRenderer.js:16"
        },
        {
            "message": "unknown tag: result",
            "line": " src/rendering/abstractRenderer.js:433"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/abstractRenderer.js:672"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/analyzerRenderer.js:322"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/analyzerRenderer.js:427"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/mathRenderer.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/musicRenderer.js:39"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:31"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:51"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:91"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:151"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:171"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/renderingParameters.js:191"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/shapeRenderer.js:173"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src/rendering/shapeRenderer.js:279"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/common/generic/quadraticPoint.js:24"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/common/generic/quadraticPoint.js:29"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/analyzer/analyzerParameter.js:18"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/analyzer/analyzerParameter.js:23"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/analyzer/analyzerRecognitionData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/analyzer/analyzerRecognitionData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/analyzer/analyzerRecognitionInput.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/analyzer/analyzerRecognitionInput.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/components/stroke.js:18"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/components/stroke.js:23"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/abstractContinueRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/abstractContinueRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type",
            "line": " src/input/generic/abstractRecognitionData.js:53"
        },
        {
            "message": "Missing item type",
            "line": " src/input/generic/abstractRecognitionData.js:60"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/abstractStartRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/abstractStartRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/challengeRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/challengeRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/initRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/initRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/recognitionLanguagesData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/recognitionLanguagesData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/generic/resetRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/generic/resetRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/math/mathContinueRequestWSMessage.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/math/mathContinueRequestWSMessage.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/math/mathParameter.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/math/mathParameter.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/math/mathRecognitionData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/math/mathRecognitionData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/math/mathRecognitionInput.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/math/mathRecognitionInput.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/math/mathStartRequestWSMessage.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/math/mathStartRequestWSMessage.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/abstractMusicInputComponent.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/abstractMusicInputComponent.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicAccidentalInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicAccidentalInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicArpeggiateInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicArpeggiateInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicBarInputComponent.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicBarInputComponent.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicBeamInputComponent.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicBeamInputComponent.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicClefInputComponent.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicClefInputComponent.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicDecorationInputComponent.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicDecorationInputComponent.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicDotsInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicDotsInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicHeadInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicHeadInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicLedgerLineInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicLedgerLineInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicRestInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicRestInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicStemInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicStemInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicTieOrSlurInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicTieOrSlurInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/components/musicTimeSignatureInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/components/musicTimeSignatureInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/musicParameter.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/musicParameter.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/musicRecognitionData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/musicRecognitionData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/music/musicRecognitionInput.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/music/musicRecognitionInput.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/shape/shapeParameter.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/shape/shapeParameter.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/shape/shapeRecognitionData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/shape/shapeRecognitionData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/shape/shapeRecognitionInput.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/shape/shapeRecognitionInput.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/components/abstractTextInputComponent.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/components/abstractTextInputComponent.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/components/charInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/components/charInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/components/characterInputComponent.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/components/characterInputComponent.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/components/stringInputComponent.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/components/stringInputComponent.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/textContinueRequestWSMessage.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/textContinueRequestWSMessage.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/textParameter.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/textParameter.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/textRecognitionData.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/textRecognitionData.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/textRecognitionInput.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/textRecognitionInput.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/input/text/textStartRequestWSMessage.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/input/text/textStartRequestWSMessage.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerCell.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerCell.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerDocument.js:34"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerDocument.js:39"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerGroup.js:24"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerGroup.js:29"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerLine.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerLine.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerPointData.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerPointData.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerTable.js:31"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerTable.js:36"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerTextLine.js:28"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerTextLine.js:33"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/analyzer/analyzerUnderline.js:23"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/analyzer/analyzerUnderline.js:28"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/generic/abstractRecoResponseWSMessage.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/generic/abstractRecoResponseWSMessage.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/generic/challengeResponseWSMessage.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/generic/challengeResponseWSMessage.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/generic/errorResponseWSMessage.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/generic/errorResponseWSMessage.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/generic/initResponseWSMessage.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/generic/initResponseWSMessage.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathExponentiableNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathExponentiableNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathExpressionNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathExpressionNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathFenceRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathFenceRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathFractionRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathFractionRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathHorizontalPairRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathHorizontalPairRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathIdentityRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathIdentityRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathLaTexResultElement.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathLaTexResultElement.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathLeftFenceRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathLeftFenceRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathMathMLResultElement.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathMathMLResultElement.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathNonTerminalNode.js:101"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathNonTerminalNode.js:106"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathOverscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathOverscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathPreSuperscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathPreSuperscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathResponseWSMessage.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathResponseWSMessage.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathRuleNode.js:100"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathRuleNode.js:105"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSqrtNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSqrtNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSqrtRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSqrtRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSubSuperscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSubSuperscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSubscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSubscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSuperscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSuperscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSymbolTreeResultElement.js:98"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSymbolTreeResultElement.js:103"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathSystemNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathSystemNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathTermNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathTermNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathTerminalNode.js:27"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathTerminalNode.js:32"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathUnderOverscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathUnderOverscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathUnderscriptRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathUnderscriptRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathVectorNonTerminalNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathVectorNonTerminalNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/math/mathVerticalPairRuleNode.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/math/mathVerticalPairRuleNode.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicAccidental.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicAccidental.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicAnnotation.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicAnnotation.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicArpeggiate.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicArpeggiate.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicBar.js:24"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicBar.js:29"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicBeam.js:21"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicBeam.js:26"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicChord.js:47"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicChord.js:52"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicClef.js:21"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicClef.js:26"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicDecoration.js:20"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicDecoration.js:25"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicDots.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicDots.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicHead.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicHead.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicKeySignature.js:23"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicKeySignature.js:28"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicLedgerLine.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicLedgerLine.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicNote.js:53"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicNote.js:58"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicRest.js:36"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicRest.js:41"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicScoreTreeResultElement.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicScoreTreeResultElement.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicSlur.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicSlur.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicStem.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicStem.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicTie.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicTie.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicTimeSignature.js:21"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicTimeSignature.js:26"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicTuplet.js:24"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicTuplet.js:29"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicTupletBracket.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicTupletBracket.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/music/musicXMLResultElement.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/music/musicXMLResultElement.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/abstractDecoratedShape.js:22"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/abstractDecoratedShape.js:27"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeEllipse.js:24"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeEllipse.js:29"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeErased.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeErased.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeLine.js:20"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeLine.js:25"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeNotRecognized.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeNotRecognized.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapePoint.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapePoint.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeRecognized.js:34"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeRecognized.js:39"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/shape/shapeScratchOut.js:22"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/shape/shapeScratchOut.js:27"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/text/textResponseWSMessage.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/text/textResponseWSMessage.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/text/textResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/text/textResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/output/text/textSegmentResult.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/output/text/textSegmentResult.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/abstractWSRecognizer.js:16"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/abstractWSRecognizer.js:21"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/analyzerRecognizer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/analyzerRecognizer.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/mathRecognizer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/mathRecognizer.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/mathWSRecognizer.js:59"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/mathWSRecognizer.js:64"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/musicRecognizer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/musicRecognizer.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/shapeRecognizer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/shapeRecognizer.js:22"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/textRecognizer.js:19"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/textRecognizer.js:24"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/recognition/textWSRecognizer.js:61"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/recognition/textWSRecognizer.js:66"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/rendering/analyzerRenderer.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/rendering/analyzerRenderer.js:20"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/rendering/mathRenderer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/rendering/mathRenderer.js:22"
        },
        {
            "message": "Missing item type\nRemove scratch out from input strokes",
            "line": " src/rendering/mathRenderer.js:45"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/rendering/musicRenderer.js:15"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/rendering/musicRenderer.js:20"
        },
        {
            "message": "Missing item type\nRemove scratch out from input strokes",
            "line": " src/rendering/musicRenderer.js:39"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/rendering/shapeRenderer.js:14"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/rendering/shapeRenderer.js:19"
        },
        {
            "message": "Missing item type\nInheritance property",
            "line": " src/rendering/textRenderer.js:17"
        },
        {
            "message": "Missing item type\nConstructor property",
            "line": " src/rendering/textRenderer.js:22"
        }
    ]
}